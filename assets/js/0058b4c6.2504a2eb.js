"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[849],{86164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Introduction","href":"/docs/","docId":"README","unlisted":false},{"type":"link","label":"What\'s New","href":"/docs/whats-new","docId":"whats-new","unlisted":false},{"type":"link","label":"Upgrade Guide","href":"/docs/upgrade-guide","docId":"upgrade-guide","unlisted":false},{"type":"link","label":"Contributing to deck.gl","href":"/docs/contributing","docId":"contributing","unlisted":false},{"type":"link","label":"Frequently Asked Questions","href":"/docs/faq","docId":"faq","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Installing and Running Examples","href":"/docs/get-started/getting-started","docId":"get-started/getting-started","unlisted":false},{"type":"link","label":"Using deck.gl Standalone","href":"/docs/get-started/using-standalone","docId":"get-started/using-standalone","unlisted":false},{"type":"link","label":"Using deck.gl with React","href":"/docs/get-started/using-with-react","docId":"get-started/using-with-react","unlisted":false},{"type":"link","label":"Using deck.gl with TypeScript","href":"/docs/get-started/using-with-typescript","docId":"get-started/using-with-typescript","unlisted":false},{"type":"link","label":"Base Maps","href":"/docs/get-started/using-with-map","docId":"get-started/using-with-map","unlisted":false},{"type":"link","label":"Learning Resources","href":"/docs/get-started/learning-resources","docId":"get-started/learning-resources","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Developer Guide","items":[{"type":"category","label":"Using the API","items":[{"type":"link","label":"Using Layers","href":"/docs/developer-guide/using-layers","docId":"developer-guide/using-layers","unlisted":false},{"type":"link","label":"Interactivity","href":"/docs/developer-guide/interactivity","docId":"developer-guide/interactivity","unlisted":false},{"type":"link","label":"Coordinate Systems","href":"/docs/developer-guide/coordinate-systems","docId":"developer-guide/coordinate-systems","unlisted":false},{"type":"link","label":"Views and Projections","href":"/docs/developer-guide/views","docId":"developer-guide/views","unlisted":false},{"type":"link","label":"Animations and Transitions","href":"/docs/developer-guide/animations-and-transitions","docId":"developer-guide/animations-and-transitions","unlisted":false},{"type":"link","label":"Loading Data","href":"/docs/developer-guide/loading-data","docId":"developer-guide/loading-data","unlisted":false},{"type":"link","label":"Using Effects","href":"/docs/developer-guide/using-effects","docId":"developer-guide/using-effects","unlisted":false},{"type":"link","label":"Performance Optimization","href":"/docs/developer-guide/performance","docId":"developer-guide/performance","unlisted":false},{"type":"link","label":"Tips and Tricks","href":"/docs/developer-guide/tips-and-tricks","docId":"developer-guide/tips-and-tricks","unlisted":false},{"type":"link","label":"Building Apps","href":"/docs/developer-guide/building-apps","docId":"developer-guide/building-apps","unlisted":false},{"type":"link","label":"Debugging","href":"/docs/developer-guide/debugging","docId":"developer-guide/debugging","unlisted":false},{"type":"link","label":"Testing","href":"/docs/developer-guide/testing","docId":"developer-guide/testing","unlisted":false},{"type":"link","label":"WebGPU","href":"/docs/developer-guide/webgpu","docId":"developer-guide/webgpu","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Supported Base Maps","items":[{"type":"link","label":"Using with ArcGIS","href":"/docs/developer-guide/base-maps/using-with-arcgis","docId":"developer-guide/base-maps/using-with-arcgis","unlisted":false},{"type":"link","label":"Using with Google Maps Platform","href":"/docs/developer-guide/base-maps/using-with-google-maps","docId":"developer-guide/base-maps/using-with-google-maps","unlisted":false},{"type":"link","label":"Using with Mapbox","href":"/docs/developer-guide/base-maps/using-with-mapbox","docId":"developer-guide/base-maps/using-with-mapbox","unlisted":false},{"type":"link","label":"Using with MapLibre","href":"/docs/developer-guide/base-maps/using-with-maplibre","docId":"developer-guide/base-maps/using-with-maplibre","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Writing Custom Layers","items":[{"type":"link","label":"Writing Your Own Layer","href":"/docs/developer-guide/custom-layers/","docId":"developer-guide/custom-layers/README","unlisted":false},{"type":"link","label":"Layer Attributes","href":"/docs/developer-guide/custom-layers/layer-attributes","docId":"developer-guide/custom-layers/layer-attributes","unlisted":false},{"type":"link","label":"Layer Lifecycle","href":"/docs/developer-guide/custom-layers/layer-lifecycle","docId":"developer-guide/custom-layers/layer-lifecycle","unlisted":false},{"type":"link","label":"Picking","href":"/docs/developer-guide/custom-layers/picking","docId":"developer-guide/custom-layers/picking","unlisted":false},{"type":"link","label":"Composite Layers","href":"/docs/developer-guide/custom-layers/composite-layers","docId":"developer-guide/custom-layers/composite-layers","unlisted":false},{"type":"link","label":"Subclassed Layers","href":"/docs/developer-guide/custom-layers/subclassed-layers","docId":"developer-guide/custom-layers/subclassed-layers","unlisted":false},{"type":"link","label":"Creating Layer Extensions","href":"/docs/developer-guide/custom-layers/layer-extensions","docId":"developer-guide/custom-layers/layer-extensions","unlisted":false},{"type":"link","label":"Primitive Layers","href":"/docs/developer-guide/custom-layers/primitive-layers","docId":"developer-guide/custom-layers/primitive-layers","unlisted":false},{"type":"link","label":"Property Types","href":"/docs/developer-guide/custom-layers/prop-types","docId":"developer-guide/custom-layers/prop-types","unlisted":false},{"type":"link","label":"Attribute Management","href":"/docs/developer-guide/custom-layers/attribute-management","docId":"developer-guide/custom-layers/attribute-management","unlisted":false},{"type":"link","label":"Writing Shaders","href":"/docs/developer-guide/custom-layers/writing-shaders","docId":"developer-guide/custom-layers/writing-shaders","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"API Reference","items":[{"type":"category","label":"Core Classes","items":[{"type":"link","label":"Deck","href":"/docs/api-reference/core/deck","docId":"api-reference/core/deck","unlisted":false},{"type":"link","label":"AttributeManager","href":"/docs/api-reference/core/attribute-manager","docId":"api-reference/core/attribute-manager","unlisted":false},{"type":"link","label":"Widget","href":"/docs/api-reference/core/widget","docId":"api-reference/core/widget","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Layers","items":[{"type":"link","label":"Layer Catalog Overview","href":"/docs/api-reference/layers/","docId":"api-reference/layers/README","unlisted":false},{"type":"link","label":"Layer Class","href":"/docs/api-reference/core/layer","docId":"api-reference/core/layer","unlisted":false},{"type":"link","label":"CompositeLayer Class","href":"/docs/api-reference/core/composite-layer","docId":"api-reference/core/composite-layer","unlisted":false},{"type":"link","label":"A5Layer","href":"/docs/api-reference/geo-layers/a5-layer","docId":"api-reference/geo-layers/a5-layer","unlisted":false},{"type":"link","label":"ArcLayer","href":"/docs/api-reference/layers/arc-layer","docId":"api-reference/layers/arc-layer","unlisted":false},{"type":"link","label":"BitmapLayer","href":"/docs/api-reference/layers/bitmap-layer","docId":"api-reference/layers/bitmap-layer","unlisted":false},{"type":"link","label":"ColumnLayer","href":"/docs/api-reference/layers/column-layer","docId":"api-reference/layers/column-layer","unlisted":false},{"type":"link","label":"ContourLayer","href":"/docs/api-reference/aggregation-layers/contour-layer","docId":"api-reference/aggregation-layers/contour-layer","unlisted":false},{"type":"link","label":"GeohashLayer","href":"/docs/api-reference/geo-layers/geohash-layer","docId":"api-reference/geo-layers/geohash-layer","unlisted":false},{"type":"link","label":"GeoJsonLayer","href":"/docs/api-reference/layers/geojson-layer","docId":"api-reference/layers/geojson-layer","unlisted":false},{"type":"link","label":"GreatCircleLayer","href":"/docs/api-reference/geo-layers/great-circle-layer","docId":"api-reference/geo-layers/great-circle-layer","unlisted":false},{"type":"link","label":"GridCellLayer","href":"/docs/api-reference/layers/grid-cell-layer","docId":"api-reference/layers/grid-cell-layer","unlisted":false},{"type":"link","label":"GridLayer","href":"/docs/api-reference/aggregation-layers/grid-layer","docId":"api-reference/aggregation-layers/grid-layer","unlisted":false},{"type":"link","label":"H3ClusterLayer","href":"/docs/api-reference/geo-layers/h3-cluster-layer","docId":"api-reference/geo-layers/h3-cluster-layer","unlisted":false},{"type":"link","label":"H3HexagonLayer","href":"/docs/api-reference/geo-layers/h3-hexagon-layer","docId":"api-reference/geo-layers/h3-hexagon-layer","unlisted":false},{"type":"link","label":"HeatmapLayer","href":"/docs/api-reference/aggregation-layers/heatmap-layer","docId":"api-reference/aggregation-layers/heatmap-layer","unlisted":false},{"type":"link","label":"HexagonLayer","href":"/docs/api-reference/aggregation-layers/hexagon-layer","docId":"api-reference/aggregation-layers/hexagon-layer","unlisted":false},{"type":"link","label":"IconLayer","href":"/docs/api-reference/layers/icon-layer","docId":"api-reference/layers/icon-layer","unlisted":false},{"type":"link","label":"LineLayer","href":"/docs/api-reference/layers/line-layer","docId":"api-reference/layers/line-layer","unlisted":false},{"type":"link","label":"MVTLayer","href":"/docs/api-reference/geo-layers/mvt-layer","docId":"api-reference/geo-layers/mvt-layer","unlisted":false},{"type":"link","label":"PathLayer","href":"/docs/api-reference/layers/path-layer","docId":"api-reference/layers/path-layer","unlisted":false},{"type":"link","label":"PointCloudLayer","href":"/docs/api-reference/layers/point-cloud-layer","docId":"api-reference/layers/point-cloud-layer","unlisted":false},{"type":"link","label":"PolygonLayer","href":"/docs/api-reference/layers/polygon-layer","docId":"api-reference/layers/polygon-layer","unlisted":false},{"type":"link","label":"QuadkeyLayer","href":"/docs/api-reference/geo-layers/quadkey-layer","docId":"api-reference/geo-layers/quadkey-layer","unlisted":false},{"type":"link","label":"S2Layer","href":"/docs/api-reference/geo-layers/s2-layer","docId":"api-reference/geo-layers/s2-layer","unlisted":false},{"type":"link","label":"ScatterplotLayer","href":"/docs/api-reference/layers/scatterplot-layer","docId":"api-reference/layers/scatterplot-layer","unlisted":false},{"type":"link","label":"ScenegraphLayer","href":"/docs/api-reference/mesh-layers/scenegraph-layer","docId":"api-reference/mesh-layers/scenegraph-layer","unlisted":false},{"type":"link","label":"ScreenGridLayer","href":"/docs/api-reference/aggregation-layers/screen-grid-layer","docId":"api-reference/aggregation-layers/screen-grid-layer","unlisted":false},{"type":"link","label":"SimpleMeshLayer","href":"/docs/api-reference/mesh-layers/simple-mesh-layer","docId":"api-reference/mesh-layers/simple-mesh-layer","unlisted":false},{"type":"link","label":"SolidPolygonLayer","href":"/docs/api-reference/layers/solid-polygon-layer","docId":"api-reference/layers/solid-polygon-layer","unlisted":false},{"type":"link","label":"TerrainLayer","href":"/docs/api-reference/geo-layers/terrain-layer","docId":"api-reference/geo-layers/terrain-layer","unlisted":false},{"type":"link","label":"TextLayer","href":"/docs/api-reference/layers/text-layer","docId":"api-reference/layers/text-layer","unlisted":false},{"type":"link","label":"TileLayer","href":"/docs/api-reference/geo-layers/tile-layer","docId":"api-reference/geo-layers/tile-layer","unlisted":false},{"type":"link","label":"Tile3DLayer","href":"/docs/api-reference/geo-layers/tile-3d-layer","docId":"api-reference/geo-layers/tile-3d-layer","unlisted":false},{"type":"link","label":"TripsLayer","href":"/docs/api-reference/geo-layers/trips-layer","docId":"api-reference/geo-layers/trips-layer","unlisted":false},{"type":"link","label":"WMSLayer (Experimental)","href":"/docs/api-reference/geo-layers/wms-layer","docId":"api-reference/geo-layers/wms-layer","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Aggregation Layers","items":[{"type":"link","label":"Aggregation Layers","href":"/docs/api-reference/aggregation-layers/overview","docId":"api-reference/aggregation-layers/overview","unlisted":false},{"type":"link","label":"AggregationLayer (Experimental)","href":"/docs/api-reference/aggregation-layers/aggregation-layer","docId":"api-reference/aggregation-layers/aggregation-layer","unlisted":false},{"type":"link","label":"Aggregator Interface","href":"/docs/api-reference/aggregation-layers/aggregator","docId":"api-reference/aggregation-layers/aggregator","unlisted":false},{"type":"link","label":"CPUAggregator","href":"/docs/api-reference/aggregation-layers/cpu-aggregator","docId":"api-reference/aggregation-layers/cpu-aggregator","unlisted":false},{"type":"link","label":"WebGLAggregator","href":"/docs/api-reference/aggregation-layers/webgl-aggregator","docId":"api-reference/aggregation-layers/webgl-aggregator","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Scripting Interface","items":[{"type":"link","label":"DeckGL (Scripting Interface)","href":"/docs/api-reference/core/deckgl","docId":"api-reference/core/deckgl","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Shader Modules","items":[{"type":"link","label":"project (Shader Module)","href":"/docs/api-reference/core/project","docId":"api-reference/core/project","unlisted":false},{"type":"link","label":"project32 (Shader Module)","href":"/docs/api-reference/core/project32","docId":"api-reference/core/project32","unlisted":false},{"type":"link","label":"project64 (Shader Module)","href":"/docs/api-reference/core/project64","docId":"api-reference/core/project64","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Viewports","items":[{"type":"link","label":"Viewport","href":"/docs/api-reference/core/viewport","docId":"api-reference/core/viewport","unlisted":false},{"type":"link","label":"GlobeViewport (Experimental)","href":"/docs/api-reference/core/globe-viewport","docId":"api-reference/core/globe-viewport","unlisted":false},{"type":"link","label":"WebMercatorViewport","href":"/docs/api-reference/core/web-mercator-viewport","docId":"api-reference/core/web-mercator-viewport","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Views","items":[{"type":"link","label":"View Class","href":"/docs/api-reference/core/view","docId":"api-reference/core/view","unlisted":false},{"type":"link","label":"MapView","href":"/docs/api-reference/core/map-view","docId":"api-reference/core/map-view","unlisted":false},{"type":"link","label":"GlobeView (Experimental)","href":"/docs/api-reference/core/globe-view","docId":"api-reference/core/globe-view","unlisted":false},{"type":"link","label":"FirstPersonView","href":"/docs/api-reference/core/first-person-view","docId":"api-reference/core/first-person-view","unlisted":false},{"type":"link","label":"OrthographicView","href":"/docs/api-reference/core/orthographic-view","docId":"api-reference/core/orthographic-view","unlisted":false},{"type":"link","label":"OrbitView","href":"/docs/api-reference/core/orbit-view","docId":"api-reference/core/orbit-view","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Controllers","items":[{"type":"link","label":"Controller","href":"/docs/api-reference/core/controller","docId":"api-reference/core/controller","unlisted":false},{"type":"link","label":"MapController","href":"/docs/api-reference/core/map-controller","docId":"api-reference/core/map-controller","unlisted":false},{"type":"link","label":"GlobeController (Experimental)","href":"/docs/api-reference/core/globe-controller","docId":"api-reference/core/globe-controller","unlisted":false},{"type":"link","label":"FirstPersonController","href":"/docs/api-reference/core/first-person-controller","docId":"api-reference/core/first-person-controller","unlisted":false},{"type":"link","label":"OrthographicController","href":"/docs/api-reference/core/orthographic-controller","docId":"api-reference/core/orthographic-controller","unlisted":false},{"type":"link","label":"OrbitController","href":"/docs/api-reference/core/orbit-controller","docId":"api-reference/core/orbit-controller","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Transitions","items":[{"type":"link","label":"LinearInterpolator","href":"/docs/api-reference/core/linear-interpolator","docId":"api-reference/core/linear-interpolator","unlisted":false},{"type":"link","label":"FlyToInterpolator","href":"/docs/api-reference/core/fly-to-interpolator","docId":"api-reference/core/fly-to-interpolator","unlisted":false},{"type":"link","label":"TransitionInterpolator","href":"/docs/api-reference/core/transition-interpolator","docId":"api-reference/core/transition-interpolator","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Effects","items":[{"type":"link","label":"LightingEffect","href":"/docs/api-reference/core/lighting-effect","docId":"api-reference/core/lighting-effect","unlisted":false},{"type":"link","label":"PostProcessEffect","href":"/docs/api-reference/core/post-process-effect","docId":"api-reference/core/post-process-effect","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Lights","items":[{"type":"link","label":"AmbientLight","href":"/docs/api-reference/core/ambient-light","docId":"api-reference/core/ambient-light","unlisted":false},{"type":"link","label":"PointLight","href":"/docs/api-reference/core/point-light","docId":"api-reference/core/point-light","unlisted":false},{"type":"link","label":"DirectionalLight","href":"/docs/api-reference/core/directional-light","docId":"api-reference/core/directional-light","unlisted":false},{"type":"link","label":"CameraLight (Experimental)","href":"/docs/api-reference/core/camera-light","docId":"api-reference/core/camera-light","unlisted":false},{"type":"link","label":"SunLight (Experimental)","href":"/docs/api-reference/core/sun-light","docId":"api-reference/core/sun-light","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Submodule API Reference","items":[{"type":"category","label":"@deck.gl/arcgis","items":[{"type":"link","label":"@deck.gl/arcgis","href":"/docs/api-reference/arcgis/overview","docId":"api-reference/arcgis/overview","unlisted":false},{"type":"link","label":"DeckLayer","href":"/docs/api-reference/arcgis/deck-layer","docId":"api-reference/arcgis/deck-layer","unlisted":false},{"type":"link","label":"DeckRenderer","href":"/docs/api-reference/arcgis/deck-renderer","docId":"api-reference/arcgis/deck-renderer","unlisted":false},{"type":"link","label":"loadArcGISModules","href":"/docs/api-reference/arcgis/load-arcgis-modules","docId":"api-reference/arcgis/load-arcgis-modules","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/carto","items":[{"type":"link","label":"@deck.gl/carto","href":"/docs/api-reference/carto/overview","docId":"api-reference/carto/overview","unlisted":false},{"type":"link","label":"BASEMAP","href":"/docs/api-reference/carto/basemap","docId":"api-reference/carto/basemap","unlisted":false},{"type":"link","label":"fetchMap","href":"/docs/api-reference/carto/fetch-map","docId":"api-reference/carto/fetch-map","unlisted":false},{"type":"link","label":"Data Sources","href":"/docs/api-reference/carto/data-sources","docId":"api-reference/carto/data-sources","unlisted":false},{"type":"link","label":"ClusterTileLayer","href":"/docs/api-reference/carto/cluster-tile-layer","docId":"api-reference/carto/cluster-tile-layer","unlisted":false},{"type":"link","label":"H3TileLayer","href":"/docs/api-reference/carto/h3-tile-layer","docId":"api-reference/carto/h3-tile-layer","unlisted":false},{"type":"link","label":"HeatmapTileLayer","href":"/docs/api-reference/carto/heatmap-tile-layer","docId":"api-reference/carto/heatmap-tile-layer","unlisted":false},{"type":"link","label":"QuadbinTileLayer","href":"/docs/api-reference/carto/quadbin-tile-layer","docId":"api-reference/carto/quadbin-tile-layer","unlisted":false},{"type":"link","label":"RasterTileLayer","href":"/docs/api-reference/carto/raster-tile-layer","docId":"api-reference/carto/raster-tile-layer","unlisted":false},{"type":"link","label":"VectorTileLayer","href":"/docs/api-reference/carto/vector-tile-layer","docId":"api-reference/carto/vector-tile-layer","unlisted":false},{"type":"link","label":"Styles","href":"/docs/api-reference/carto/styles","docId":"api-reference/carto/styles","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/google-maps","items":[{"type":"link","label":"@deck.gl/google-maps","href":"/docs/api-reference/google-maps/overview","docId":"api-reference/google-maps/overview","unlisted":false},{"type":"link","label":"GoogleMapsOverlay","href":"/docs/api-reference/google-maps/google-maps-overlay","docId":"api-reference/google-maps/google-maps-overlay","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/extensions","items":[{"type":"link","label":"@deck.gl/extensions","href":"/docs/api-reference/extensions/overview","docId":"api-reference/extensions/overview","unlisted":false},{"type":"link","label":"BrushingExtension","href":"/docs/api-reference/extensions/brushing-extension","docId":"api-reference/extensions/brushing-extension","unlisted":false},{"type":"link","label":"ClipExtension","href":"/docs/api-reference/extensions/clip-extension","docId":"api-reference/extensions/clip-extension","unlisted":false},{"type":"link","label":"CollisionFilterExtension","href":"/docs/api-reference/extensions/collision-filter-extension","docId":"api-reference/extensions/collision-filter-extension","unlisted":false},{"type":"link","label":"DataFilterExtension","href":"/docs/api-reference/extensions/data-filter-extension","docId":"api-reference/extensions/data-filter-extension","unlisted":false},{"type":"link","label":"FillStyleExtension","href":"/docs/api-reference/extensions/fill-style-extension","docId":"api-reference/extensions/fill-style-extension","unlisted":false},{"type":"link","label":"Fp64Extension","href":"/docs/api-reference/extensions/fp64-extension","docId":"api-reference/extensions/fp64-extension","unlisted":false},{"type":"link","label":"MaskExtension","href":"/docs/api-reference/extensions/mask-extension","docId":"api-reference/extensions/mask-extension","unlisted":false},{"type":"link","label":"PathStyleExtension","href":"/docs/api-reference/extensions/path-style-extension","docId":"api-reference/extensions/path-style-extension","unlisted":false},{"type":"link","label":"TerrainExtension (Experimental)","href":"/docs/api-reference/extensions/terrain-extension","docId":"api-reference/extensions/terrain-extension","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/json","items":[{"type":"link","label":"@deck.gl/json","href":"/docs/api-reference/json/overview","docId":"api-reference/json/overview","unlisted":false},{"type":"link","label":"JSONConverter","href":"/docs/api-reference/json/json-converter","docId":"api-reference/json/json-converter","unlisted":false},{"type":"link","label":"JSONConfiguration","href":"/docs/api-reference/json/json-configuration","docId":"api-reference/json/json-configuration","unlisted":false},{"type":"link","label":"Conversion Reference","href":"/docs/api-reference/json/conversion-reference","docId":"api-reference/json/conversion-reference","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/mapbox","items":[{"type":"link","label":"@deck.gl/mapbox","href":"/docs/api-reference/mapbox/overview","docId":"api-reference/mapbox/overview","unlisted":false},{"type":"link","label":"MapboxOverlay","href":"/docs/api-reference/mapbox/mapbox-overlay","docId":"api-reference/mapbox/mapbox-overlay","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/react","items":[{"type":"link","label":"@deck.gl/react","href":"/docs/api-reference/react/overview","docId":"api-reference/react/overview","unlisted":false},{"type":"link","label":"DeckGL (React Component)","href":"/docs/api-reference/react/deckgl","docId":"api-reference/react/deckgl","unlisted":false},{"type":"link","label":"useWidget","href":"/docs/api-reference/react/use-widget","docId":"api-reference/react/use-widget","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/test-utils","items":[{"type":"link","label":"@deck.gl/test-utils","href":"/docs/api-reference/test-utils/overview","docId":"api-reference/test-utils/overview","unlisted":false},{"type":"link","label":"generateLayerTests","href":"/docs/api-reference/test-utils/generate-layer-tests","docId":"api-reference/test-utils/generate-layer-tests","unlisted":false},{"type":"link","label":"testLayer","href":"/docs/api-reference/test-utils/test-layer","docId":"api-reference/test-utils/test-layer","unlisted":false},{"type":"link","label":"SnapshotTestRunner","href":"/docs/api-reference/test-utils/snapshot-test-runner","docId":"api-reference/test-utils/snapshot-test-runner","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"@deck.gl/widgets","items":[{"type":"link","label":"@deck.gl/widgets","href":"/docs/api-reference/widgets/overview","docId":"api-reference/widgets/overview","unlisted":false},{"type":"link","label":"Styling Widgets","href":"/docs/api-reference/widgets/styling","docId":"api-reference/widgets/styling","unlisted":false},{"type":"link","label":"CompassWidget","href":"/docs/api-reference/widgets/compass-widget","docId":"api-reference/widgets/compass-widget","unlisted":false},{"type":"link","label":"ContextMenuWidget (Experimental)","href":"/docs/api-reference/widgets/context-menu-widget","docId":"api-reference/widgets/context-menu-widget","unlisted":false},{"type":"link","label":"FpsWidget (Experimental)","href":"/docs/api-reference/widgets/fps-widget","docId":"api-reference/widgets/fps-widget","unlisted":false},{"type":"link","label":"FullscreenWidget","href":"/docs/api-reference/widgets/fullscreen-widget","docId":"api-reference/widgets/fullscreen-widget","unlisted":false},{"type":"link","label":"GeocoderWidget (Experimental)","href":"/docs/api-reference/widgets/geocoder-widget","docId":"api-reference/widgets/geocoder-widget","unlisted":false},{"type":"link","label":"GimbalWidget","href":"/docs/api-reference/widgets/gimbal-widget","docId":"api-reference/widgets/gimbal-widget","unlisted":false},{"type":"link","label":"InfoWidget (Experimental)","href":"/docs/api-reference/widgets/info-widget","docId":"api-reference/widgets/info-widget","unlisted":false},{"type":"link","label":"LoadingWidget (Experimental)","href":"/docs/api-reference/widgets/loading-widget","docId":"api-reference/widgets/loading-widget","unlisted":false},{"type":"link","label":"ResetViewWidget","href":"/docs/api-reference/widgets/reset-view-widget","docId":"api-reference/widgets/reset-view-widget","unlisted":false},{"type":"link","label":"ScaleWidget (Experimental)","href":"/docs/api-reference/widgets/scale-widget","docId":"api-reference/widgets/scale-widget","unlisted":false},{"type":"link","label":"ScreenshotWidget","href":"/docs/api-reference/widgets/screenshot-widget","docId":"api-reference/widgets/screenshot-widget","unlisted":false},{"type":"link","label":"SplitterWidget (Experimental)","href":"/docs/api-reference/widgets/splitter-widget","docId":"api-reference/widgets/splitter-widget","unlisted":false},{"type":"link","label":"StatsWidget (Experimental)","href":"/docs/api-reference/widgets/stats-widget","docId":"api-reference/widgets/stats-widget","unlisted":false},{"type":"link","label":"ThemeWidget (Experimental)","href":"/docs/api-reference/widgets/theme-widget","docId":"api-reference/widgets/theme-widget","unlisted":false},{"type":"link","label":"TimelineWidget (Experimental)","href":"/docs/api-reference/widgets/timeline-widget","docId":"api-reference/widgets/timeline-widget","unlisted":false},{"type":"link","label":"ViewSelectorWidget (Experimental)","href":"/docs/api-reference/widgets/view-selector-widget","docId":"api-reference/widgets/view-selector-widget","unlisted":false},{"type":"link","label":"ZoomWidget","href":"/docs/api-reference/widgets/zoom-widget","docId":"api-reference/widgets/zoom-widget","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true}]},"docs":{"api-reference/aggregation-layers/aggregation-layer":{"id":"api-reference/aggregation-layers/aggregation-layer","title":"AggregationLayer (Experimental)","description":"AggregationLayer is the base class for all layers in @deck.gl/aggregation-layers module. It implements the most common tasks for aggregation with flexibility of customizations.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/aggregator":{"id":"api-reference/aggregation-layers/aggregator","title":"Aggregator Interface","description":"The Aggregator interface describes a type of class that performs aggregation.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/contour-layer":{"id":"api-reference/aggregation-layers/contour-layer","title":"ContourLayer","description":"The ContourLayer aggregates data into iso-lines or iso-bands for a given threshold and cell size. Isoline represents collection of line segments that separate the area above and below a given threshold. Isoband represents a collection of polygons (filled) that fill the area containing values in a given threshold range. To generate an Isoline single threshold value is needed, to generate an Isoband an array with two values needed. Data is first aggregated using given cell size and resulting scalar field is used to run Marching Squares algorithm that generates a set of vertices to form Isolines or Isobands. In below documentation Isoline and Isoband is referred as contour.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/cpu-aggregator":{"id":"api-reference/aggregation-layers/cpu-aggregator","title":"CPUAggregator","description":"The CPUAggregator implements the Aggregator interface by performing aggregation on the CPU.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/grid-layer":{"id":"api-reference/aggregation-layers/grid-layer","title":"GridLayer","description":"The GridLayer aggregates data into a grid-based heatmap. The color and height of a grid cell are determined based on the objects it contains.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/heatmap-layer":{"id":"api-reference/aggregation-layers/heatmap-layer","title":"HeatmapLayer","description":"HeatmapLayer can be used to visualize spatial distribution of data. It internally implements Gaussian Kernel Density Estimation to render heatmaps. Note that this layer does not support all platforms; see \\"limitations\\" section below.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/hexagon-layer":{"id":"api-reference/aggregation-layers/hexagon-layer","title":"HexagonLayer","description":"The HexagonLayer aggregates data into a hexagon-based heatmap. The color and height of a hexagon are determined based on the objects it contains.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/overview":{"id":"api-reference/aggregation-layers/overview","title":"Aggregation Layers","description":"Layers that aggregate the input data and visualize them in alternative representations, such as grid and hexagon binning, contour, and heatmap.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/screen-grid-layer":{"id":"api-reference/aggregation-layers/screen-grid-layer","title":"ScreenGridLayer","description":"The ScreenGridLayer aggregates data into histogram bins in screen space and renders them as a overlaid grid.","sidebar":"tutorialSidebar"},"api-reference/aggregation-layers/webgl-aggregator":{"id":"api-reference/aggregation-layers/webgl-aggregator","title":"WebGLAggregator","description":"The WebGLAggregator implements the Aggregator interface by performing aggregation on the GPU.","sidebar":"tutorialSidebar"},"api-reference/arcgis/deck-layer":{"id":"api-reference/arcgis/deck-layer","title":"DeckLayer","description":"This class inherits from the ArcGIS Layer class and can be added to maps created with the ArcGIS API for JavaScript.","sidebar":"tutorialSidebar"},"api-reference/arcgis/deck-renderer":{"id":"api-reference/arcgis/deck-renderer","title":"DeckRenderer","description":"This class is an experimental implementation of the ArcGIS ExternalRenderer interface and can be added to 3D views of maps created with the ArcGIS","sidebar":"tutorialSidebar"},"api-reference/arcgis/load-arcgis-modules":{"id":"api-reference/arcgis/load-arcgis-modules","title":"loadArcGISModules","description":"This utility function initializes the classes in this module by loading ArcGIS dependencies. Optionally, it can also load additional dependencies from the esri namespace.","sidebar":"tutorialSidebar"},"api-reference/arcgis/overview":{"id":"api-reference/arcgis/overview","title":"@deck.gl/arcgis","description":"Use deck.gl layers with the ArcGIS API for JavaScript.","sidebar":"tutorialSidebar"},"api-reference/carto/basemap":{"id":"api-reference/carto/basemap","title":"BASEMAP","description":"CARTO basemaps are available and they can be used without a token.","sidebar":"tutorialSidebar"},"api-reference/carto/cluster-tile-layer":{"id":"api-reference/carto/cluster-tile-layer","title":"ClusterTileLayer","description":"ClusterTileLayer is a layer for visualizing point data aggregated using spatial indexes like Quadbin or H3 with dynamic clustering. It provides efficient visualization of large point datasets with automatic clustering based on zoom level and customizable aggregation strategies. The layer automatically detects the spatial index type and renders cells accordingly.","sidebar":"tutorialSidebar"},"api-reference/carto/data-sources":{"id":"api-reference/carto/data-sources","title":"Data Sources","description":"To ease interacting with the CARTO platform, the CARTO deck.gl module includes a number of functions, which simplify the use of fetching your data from CARTO. At a high level these can be thought of as wrappers around the browsers fetch function, except that rather than passing a URL, options that specify the data in the CARTO are used.","sidebar":"tutorialSidebar"},"api-reference/carto/fetch-map":{"id":"api-reference/carto/fetch-map","title":"fetchMap","description":"CARTO Builder is a powerful tool for designing map visualizations. With the fetchMap function, you can easily instantiate layers configured in Builder for use with deck.gl. It is available starting with CARTO Maps API version v3 and deck.gl 8.7.","sidebar":"tutorialSidebar"},"api-reference/carto/h3-tile-layer":{"id":"api-reference/carto/h3-tile-layer","title":"H3TileLayer","description":"H3TileLayer is a layer for visualizing tiled data described using the H3 Spatial Index.","sidebar":"tutorialSidebar"},"api-reference/carto/heatmap-tile-layer":{"id":"api-reference/carto/heatmap-tile-layer","title":"HeatmapTileLayer","description":"HeatmapTileLayer is a layer for visualizing point data aggregated using spatial indexes like Quadbin or H3 using a heatmap. The layer automatically detects the spatial index type and renders cells accordingly.","sidebar":"tutorialSidebar"},"api-reference/carto/overview":{"id":"api-reference/carto/overview","title":"@deck.gl/carto","description":"Deck.gl is the preferred and official solution for creating modern geospatial web applications using CARTO Location Intelligence platform.","sidebar":"tutorialSidebar"},"api-reference/carto/point-label-layer":{"id":"api-reference/carto/point-label-layer","title":"PointLabelLayer","description":"PointLabelLayer is a layer for rendering text labels with optional secondary labels around points. It extends the capabilities of deck.gl\'s TextLayer with features like automatic label positioning, collision detection, and support for dual-label layouts."},"api-reference/carto/quadbin-tile-layer":{"id":"api-reference/carto/quadbin-tile-layer","title":"QuadbinTileLayer","description":"QuadbinTileLayer is a layer for visualizing tiled data described using the Quadbin Spatial Index.","sidebar":"tutorialSidebar"},"api-reference/carto/raster-tile-layer":{"id":"api-reference/carto/raster-tile-layer","title":"RasterTileLayer","description":"RasterTileLayer is a layer for visualizing tiled raster data.","sidebar":"tutorialSidebar"},"api-reference/carto/styles":{"id":"api-reference/carto/styles","title":"Styles","description":"Helper functions to create data-driven map visualizations.","sidebar":"tutorialSidebar"},"api-reference/carto/vector-tile-layer":{"id":"api-reference/carto/vector-tile-layer","title":"VectorTileLayer","description":"VectorTileLayer is a layer for visualizing tiled vector data. It extends the MVTLayer with CARTO-specific optimizations for efficient vector tile rendering, including binary data format support and separate geometry/attribute loading.","sidebar":"tutorialSidebar"},"api-reference/core/ambient-light":{"id":"api-reference/core/ambient-light","title":"AmbientLight","description":"Create an ambient light source which illuminates all the objects equally. Ambient light comes from all directions, adding ambient light ensures that object colors are rendered but does not show structure in 3D objects like directional and point lights do. Only one ambient light is supported.","sidebar":"tutorialSidebar"},"api-reference/core/attribute":{"id":"api-reference/core/attribute","title":"Attribute (Internal)","description":"This class helps deck.gl manage attributes. It integrates into the luma.gl Model.setAttributes() method by implementing the Attribute.getValue() method. luma.gl checks for the presence of this method on any attribute passed in."},"api-reference/core/attribute-manager":{"id":"api-reference/core/attribute-manager","title":"AttributeManager","description":"The AttributeManager is used internally by deck.gl layers. Unless you are writing custom deck.gl layers, or you are working with some very narrow advanced performance optimization use cases, you do not need to use this class.","sidebar":"tutorialSidebar"},"api-reference/core/camera-light":{"id":"api-reference/core/camera-light","title":"CameraLight (Experimental)","description":"CameraLight is a special point light source which always emits from the camera position.","sidebar":"tutorialSidebar"},"api-reference/core/composite-layer":{"id":"api-reference/core/composite-layer","title":"CompositeLayer Class","description":"The CompositeLayer class is a subclass of the Layer Class, that customizes various layer lifecycle methods to help create sublayers and handle events from those layers.","sidebar":"tutorialSidebar"},"api-reference/core/controller":{"id":"api-reference/core/controller","title":"Controller","description":"The base class for all viewport controllers.","sidebar":"tutorialSidebar"},"api-reference/core/deck":{"id":"api-reference/core/deck","title":"Deck","description":"Deck is a class that takes deck.gl layer instances and viewport parameters, renders those layers as a transparent overlay, and handles events.","sidebar":"tutorialSidebar"},"api-reference/core/deckgl":{"id":"api-reference/core/deckgl","title":"DeckGL (Scripting Interface)","description":"DeckGL extends the core Deck class with some additional features such as Mapbox integration. It offers a convenient way to use deck.gl in prototype environments such as Codepen, JSFiddle and Observable.","sidebar":"tutorialSidebar"},"api-reference/core/directional-light":{"id":"api-reference/core/directional-light","title":"DirectionalLight","description":"Create a directional light source which emits from a specific direction.A directional light can be considered \\"infinitely\\" far away (like the Sun) and does not attenuate with distance. At most 5 directional lights can be supported.","sidebar":"tutorialSidebar"},"api-reference/core/first-person-controller":{"id":"api-reference/core/first-person-controller","title":"FirstPersonController","description":"Inherits from Base Controller.","sidebar":"tutorialSidebar"},"api-reference/core/first-person-view":{"id":"api-reference/core/first-person-view","title":"FirstPersonView","description":"The FirstPersonView class is a subclass of View that describes a camera placed at a provided location, looking towards the direction and orientation specified by viewState. The behavior is similar to that of a first-person game).","sidebar":"tutorialSidebar"},"api-reference/core/fly-to-interpolator":{"id":"api-reference/core/fly-to-interpolator","title":"FlyToInterpolator","description":"Performs \\"fly to\\" style interpolation between two geospatial view states. Implements TransitionInterpolator.","sidebar":"tutorialSidebar"},"api-reference/core/globe-controller":{"id":"api-reference/core/globe-controller","title":"GlobeController (Experimental)","description":"Inherits from Base Controller.","sidebar":"tutorialSidebar"},"api-reference/core/globe-view":{"id":"api-reference/core/globe-view","title":"GlobeView (Experimental)","description":"This class is experimental, which means it does not provide the compatibility and stability that one would typically expect from other View classes. Use with caution and report any issues that you find on GitHub.","sidebar":"tutorialSidebar"},"api-reference/core/globe-viewport":{"id":"api-reference/core/globe-viewport","title":"GlobeViewport (Experimental)","description":"The GlobeViewport class takes globe view states (latitude, longitude, and zoom), and performs projections between world and screen coordinates. It is a helper class for visualizing the earth as a 3D globe.","sidebar":"tutorialSidebar"},"api-reference/core/layer":{"id":"api-reference/core/layer","title":"Layer Class","description":"The Layer class is the base class of all deck.gl layers, and it provides a number of base properties available in all layers.","sidebar":"tutorialSidebar"},"api-reference/core/layer-manager":{"id":"api-reference/core/layer-manager","title":"LayerManager Class (Internal)","description":"The LayerManager class is gradually being refactor into a ComponentManager class and will be made part of the lifecycle directory. It is now an internal class, use the Deck class (or the DeckGL React Component) which creates a LayerManager under the hood."},"api-reference/core/lighting-effect":{"id":"api-reference/core/lighting-effect","title":"LightingEffect","description":"The LightingEffect applies ambient, point and directional lighting to layers which support material property.","sidebar":"tutorialSidebar"},"api-reference/core/linear-interpolator":{"id":"api-reference/core/linear-interpolator","title":"LinearInterpolator","description":"Performs simple linear interpolation between two view states. Implements TransitionInterpolator.","sidebar":"tutorialSidebar"},"api-reference/core/map-controller":{"id":"api-reference/core/map-controller","title":"MapController","description":"Inherits from Base Controller.","sidebar":"tutorialSidebar"},"api-reference/core/map-view":{"id":"api-reference/core/map-view","title":"MapView","description":"The MapView class is a subclass of View. This viewport creates a camera that looks at a geospatial location on a map from a certain direction. The behavior of MapView is generally modeled after that of Mapbox GL JS.","sidebar":"tutorialSidebar"},"api-reference/core/orbit-controller":{"id":"api-reference/core/orbit-controller","title":"OrbitController","description":"Inherits from Base Controller.","sidebar":"tutorialSidebar"},"api-reference/core/orbit-view":{"id":"api-reference/core/orbit-view","title":"OrbitView","description":"The OrbitView class is a subclass of View that creates a 3D camera that rotates around a target position. It is usually used for the examination of a 3D scene in non-geospatial use cases.","sidebar":"tutorialSidebar"},"api-reference/core/orthographic-controller":{"id":"api-reference/core/orthographic-controller","title":"OrthographicController","description":"Inherits from Base Controller.","sidebar":"tutorialSidebar"},"api-reference/core/orthographic-view":{"id":"api-reference/core/orthographic-view","title":"OrthographicView","description":"The OrthographicView class is a subclass of View that creates a top-down view of the XY plane. It is usually used for rendering 2D charts in non-geospatial use cases.","sidebar":"tutorialSidebar"},"api-reference/core/point-light":{"id":"api-reference/core/point-light","title":"PointLight","description":"Create a point light source which emits from a point in all directions. At most 5 directional lights can be supported.","sidebar":"tutorialSidebar"},"api-reference/core/post-process-effect":{"id":"api-reference/core/post-process-effect","title":"PostProcessEffect","description":"The PostProcessEffect applies screen space pixel manipulation effects to deck.gl layers.","sidebar":"tutorialSidebar"},"api-reference/core/project":{"id":"api-reference/core/project","title":"project (Shader Module)","description":"The project shader module is part of the core of deck.gl. It makes it easy to write shaders that support all of deck.gl\'s projection modes and it supports some advanced rendering techniques such as pixel space rendering etc.","sidebar":"tutorialSidebar"},"api-reference/core/project32":{"id":"api-reference/core/project32","title":"project32 (Shader Module)","description":"The project32 shader module is an extension of the project shader module that adds some projection utilities.","sidebar":"tutorialSidebar"},"api-reference/core/project64":{"id":"api-reference/core/project64","title":"project64 (Shader Module)","description":"The project64 shader module is an extension of the project shader module that does projection using 64 bit floating point. It provides an increase in precision, at the cost of performance. Note that starting with deck.gl v6.1, the improved default 32 bit projection mode provides sufficient precision for most use cases.","sidebar":"tutorialSidebar"},"api-reference/core/sun-light":{"id":"api-reference/core/sun-light","title":"SunLight (Experimental)","description":"SunLight is a directional light source simulating the sun. Sun position calculations are based on article and inspired by SunCalc.","sidebar":"tutorialSidebar"},"api-reference/core/transition-interpolator":{"id":"api-reference/core/transition-interpolator","title":"TransitionInterpolator","description":"Base interpolator class that provides common functionality required to interpolate between two View States. This class is not intended to be used directly. See View State Transitions for backgrounds.","sidebar":"tutorialSidebar"},"api-reference/core/view":{"id":"api-reference/core/view","title":"View Class","description":"For detailed explanations and code examples about deck.gl\'s views system, visit the Views and Projections article.","sidebar":"tutorialSidebar"},"api-reference/core/viewport":{"id":"api-reference/core/viewport","title":"Viewport","description":"Read the article detailing deck.gl\'s Views and Projections system.","sidebar":"tutorialSidebar"},"api-reference/core/web-mercator-viewport":{"id":"api-reference/core/web-mercator-viewport","title":"WebMercatorViewport","description":"The WebMercatorViewport class takes map view states (latitude, longitude, zoom, pitch, bearing etc.), and performs projections between world and screen coordinates. It is tuned to work in synchronization with mapbox-gl\'s projection matrix.","sidebar":"tutorialSidebar"},"api-reference/core/widget":{"id":"api-reference/core/widget","title":"Widget","description":"A widget is a UI component that can interact with deck.gl\'s layers and views.","sidebar":"tutorialSidebar"},"api-reference/extensions/brushing-extension":{"id":"api-reference/extensions/brushing-extension","title":"BrushingExtension","description":"The BrushingExtension adds GPU-based data brushing functionalities to layers. It allows the layer to show/hide objects based on the current pointer position.","sidebar":"tutorialSidebar"},"api-reference/extensions/clip-extension":{"id":"api-reference/extensions/clip-extension","title":"ClipExtension","description":"The ClipExtension adds support for clipping rendered layers by rectangular bounds.","sidebar":"tutorialSidebar"},"api-reference/extensions/collision-filter-extension":{"id":"api-reference/extensions/collision-filter-extension","title":"CollisionFilterExtension","description":"The CollisionFilterExtension allows layers to hide features which overlap with other features. An example is a dense ScatterplotLayer with many points which overlap: by using this extension points that collide with others are hidden such that only one of the colliding points is shown. The collisions are computed on the GPU in realtime, allowing the collisions to be updated smoothly on every frame.","sidebar":"tutorialSidebar"},"api-reference/extensions/data-filter-extension":{"id":"api-reference/extensions/data-filter-extension","title":"DataFilterExtension","description":"The DataFilterExtension adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. This extension provides a significantly more performant alternative to filtering the data array on the CPU.","sidebar":"tutorialSidebar"},"api-reference/extensions/fill-style-extension":{"id":"api-reference/extensions/fill-style-extension","title":"FillStyleExtension","description":"The FillStyleExtension adds selected features to layers that render a \\"fill\\", such as the PolygonLayer and ScatterplotLayer.","sidebar":"tutorialSidebar"},"api-reference/extensions/fp64-extension":{"id":"api-reference/extensions/fp64-extension","title":"Fp64Extension","description":"The Fp64Extension adds 64-bit precision to geospatial layers.","sidebar":"tutorialSidebar"},"api-reference/extensions/mask-extension":{"id":"api-reference/extensions/mask-extension","title":"MaskExtension","description":"The MaskExtension allows layers to show/hide objects by a geofence. For example, a map may filter a list of user locations by the boundaries of a given country, or highlight part of a base map that is inside a user-drawn circle or lasso area. This extension provides a significantly more performant alternative to testing the data array against a bounding geometry on the CPU.","sidebar":"tutorialSidebar"},"api-reference/extensions/overview":{"id":"api-reference/extensions/overview","title":"@deck.gl/extensions","description":"Layer extensions are bonus features that you can optionally add to the core deck.gl layers. These features are not included in the layers by default because one or more of the following reasons:","sidebar":"tutorialSidebar"},"api-reference/extensions/path-style-extension":{"id":"api-reference/extensions/path-style-extension","title":"PathStyleExtension","description":"The PathStyleExtension adds selected features to the PathLayer and composite layers that render the PathLayer, e.g. PolygonLayer and GeoJsonLayer.","sidebar":"tutorialSidebar"},"api-reference/extensions/terrain-extension":{"id":"api-reference/extensions/terrain-extension","title":"TerrainExtension (Experimental)","description":"This extension is experimental, which means it does not provide the compatibility and stability that one would typically expect from other features. Use with caution and report any issues that you find on GitHub.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/a5-layer":{"id":"api-reference/geo-layers/a5-layer","title":"A5Layer","description":"The A5Layer renders filled and/or stroked polygons based on the A5 geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/geohash-layer":{"id":"api-reference/geo-layers/geohash-layer","title":"GeohashLayer","description":"The GeohashLayer renders filled and/or stroked polygons based on the Geohash geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/great-circle-layer":{"id":"api-reference/geo-layers/great-circle-layer","title":"GreatCircleLayer","description":"The GreatCircleLayer is a variation of the ArcLayer. It renders flat arcs along the great circle joining pairs of source and target points,","sidebar":"tutorialSidebar"},"api-reference/geo-layers/h3-cluster-layer":{"id":"api-reference/geo-layers/h3-cluster-layer","title":"H3ClusterLayer","description":"The H3ClusterLayer renders regions represented by hexagon sets from the H3 geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/h3-hexagon-layer":{"id":"api-reference/geo-layers/h3-hexagon-layer","title":"H3HexagonLayer","description":"The H3HexagonLayer renders hexagons from the H3 geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/mvt-layer":{"id":"api-reference/geo-layers/mvt-layer","title":"MVTLayer","description":"The MVTLayer is a derived TileLayer that makes it possible to visualize very large datasets through MVTs (Mapbox Vector Tiles). Behaving like TileLayer, it will only load, decode and render MVTs containing features that are visible within the current viewport.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/quadkey-layer":{"id":"api-reference/geo-layers/quadkey-layer","title":"QuadkeyLayer","description":"The QuadkeyLayer renders filled and/or stroked polygons based on the Quadkey geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/s2-layer":{"id":"api-reference/geo-layers/s2-layer","title":"S2Layer","description":"The S2Layer renders filled and/or stroked polygons based on the S2 geospatial indexing system.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/terrain-layer":{"id":"api-reference/geo-layers/terrain-layer","title":"TerrainLayer","description":"The TerrainLayer reconstructs mesh surfaces from height map images, e.g. Mapzen Terrain Tiles, which encodes elevation into R,G,B values.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/tile-3d-layer":{"id":"api-reference/geo-layers/tile-3d-layer","title":"Tile3DLayer","description":"The Tile3DLayer renders 3d tiles data formatted according to the 3D Tiles Specification and ESRI I3S, supported by the Tiles3DLoader.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/tile-layer":{"id":"api-reference/geo-layers/tile-layer","title":"TileLayer","description":"The TileLayer is a composite layer that makes it possible to visualize very large datasets. Instead of fetching the entire dataset, it only loads and renders what\'s visible in the current viewport.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/trips-layer":{"id":"api-reference/geo-layers/trips-layer","title":"TripsLayer","description":"The TripsLayer renders animated paths that represent vehicle trips.","sidebar":"tutorialSidebar"},"api-reference/geo-layers/wms-layer":{"id":"api-reference/geo-layers/wms-layer","title":"WMSLayer (Experimental)","description":"This class is experimental, which means it does not provide the compatibility and stability that one would typically expect from other layers, detailed in the limitations section. Use with caution and report any issues that you find on GitHub.","sidebar":"tutorialSidebar"},"api-reference/google-maps/google-maps-overlay":{"id":"api-reference/google-maps/google-maps-overlay","title":"GoogleMapsOverlay","description":"This class implements the OverlayView/WebGLOverlayView (depending on map rendering type) interface and can be used as any other Google Maps overlay.","sidebar":"tutorialSidebar"},"api-reference/google-maps/overview":{"id":"api-reference/google-maps/overview","title":"@deck.gl/google-maps","description":"Use deck.gl layers as a custom Google Maps overlay.","sidebar":"tutorialSidebar"},"api-reference/json/conversion-reference":{"id":"api-reference/json/conversion-reference","title":"Conversion Reference","description":"| Prefix | Description | Example usage |","sidebar":"tutorialSidebar"},"api-reference/json/json-configuration":{"id":"api-reference/json/json-configuration","title":"JSONConfiguration","description":"Object with the following fields.","sidebar":"tutorialSidebar"},"api-reference/json/json-converter":{"id":"api-reference/json/json-converter","title":"JSONConverter","description":"NOTE: This component is only intended to support official deck.gl API props via JSON. In particular, it is not intended to evolve an implementation of alternate JSON schemas. Support for such schemas should be developed independently, perhaps using the source code of this component as a base. See the JSON Layers RFC for more on this.","sidebar":"tutorialSidebar"},"api-reference/json/overview":{"id":"api-reference/json/overview","title":"@deck.gl/json","description":"The deck.gl JSON module provides a JSONConverter class that converts textual JSON specifications into JavaScript objects, and functions.","sidebar":"tutorialSidebar"},"api-reference/layers/arc-layer":{"id":"api-reference/layers/arc-layer","title":"ArcLayer","description":"The ArcLayer renders raised arcs joining pairs of source and target coordinates.","sidebar":"tutorialSidebar"},"api-reference/layers/bitmap-layer":{"id":"api-reference/layers/bitmap-layer","title":"BitmapLayer","description":"The BitmapLayer renders a bitmap at specified boundaries.","sidebar":"tutorialSidebar"},"api-reference/layers/column-layer":{"id":"api-reference/layers/column-layer","title":"ColumnLayer","description":"The ColumnLayer renders extruded cylinders (tessellated regular polygons) at given coordinates. It is the primitive layer rendered by HexagonLayer after aggregation. Unlike the HexagonLayer, it renders one column for each data object.","sidebar":"tutorialSidebar"},"api-reference/layers/geojson-layer":{"id":"api-reference/layers/geojson-layer","title":"GeoJsonLayer","description":"The GeoJsonLayer renders GeoJSON formatted data as polygons, lines and points (circles, icons and/or texts).","sidebar":"tutorialSidebar"},"api-reference/layers/grid-cell-layer":{"id":"api-reference/layers/grid-cell-layer","title":"GridCellLayer","description":"The GridCellLayer can render a grid-based heatmap.","sidebar":"tutorialSidebar"},"api-reference/layers/icon-layer":{"id":"api-reference/layers/icon-layer","title":"IconLayer","description":"The IconLayer renders raster icons at given coordinates.","sidebar":"tutorialSidebar"},"api-reference/layers/line-layer":{"id":"api-reference/layers/line-layer","title":"LineLayer","description":"webgpu","sidebar":"tutorialSidebar"},"api-reference/layers/path-layer":{"id":"api-reference/layers/path-layer","title":"PathLayer","description":"The PathLayer renders lists of coordinate points as extruded polylines with mitering.","sidebar":"tutorialSidebar"},"api-reference/layers/point-cloud-layer":{"id":"api-reference/layers/point-cloud-layer","title":"PointCloudLayer","description":"webgpu","sidebar":"tutorialSidebar"},"api-reference/layers/polygon-layer":{"id":"api-reference/layers/polygon-layer","title":"PolygonLayer","description":"The PolygonLayer renders filled, stroked and/or extruded polygons.","sidebar":"tutorialSidebar"},"api-reference/layers/README":{"id":"api-reference/layers/README","title":"Layer Catalog Overview","description":"For first-time deck.gl developers, it is helpful to read the following pages before jumping into the layer catalog:","sidebar":"tutorialSidebar"},"api-reference/layers/scatterplot-layer":{"id":"api-reference/layers/scatterplot-layer","title":"ScatterplotLayer","description":"webgpu","sidebar":"tutorialSidebar"},"api-reference/layers/solid-polygon-layer":{"id":"api-reference/layers/solid-polygon-layer","title":"SolidPolygonLayer","description":"The SolidPolygonLayer renders filled and/or extruded polygons. This is the primitive layer rendered by PolygonLayer as the \\"fill\\" part of the polygons.","sidebar":"tutorialSidebar"},"api-reference/layers/text-layer":{"id":"api-reference/layers/text-layer","title":"TextLayer","description":"The TextLayer renders text labels at given coordinates.","sidebar":"tutorialSidebar"},"api-reference/mapbox/mapbox-layer":{"id":"api-reference/mapbox/mapbox-layer","title":"MapboxLayer","description":"MapboxLayer is an implementation of Mapbox GL JS\'s CustomLayerInterface API. By adding a MapboxLayer instance to an mapbox map, one can render any deck.gl layer inside the mapbox canvas / WebGL2 context. This is in contrast to the traditional deck.gl/mapbox integration where the deck.gl layers are rendered into a separate canvas over the base map."},"api-reference/mapbox/mapbox-overlay":{"id":"api-reference/mapbox/mapbox-overlay","title":"MapboxOverlay","description":"MapboxOverlay is an implementation of Mapbox GL JS\'s IControl API. When adding a MapboxOverlay control to an mapbox map, deck.gl layers are rendered in synchronization with the base map layers. This control supports both overlaid and interleaved rendering modes.","sidebar":"tutorialSidebar"},"api-reference/mapbox/overview":{"id":"api-reference/mapbox/overview","title":"@deck.gl/mapbox","description":"This module integrates deck.gl into the Mapbox GL JS API-compatible ecosystem.","sidebar":"tutorialSidebar"},"api-reference/mesh-layers/scenegraph-layer":{"id":"api-reference/mesh-layers/scenegraph-layer","title":"ScenegraphLayer","description":"The ScenegraphLayer renders a number of instances of a complete glTF scenegraph.","sidebar":"tutorialSidebar"},"api-reference/mesh-layers/simple-mesh-layer":{"id":"api-reference/mesh-layers/simple-mesh-layer","title":"SimpleMeshLayer","description":"The SimpleMeshLayer renders a number of instances of an arbitrary 3D geometry. For example, it can be used to visualize a fleet of 3d cars each with a position and an orientation over the map.","sidebar":"tutorialSidebar"},"api-reference/react/deckgl":{"id":"api-reference/react/deckgl","title":"DeckGL (React Component)","description":"DeckGL is the main interface to deck.gl for React applications. DeckGL is a React component that takes a list of deck.gl layer instances and a view state, and renders those layers on a transparent canvas that can be used as an overlay over other components like maps.","sidebar":"tutorialSidebar"},"api-reference/react/overview":{"id":"api-reference/react/overview","title":"@deck.gl/react","description":"This module integrates deck.gl with React. First-time deck.gl developers may find it helpful to read Using deck.gl with React before getting started.","sidebar":"tutorialSidebar"},"api-reference/react/use-widget":{"id":"api-reference/react/use-widget","title":"useWidget","description":"The useWidget hook is used to create React wrappers for normal (non-React) deck.gl widgets, or to create custom widgets with UI rendered by React.","sidebar":"tutorialSidebar"},"api-reference/test-utils/generate-layer-tests":{"id":"api-reference/test-utils/generate-layer-tests","title":"generateLayerTests","description":"This utility generates a series of test cases to be used with testLayer that checks the conformance of a layer class.","sidebar":"tutorialSidebar"},"api-reference/test-utils/interaction-test-runner":{"id":"api-reference/test-utils/interaction-test-runner","title":"InteractionTestRunner","description":"Client-side utility for browser-based deck.gl interaction tests."},"api-reference/test-utils/overview":{"id":"api-reference/test-utils/overview","title":"@deck.gl/test-utils","description":"A set of utilities to facilitate testing deck.gl layers. Tests can be run:","sidebar":"tutorialSidebar"},"api-reference/test-utils/snapshot-test-runner":{"id":"api-reference/test-utils/snapshot-test-runner","title":"SnapshotTestRunner","description":"Client-side utility for browser-based deck.gl render tests.","sidebar":"tutorialSidebar"},"api-reference/test-utils/test-layer":{"id":"api-reference/test-utils/test-layer","title":"testLayer","description":"The testLayer utility initializes a layer, test layer updates and draw calls on a series of new props, and allow test suites to inspect the result.","sidebar":"tutorialSidebar"},"api-reference/widgets/compass-widget":{"id":"api-reference/widgets/compass-widget","title":"CompassWidget","description":"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view.","sidebar":"tutorialSidebar"},"api-reference/widgets/context-menu-widget":{"id":"api-reference/widgets/context-menu-widget","title":"ContextMenuWidget (Experimental)","description":"Displays a context menu on right-click events with customizable menu items based on picked objects.","sidebar":"tutorialSidebar"},"api-reference/widgets/fps-widget":{"id":"api-reference/widgets/fps-widget","title":"FpsWidget (Experimental)","description":"Displays the measured frames per second (FPS) as reported by the attached Deck instance.","sidebar":"tutorialSidebar"},"api-reference/widgets/fullscreen-widget":{"id":"api-reference/widgets/fullscreen-widget","title":"FullscreenWidget","description":"This widget enlarges deck.gl to fill the full screen. Click the widget to enter or exit full screen.","sidebar":"tutorialSidebar"},"api-reference/widgets/geocoder-widget":{"id":"api-reference/widgets/geocoder-widget","title":"GeocoderWidget (Experimental)","description":"The GeocoderWidget helps the user find positions on the map.","sidebar":"tutorialSidebar"},"api-reference/widgets/gimbal-widget":{"id":"api-reference/widgets/gimbal-widget","title":"GimbalWidget","description":"Visualizes the orientation of an OrbitView using nested circles. Clicking resets rotationOrbit and rotationX to 0.","sidebar":"tutorialSidebar"},"api-reference/widgets/info-widget":{"id":"api-reference/widgets/info-widget","title":"InfoWidget (Experimental)","description":"This widget shows a popup at a fixed position, or when an item in a deck.gl layer has been clicked or hovered.","sidebar":"tutorialSidebar"},"api-reference/widgets/loading-widget":{"id":"api-reference/widgets/loading-widget","title":"LoadingWidget (Experimental)","description":"This widget shows a spinning indicator while any deck.gl layers are loading data.","sidebar":"tutorialSidebar"},"api-reference/widgets/overview":{"id":"api-reference/widgets/overview","title":"@deck.gl/widgets","description":"Widgets are UI components around the WebGL2/WebGPU canvas to offer controls and information for a better user experience.","sidebar":"tutorialSidebar"},"api-reference/widgets/reset-view-widget":{"id":"api-reference/widgets/reset-view-widget","title":"ResetViewWidget","description":"This widget resets the view state of a deck.gl viewport to its initial state. The user clicks the widget to return to the initial view.","sidebar":"tutorialSidebar"},"api-reference/widgets/scale-widget":{"id":"api-reference/widgets/scale-widget","title":"ScaleWidget (Experimental)","description":"This widget displays a dynamic cartographic scale bar that updates as the map view changes. It shows a horizontal line with end tick marks and a distance label, reflecting the current map scale based on zoom level and latitude.","sidebar":"tutorialSidebar"},"api-reference/widgets/screenshot-widget":{"id":"api-reference/widgets/screenshot-widget","title":"ScreenshotWidget","description":"This widget captures and downloads the deck.gl screen (canvas). Click the widget to capture an image of the screen. The image will be downloaded by the browser into the user\'s \\"download\\" folder.","sidebar":"tutorialSidebar"},"api-reference/widgets/splitter-widget":{"id":"api-reference/widgets/splitter-widget","title":"SplitterWidget (Experimental)","description":"This widget renders a draggable splitter line across the deck.gl canvas to divide two views. It supports both vertical and horizontal orientations, allowing users to compare two views (e.g., two map or globe views) by dragging the splitter handle.","sidebar":"tutorialSidebar"},"api-reference/widgets/stats-widget":{"id":"api-reference/widgets/stats-widget","title":"StatsWidget (Experimental)","description":"Displays performance and debugging statistics from deck.gl, luma.gl, or custom probe.gl stats objects in a collapsible widget.","sidebar":"tutorialSidebar"},"api-reference/widgets/styling":{"id":"api-reference/widgets/styling","title":"Styling Widgets","description":"Themes","sidebar":"tutorialSidebar"},"api-reference/widgets/theme-widget":{"id":"api-reference/widgets/theme-widget","title":"ThemeWidget (Experimental)","description":"This widget changes the theme of deck.gl between light mode and dark mode. Click the widget to toggle the theme.","sidebar":"tutorialSidebar"},"api-reference/widgets/timeline-widget":{"id":"api-reference/widgets/timeline-widget","title":"TimelineWidget (Experimental)","description":"This widget provides a time slider with play/pause controls. Configure a time range, step interval, and play speed to animate data over time.","sidebar":"tutorialSidebar"},"api-reference/widgets/view-selector-widget":{"id":"api-reference/widgets/view-selector-widget","title":"ViewSelectorWidget (Experimental)","description":"Provides a dropdown menu for selecting different view modes including single view and split view configurations.","sidebar":"tutorialSidebar"},"api-reference/widgets/zoom-widget":{"id":"api-reference/widgets/zoom-widget","title":"ZoomWidget","description":"This widget controls the zoom level of a deck.gl view. Click \'+\' to zoom in by 1, click \'-\' to zoom out by 1. Supports controlling Map and Globe views.","sidebar":"tutorialSidebar"},"contributing":{"id":"contributing","title":"Contributing to deck.gl","description":"Thanks for taking the time to contribute!","sidebar":"tutorialSidebar"},"developer-guide/animations-and-transitions":{"id":"developer-guide/animations-and-transitions","title":"Animations and Transitions","description":"deck.gl provides several built-in animation/transition features.","sidebar":"tutorialSidebar"},"developer-guide/base-maps/using-with-arcgis":{"id":"developer-guide/base-maps/using-with-arcgis","title":"Using with ArcGIS","description":"| Pure JS | React | Overlaid | Interleaved |","sidebar":"tutorialSidebar"},"developer-guide/base-maps/using-with-google-maps":{"id":"developer-guide/base-maps/using-with-google-maps","title":"Using with Google Maps Platform","description":"| Pure JS | React | Overlaid | Interleaved |","sidebar":"tutorialSidebar"},"developer-guide/base-maps/using-with-mapbox":{"id":"developer-guide/base-maps/using-with-mapbox","title":"Using with Mapbox","description":"| Pure JS | React | Overlaid | Interleaved |","sidebar":"tutorialSidebar"},"developer-guide/base-maps/using-with-maplibre":{"id":"developer-guide/base-maps/using-with-maplibre","title":"Using with MapLibre","description":"| Pure JS | React | Overlaid | Interleaved |","sidebar":"tutorialSidebar"},"developer-guide/building-apps":{"id":"developer-guide/building-apps","title":"Building Apps","description":"This article discusses considerations in building and deploying applications that contain deck.gl.","sidebar":"tutorialSidebar"},"developer-guide/coordinate-systems":{"id":"developer-guide/coordinate-systems","title":"Coordinate Systems","description":"In most deck.gl layers, every data object is expected to contain one or more positions (e.g. the center of a point, or the start and end of an arc, the vertices of a polygon, etc). Positions are expected to be supplied as two or three element arrays ([x, y] or [x, y, z]). Objects can also have dimensions (e.g. the radius of a circle, the width of a path, etc), most of which are specified as a single number. Positions and dimensions are used to construct a 3D world with your data.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/attribute-management":{"id":"developer-guide/custom-layers/attribute-management","title":"Attribute Management","description":"Overview","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/composite-layers":{"id":"developer-guide/custom-layers/composite-layers","title":"Composite Layers","description":"A composite layer is a special kind of layer that creates other layers. It enables the creation of new layers by careful composition of existing layers (a primary example being the GeoJsonLayer). In addition, it is often convenient to change the interface and behavior of an existing layer using a composite \\"adaptor\\" layer instead of modifying the layer itself (the sample S2Layer is a simple adaptor on top of the PolygonLayer).","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/layer-attributes":{"id":"developer-guide/custom-layers/layer-attributes","title":"Layer Attributes","description":"This section explains how the data in deck.gl layers are mapped to and accessed by the GPU during rendering.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/layer-extensions":{"id":"developer-guide/custom-layers/layer-extensions","title":"Creating Layer Extensions","description":"It\'s recommended that you read subclassing layers before proceeding","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/layer-lifecycle":{"id":"developer-guide/custom-layers/layer-lifecycle","title":"Layer Lifecycle","description":"Every deck.gl layer subclass can define certain methods that get called","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/picking":{"id":"developer-guide/custom-layers/picking","title":"Picking","description":"Make sure you have read Interactivity before reading this section.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/primitive-layers":{"id":"developer-guide/custom-layers/primitive-layers","title":"Primitive Layers","description":"If you want to draw something completely different and you are comfortable around WebGL2/WebGPU shaders, you may consider implementing a new layer by directly extending the Layer class.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/prop-types":{"id":"developer-guide/custom-layers/prop-types","title":"Property Types","description":"This article documents the system that deck.gl offers to provide extra type annotations for layer properties.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/README":{"id":"developer-guide/custom-layers/README","title":"Writing Your Own Layer","description":"Preparations","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/subclassed-layers":{"id":"developer-guide/custom-layers/subclassed-layers","title":"Subclassed Layers","description":"deck.gl layers are designed to be easy to extend in order to add features.","sidebar":"tutorialSidebar"},"developer-guide/custom-layers/writing-shaders":{"id":"developer-guide/custom-layers/writing-shaders","title":"Writing Shaders","description":"A shader library facilitates creating shaders that work seamlessly with deck.gl. The modules parameter passed to the Model class can dynamically include parts from this library into your own GLSL code:","sidebar":"tutorialSidebar"},"developer-guide/debugging":{"id":"developer-guide/debugging","title":"Debugging","description":"deck.gl provides support for debugging applications and layers, which includes:","sidebar":"tutorialSidebar"},"developer-guide/fp64":{"id":"developer-guide/fp64","title":"About 64-bit Layers","description":"deck.gl can leverage high precision GPU floating point using emulated 64-bit floating point. For supported layers (look for the 64-bit icon in the docs), 64-bit shaders are used when the fp64 prop is set to true."},"developer-guide/interactivity":{"id":"developer-guide/interactivity","title":"Interactivity","description":"Controlling the Camera","sidebar":"tutorialSidebar"},"developer-guide/loading-data":{"id":"developer-guide/loading-data","title":"Loading Data","description":"deck.gl uses loaders.gl, a framework-agnostic library to read data and resources.","sidebar":"tutorialSidebar"},"developer-guide/performance":{"id":"developer-guide/performance","title":"Performance Optimization","description":"General Performance Expectations","sidebar":"tutorialSidebar"},"developer-guide/testing":{"id":"developer-guide/testing","title":"Testing","description":"Testing WebGL2/WebGPU code is much harder than testing regular JavaScript. GPU and browser dependent commands may not run under Node. Rendering behavior differs cross platforms and hardware. Since it draws into a canvas, there is also no precisely verifiable output.","sidebar":"tutorialSidebar"},"developer-guide/tips-and-tricks":{"id":"developer-guide/tips-and-tricks","title":"Tips and Tricks","description":"Rendering Tips","sidebar":"tutorialSidebar"},"developer-guide/using-effects":{"id":"developer-guide/using-effects","title":"Using Effects","description":"Effects are part of the render pipeline that affect the visuall of all layers. Deck.gl by default uses a LightingEffect to render its 3D geometries. Other effects can be found in core and extensions modules. Applications may also implement the Effect interface to create custom effects.","sidebar":"tutorialSidebar"},"developer-guide/using-layers":{"id":"developer-guide/using-layers","title":"Using Layers","description":"The \\"Layer\\" is a core concept of deck.gl. A deck.gl layer is a packaged visualization type that takes a collection of datums, associate each with positions, colors, shapes, extrusions, etc., and renders them on a map.","sidebar":"tutorialSidebar"},"developer-guide/views":{"id":"developer-guide/views","title":"Views and Projections","description":"The same data can be drawn differently to screen based on what projection method is used. deck.gl\'s view system defines how one or more cameras should be set up to look at your data objects. The default view used in deck.gl is the MapView, which implements the Web Mercator projection.","sidebar":"tutorialSidebar"},"developer-guide/webgpu":{"id":"developer-guide/webgpu","title":"WebGPU","description":"WebGPU support in deck.gl v9 is a work in progress and is not production ready. At this stage, it is aimed at early adopters who wants to try out the new technology, contributors interested in supporting development, or general users that are curious to understand what to expect from future releases.","sidebar":"tutorialSidebar"},"faq":{"id":"faq","title":"Frequently Asked Questions","description":"deck.gl is designed to be easy to use, however it is built on top of a complex technology (WebGL2/WebGPU) and supports a functional/reactive programming paradigm which many users are initially unfamiliar with.","sidebar":"tutorialSidebar"},"get-started/getting-started":{"id":"get-started/getting-started","title":"Installing and Running Examples","description":"Installation","sidebar":"tutorialSidebar"},"get-started/learning-resources":{"id":"get-started/learning-resources","title":"Learning Resources","description":"API Documentation","sidebar":"tutorialSidebar"},"get-started/using-standalone":{"id":"get-started/using-standalone","title":"Using deck.gl Standalone","description":"The deck.gl core library and layers have no dependencies on React, Mapbox GL, or MapLibre GL and can be used by any JavaScript application.","sidebar":"tutorialSidebar"},"get-started/using-with-map":{"id":"get-started/using-with-map","title":"Base Maps","description":"While deck.gl works independently without any map component, when visualizing geospatial datasets, a base map can offer invaluable context for understanding the overlay layers.","sidebar":"tutorialSidebar"},"get-started/using-with-react":{"id":"get-started/using-with-react","title":"Using deck.gl with React","description":"While not directly based on React, deck.gl is designed from ground up to work with React based applications. deck.gl layers fit naturally into React\'s component render flow and flux/redux based applications. deck.gl layers will be performantly rerendered whenever you rerender your normal JSX or React components.","sidebar":"tutorialSidebar"},"get-started/using-with-typescript":{"id":"get-started/using-with-typescript","title":"Using deck.gl with TypeScript","description":"deck.gl v9+","sidebar":"tutorialSidebar"},"README":{"id":"README","title":"Introduction","description":"These docs are for","sidebar":"tutorialSidebar"},"roadmap":{"id":"roadmap","title":"Roadmap","description":"Interested in what is coming down the road? We are trying to make the deck.gl roadmap as public as possible."},"upgrade-guide":{"id":"upgrade-guide","title":"Upgrade Guide","description":"Upgrading to v9.1","sidebar":"tutorialSidebar"},"whats-new":{"id":"whats-new","title":"What\'s New","description":"This page contains highlights of each deck.gl release. Also check our vis.gl blog for news about new releases and features in deck.gl.","sidebar":"tutorialSidebar"}}}}')}}]);