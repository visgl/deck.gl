"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1385],{94379:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"api-reference/core/globe-controller","title":"GlobeController (Experimental)","description":"Inherits from Base Controller.","source":"@site/../docs/api-reference/core/globe-controller.md","sourceDirName":"api-reference/core","slug":"/api-reference/core/globe-controller","permalink":"/docs/api-reference/core/globe-controller","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/core/globe-controller.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MapController","permalink":"/docs/api-reference/core/map-controller"},"next":{"title":"FirstPersonController","permalink":"/docs/api-reference/core/first-person-controller"}}');var l=o(74848),t=o(28453);const c={},s="GlobeController (Experimental)",i={},a=[{value:"Usage",id:"usage",level:2},{value:"Options",id:"options",level:2},{value:"Custom GlobeController",id:"custom-globecontroller",level:2},{value:"Source",id:"source",level:2}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"globecontroller-experimental",children:"GlobeController (Experimental)"})}),"\n",(0,l.jsxs)(r.p,{children:["Inherits from ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/controller",children:"Base Controller"}),"."]}),"\n",(0,l.jsxs)(r.p,{children:["The ",(0,l.jsx)(r.code,{children:"GlobeController"})," class can be passed to either the ",(0,l.jsx)(r.code,{children:"Deck"})," class's ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/deck#controller",children:"controller"})," prop or a ",(0,l.jsx)(r.code,{children:"View"})," class's ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/view#controller",children:"controller"})," prop to specify that viewport interaction should be enabled."]}),"\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.code,{children:"GlobeController"})," is the default controller for ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/globe-view",children:"GlobeView"}),"."]}),"\n",(0,l.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(r.p,{children:"Use with the default view:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"import {Deck, _GlobeView as GlobeView} from '@deck.gl/core';\n\nnew Deck({\n  views: new GlobeView(),\n  controller: {keyboard: false, inertia: true},\n  initialViewState: viewState\n});\n"})}),"\n",(0,l.jsx)(r.p,{children:"is equivalent to:"}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"import {Deck, _GlobeView as GlobeView} from '@deck.gl/core';\n\nnew Deck({\n  views: new GlobeView({\n    controller: {keyboard: false, inertia: true}\n  }),\n  initialViewState: viewState\n})\n"})}),"\n",(0,l.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,l.jsxs)(r.p,{children:["Supports all ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/controller#options",children:"Controller options"})," with the following default behavior:"]}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"dragPan"}),": default ",(0,l.jsx)(r.code,{children:"'pan'"})," (drag to pan)"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"dragRotate"}),": not effective, this view does not currently support rotation"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"touchRotate"}),": not effective, this view does not currently support rotation"]}),"\n",(0,l.jsxs)(r.li,{children:[(0,l.jsx)(r.code,{children:"keyboard"}),": arrow keys to pan, +/- to zoom"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"custom-globecontroller",children:"Custom GlobeController"}),"\n",(0,l.jsxs)(r.p,{children:["You can further customize the ",(0,l.jsx)(r.code,{children:"GlobeController"}),"'s behavior by extending the class:"]}),"\n",(0,l.jsx)(r.pre,{children:(0,l.jsx)(r.code,{className:"language-js",children:"import {Deck, _GlobeView as GlobeView, _GlobeController as GlobeController} from '@deck.gl/core';\n\nclass MyGlobeController extends GlobeController {\n\n  handleEvent(event) {\n    if (event.type === 'pan') {\n      // do something\n    } else {\n      super.handleEvent(event);\n    }\n  }\n}\n\nnew Deck({\n  views: new GlobeView(),\n  controller: {type: MyGlobeController},\n  initialViewState: viewState\n})\n"})}),"\n",(0,l.jsxs)(r.p,{children:["See the ",(0,l.jsx)(r.code,{children:"Controller"})," class ",(0,l.jsx)(r.a,{href:"/docs/api-reference/core/controller#methods",children:"documentation"})," for the methods that you can use and/or override."]}),"\n",(0,l.jsx)(r.h2,{id:"source",children:"Source"}),"\n",(0,l.jsx)(r.p,{children:(0,l.jsx)(r.a,{href:"https://github.com/visgl/deck.gl/tree/9.2-release/modules/core/src/controllers/globe-controller.ts",children:"modules/core/src/controllers/globe-controller.ts"})})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>c,x:()=>s});var n=o(96540);const l={},t=n.createContext(l);function c(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);