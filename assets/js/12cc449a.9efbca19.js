"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[970],{12660:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"api-reference/core/map-view","title":"MapView","description":"The MapView class is a subclass of View. This viewport creates a camera that looks at a geospatial location on a map from a certain direction. The behavior of MapView is generally modeled after that of Mapbox GL JS.","source":"@site/../docs/api-reference/core/map-view.md","sourceDirName":"api-reference/core","slug":"/api-reference/core/map-view","permalink":"/docs/api-reference/core/map-view","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/core/map-view.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"View Class","permalink":"/docs/api-reference/core/view"},"next":{"title":"GlobeView (Experimental)","permalink":"/docs/api-reference/core/globe-view"}}');var o=r(74848),t=r(28453);const l={},c="MapView",s={},a=[{value:"Constructor",id:"constructor",level:2},{value:"<code>repeat</code> (boolean, optional)",id:"repeat",level:4},{value:"<code>nearZMultiplier</code> (number, optional)",id:"nearzmultiplier",level:4},{value:"<code>farZMultiplier</code> (number, optional)",id:"farzmultiplier",level:4},{value:"<code>projectionMatrix</code> (number[16], optional)",id:"projectionmatrix",level:4},{value:"<code>fovy</code> (number, optional)",id:"fovy",level:4},{value:"<code>altitude</code> (number, optional)",id:"altitude",level:4},{value:"<code>orthographic</code> (boolean)",id:"orthographic",level:4},{value:"View State",id:"view-state",level:2},{value:"Controller",id:"controller",level:2},{value:"Source",id:"source",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"mapview",children:"MapView"})}),"\n",(0,o.jsxs)(i.p,{children:["The ",(0,o.jsx)(i.code,{children:"MapView"})," class is a subclass of ",(0,o.jsx)(i.a,{href:"/docs/api-reference/core/view",children:"View"}),". This viewport creates a camera that looks at a geospatial location on a map from a certain direction. The behavior of ",(0,o.jsx)(i.code,{children:"MapView"})," is generally modeled after that of Mapbox GL JS."]}),"\n",(0,o.jsxs)(i.p,{children:["It's recommended that you read the ",(0,o.jsx)(i.a,{href:"/docs/developer-guide/views",children:"Views and Projections guide"})," before using this class."]}),"\n",(0,o.jsx)("div",{style:{position:"relative",height:450}}),"\n",(0,o.jsx)("div",{style:{position:"absolute",transform:"translateY(-450px)",paddingLeft:"inherit",paddingRight:"inherit",left:0,right:0},children:(0,o.jsx)("iframe",{height:"450",width:"100%",scrolling:"no",title:"deck.gl MapView",src:"https://codepen.io/vis-gl/embed/MWbwyWy?height=450&theme-id=light&default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true",children:(0,o.jsxs)(i.p,{children:["See the Pen ",(0,o.jsx)("a",{href:"https://codepen.io/vis-gl/pen/MWbwyWy",children:"deck.gl MapView"})," by vis.gl\n(",(0,o.jsx)("a",{href:"https://codepen.io/vis-gl",children:"@vis-gl"}),") on ",(0,o.jsx)("a",{href:"https://codepen.io",children:"CodePen"}),"."]})})}),"\n",(0,o.jsx)(i.h2,{id:"constructor",children:"Constructor"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"import {MapView} from '@deck.gl/core';\nconst view = new MapView({id, ...});\n"})}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.code,{children:"MapView"})," takes the same parameters as the ",(0,o.jsx)(i.a,{href:"/docs/api-reference/core/view",children:"View"})," superclass constructor, plus the following:"]}),"\n",(0,o.jsxs)(i.h4,{id:"repeat",children:[(0,o.jsx)(i.code,{children:"repeat"})," (boolean, optional)"]}),"\n",(0,o.jsxs)(i.p,{children:["Whether to render multiple copies of the map at low zoom levels. Default ",(0,o.jsx)(i.code,{children:"false"}),"."]}),"\n",(0,o.jsxs)(i.h4,{id:"nearzmultiplier",children:[(0,o.jsx)(i.code,{children:"nearZMultiplier"})," (number, optional)"]}),"\n",(0,o.jsxs)(i.p,{children:["Scaler for the near plane, 1 unit equals to the height of the viewport. Default to ",(0,o.jsx)(i.code,{children:"0.1"}),". Overwrites the ",(0,o.jsx)(i.code,{children:"near"})," parameter."]}),"\n",(0,o.jsxs)(i.h4,{id:"farzmultiplier",children:[(0,o.jsx)(i.code,{children:"farZMultiplier"})," (number, optional)"]}),"\n",(0,o.jsxs)(i.p,{children:["Scaler for the far plane, 1 unit equals to the distance from the camera to the top edge of the screen. Default to ",(0,o.jsx)(i.code,{children:"1.01"}),". Overwrites the ",(0,o.jsx)(i.code,{children:"far"})," parameter."]}),"\n",(0,o.jsxs)(i.h4,{id:"projectionmatrix",children:[(0,o.jsx)(i.code,{children:"projectionMatrix"})," (number[16], optional)"]}),"\n",(0,o.jsx)(i.p,{children:"Projection matrix."}),"\n",(0,o.jsxs)(i.p,{children:["If ",(0,o.jsx)(i.code,{children:"projectionMatrix"})," is not supplied, the ",(0,o.jsx)(i.code,{children:"View"})," class will build a projection matrix from the following parameters:"]}),"\n",(0,o.jsxs)(i.h4,{id:"fovy",children:[(0,o.jsx)(i.code,{children:"fovy"})," (number, optional)"]}),"\n",(0,o.jsxs)(i.p,{children:["Field of view covered by the camera, in the perspective case. In degrees. If not supplied, will be calculated from ",(0,o.jsx)(i.code,{children:"altitude"}),"."]}),"\n",(0,o.jsxs)(i.h4,{id:"altitude",children:[(0,o.jsx)(i.code,{children:"altitude"})," (number, optional)"]}),"\n",(0,o.jsxs)(i.p,{children:["Distance of the camera relative to viewport height. Default ",(0,o.jsx)(i.code,{children:"1.5"}),"."]}),"\n",(0,o.jsxs)(i.h4,{id:"orthographic",children:[(0,o.jsx)(i.code,{children:"orthographic"})," (boolean)"]}),"\n",(0,o.jsxs)(i.p,{children:["Whether to create an orthographic or perspective projection matrix. Default is ",(0,o.jsx)(i.code,{children:"false"})," (perspective projection)."]}),"\n",(0,o.jsx)(i.h2,{id:"view-state",children:"View State"}),"\n",(0,o.jsxs)(i.p,{children:["To render, ",(0,o.jsx)(i.code,{children:"MapView"})," needs to be used together with a ",(0,o.jsx)(i.code,{children:"viewState"})," with the following parameters:"]}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"longitude"})," (number) - longitude at the map center"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"latitude"})," (number) - latitude at the map center"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"zoom"})," (number) - zoom level"]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"pitch"})," (number, optional) - pitch angle in degrees. Default ",(0,o.jsx)(i.code,{children:"0"})," (top-down)."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"bearing"})," (number, optional) - bearing angle in degrees. Default ",(0,o.jsx)(i.code,{children:"0"})," (north)."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"maxZoom"})," (number, optional) - max zoom level. Default ",(0,o.jsx)(i.code,{children:"20"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"minZoom"})," (number, optional) - min zoom level. Default ",(0,o.jsx)(i.code,{children:"0"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"maxPitch"})," (number, optional) - max pitch angle. Default ",(0,o.jsx)(i.code,{children:"60"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"minPitch"})," (number, optional) - min pitch angle. Default ",(0,o.jsx)(i.code,{children:"0"}),"."]}),"\n",(0,o.jsxs)(i.li,{children:[(0,o.jsx)(i.code,{children:"position"})," (number[3], optional) - Viewport center offsets from lng, lat in meters. Default: ",(0,o.jsx)(i.code,{children:"[0,0,0]"}),"."]}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"controller",children:"Controller"}),"\n",(0,o.jsxs)(i.p,{children:["By default, ",(0,o.jsx)(i.code,{children:"MapView"})," uses the ",(0,o.jsx)(i.code,{children:"MapController"})," to handle interactivity. To enable the controller, use:"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-js",children:"const view = new MapView({id: 'base-map', controller: true});\n"})}),"\n",(0,o.jsxs)(i.p,{children:["Visit the ",(0,o.jsx)(i.a,{href:"/docs/api-reference/core/map-controller",children:"MapController"})," documentation for a full list of supported options."]}),"\n",(0,o.jsx)(i.h2,{id:"source",children:"Source"}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.a,{href:"https://github.com/visgl/deck.gl/tree/9.2-release/modules/core/src/views/map-view.ts",children:"modules/core/src/views/map-view.ts"})})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,i,r)=>{r.d(i,{R:()=>l,x:()=>c});var n=r(96540);const o={},t=n.createContext(o);function l(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);