(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8976],{77212:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>sn,renderToDOM:()=>rn});var n={};i.r(n),i.d(n,{ArcLayer:()=>$.A,BitmapLayer:()=>ee.A,ColumnLayer:()=>se.A,GeoJsonLayer:()=>ce.A,GridCellLayer:()=>re.A,IconLayer:()=>te.A,LineLayer:()=>ie.A,PathLayer:()=>ae.A,PointCloudLayer:()=>ne.A,PolygonLayer:()=>le.A,ScatterplotLayer:()=>oe.A,SolidPolygonLayer:()=>ue.A,TextLayer:()=>de.A,_MultiIconLayer:()=>pe.A,_TextBackgroundLayer:()=>he.A});var o={};i.r(o),i.d(o,{CPUAggregator:()=>be.M,ContourLayer:()=>me.A,GridLayer:()=>ve.A,HeatmapLayer:()=>ye.A,HexagonLayer:()=>fe.A,ScreenGridLayer:()=>ge.A,WebGLAggregator:()=>_e.V,_AggregationLayer:()=>xe.A});var s={};i.r(s),i.d(s,{GeohashLayer:()=>Re.A,GreatCircleLayer:()=>Pe.A,H3ClusterLayer:()=>Te.A,H3HexagonLayer:()=>Le.A,MVTLayer:()=>Ee.A,QuadkeyLayer:()=>Ce.A,S2Layer:()=>Se.A,TerrainLayer:()=>Ie.A,Tile3DLayer:()=>Oe.A,TileLayer:()=>Ae.A,TripsLayer:()=>Me.A,_GeoCellLayer:()=>ze.A,_Tile2DHeader:()=>Fe.I,_Tileset2D:()=>ke.TL,_WMSLayer:()=>we.T,_getURLFromTemplate:()=>je.g8});var r={};i.r(r),i.d(r,{ScenegraphLayer:()=>Ve.A,SimpleMeshLayer:()=>De.A});var a=i(96540),l=i(5338),c=i(70713),d=i(29533),u=i(96864),p=i(49398),h=i(16443),g=i.n(h),f=i(74848);class m extends a.Component{render(){const{views:e=[]}=this.props,t=[];for(const i of e)(i.props.map||i.props.mapStyle)&&t.push((0,f.jsx)(p.A,{id:i.props.id,children:(0,f.jsx)(this.props.Map,{reuseMaps:!0,mapLib:g(),mapStyle:i.props.mapStyle})},i.props.id));return(0,f.jsx)(u.A,Object.assign({id:"json-deck"},this.props,{children:t}))}}var v=i(41698);const y={height:1e3,width:1e3};function x(e,t){var i;(i="https://maps.googleapis.com/maps/api/js?key="+e+"&libraries=places",new Promise(((e,t)=>{const n=document.createElement("script");n.src=i,n.addEventListener("load",e),n.addEventListener("error",(e=>t(e.error))),document.head.appendChild(n)}))).then((()=>t())).catch((e=>console.error(e)))}class _ extends a.Component{constructor(e){super(e),this.state={googleMapsLoaded:window.google&&window.google.maps}}componentDidMount(){const{googleMapsToken:e}=this.props;(!window.google||window.google&&!window.google.maps)&&x(e,(()=>{this.setState({googleMapsLoaded:!0})}))}render(){const{googleMapsLoaded:e}=this.state;return e?(0,f.jsx)(b,Object.assign({},this.props)):(0,f.jsx)("img",{src:"https://upload.wikimedia.org/wikipedia/commons/d/de/Ajax-loader.gif",alt:"Loading Google Maps overlay..."})}}class b extends a.Component{constructor(e){super(e),this.state={isOverlayConfigured:!1},this.DeckOverlay=new v.A({layers:[]}),this.containerRef=a.createRef()}componentDidMount(){const{initialViewState:e}=this.props,t={center:{lat:e.latitude,lng:e.longitude},mapTypeId:this.props.mapTypeId||"satellite",zoom:e.zoom},i=new window.google.maps.Map(this.containerRef.current,t);this.DeckOverlay.setMap(i),this.DeckOverlay.setProps({layers:this.props.layers}),this.setState({isOverlayConfigured:!0})}componentDidUpdate(e,t,i){this.DeckOverlay.setProps({layers:this.props.layers})}componentWillUnmount(){delete this.DeckOverlay}render(){return(0,f.jsx)("div",{ref:this.containerRef,style:y})}}var w=i(97394);function P(e,t){const i=function(e){if("string"==typeof e){let t=C[e];return t||(t=e.split("."),C[e]=t),t}return Array.isArray(e)?e:[e]}(t);let n=e;for(const o of i)n=S(n)?n[o]:void 0;return n}function S(e){return null!==e&&"object"==typeof e}const C={};var A=i(84824);const M={"||":(e,t)=>e||t,"&&":(e,t)=>e&&t,"|":(e,t)=>e|t,"^":(e,t)=>e^t,"&":(e,t)=>e&t,"==":(e,t)=>e==t,"!=":(e,t)=>e!=t,"===":(e,t)=>e===t,"!==":(e,t)=>e!==t,"<":(e,t)=>e<t,">":(e,t)=>e>t,"<=":(e,t)=>e<=t,">=":(e,t)=>e>=t,"<<":(e,t)=>e<<t,">>":(e,t)=>e>>t,">>>":(e,t)=>e>>>t,"+":(e,t)=>e+t,"-":(e,t)=>e-t,"*":(e,t)=>e*t,"/":(e,t)=>e/t,"%":(e,t)=>e%t},T={"-":e=>-e,"+":e=>+e,"~":e=>~e,"!":e=>!e};function L(e,t){return e.map((function(e){return I(e,t)}))}function O(e,t){const i=I(e.object,t);let n;if(n=e.computed?I(e.property,t):e.property.name,/^__proto__|prototype|constructor$/.test(n))throw Error('Access to member "'+n+'" disallowed.');return[i,i[n]]}function I(e,t){const i=e;switch(i.type){case"ArrayExpression":return L(i.elements,t);case"BinaryExpression":return M[i.operator](I(i.left,t),I(i.right,t));case"CallExpression":let e,n,o;if("MemberExpression"===i.callee.type?(o=O(i.callee,t),e=o[0],n=o[1]):n=I(i.callee,t),"function"!=typeof n)return;return n.apply(e,L(i.arguments,t));case"ConditionalExpression":return I(i.test,t)?I(i.consequent,t):I(i.alternate,t);case"Identifier":return t[i.name];case"Literal":return i.value;case"LogicalExpression":return"||"===i.operator?I(i.left,t)||I(i.right,t):"&&"===i.operator?I(i.left,t)&&I(i.right,t):M[i.operator](I(i.left,t),I(i.right,t));case"MemberExpression":return O(i,t)[1];case"ThisExpression":return t;case"UnaryExpression":return T[i.operator](I(i.argument,t));default:return}}const E={"-":e=>e};function R(e,t){if(e in E)return E[e];let i;const n=A(e);return"Identifier"===n.type?i=t=>P(t,e):(z(n,(e=>{if("CallExpression"===e.type)throw new Error("Function calls not allowed in JSON expressions")})),i=e=>I(n,e)),E[e]=i,i}function z(e,t){if(Array.isArray(e))e.forEach((e=>z(e,t)));else if(e&&"object"==typeof e){e.type&&t(e);for(const i in e)z(e[i],t)}}function j(e,t){if(void 0===t&&(t=""),!e)throw new Error("JSON conversion error "+t)}const k="@@=",F="@@#",D="@@function",V=e=>e&&"object"==typeof e;class N{constructor(){this.typeKey="@@type",this.functionKey=D,this.log=console,this.classes={},this.reactComponents={},this.enumerations={},this.constants={},this.functions={},this.React=null,this.convertFunction=R,this.preProcessClassProps=(e,t)=>t,this.postProcessConvertedJson=e=>e;for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];for(const n of t)this.merge(n)}merge(e){for(const t in e)switch(t){case"layers":case"views":Object.assign(this.classes,e[t]);break;default:if(t in this){const i=e[t];this[t]=V(this[t])?Object.assign(this[t],i):i}}}validate(e){return j(!this.typeKey||"string"==typeof this.typeKey),j(V(this.classes)),!0}}function U(e){return e.replace(k,"")}function B(e,t){const i={};for(const o in e){let t=e[o];"string"==typeof(n=t)&&n.startsWith(k)&&(t=U(t),t=R(t)),i[o]=t}var n;return i}function W(e,t,i){const n=i.classes[e],o=i.reactComponents[e];if(!n&&!o){const{log:n}=i;if(n){const i=JSON.stringify(t,null,0).slice(0,40);n.warn("JSON converter: No registered class of type "+e+"("+i+"...)  ")}return null}return n?function(e,t,i){i.preProcessClassProps&&(t=i.preProcessClassProps(e,t,i));return t=B(t),new e(t)}(n,t,i):function(e,t,i){const{React:n}=i,{children:o=[]}=t;delete t.children,i.preProcessClassProps&&(t=i.preProcessClassProps(e,t,i));return t=B(t),n.createElement(e,t,o)}(o,t,i)}const G=e=>e&&"object"==typeof e;class H{constructor(e){this.log=console,this.onJSONChange=()=>{},this.json=null,this.convertedJson=null,this.setProps(e)}finalize(){}setProps(e){"configuration"in e&&(this.configuration=e.configuration instanceof N?e.configuration:new N(e.configuration)),"onJSONChange"in e&&(this.onJSONChange=e.onJSONChange)}mergeConfiguration(e){this.configuration.merge(e)}convert(e){if(!e||e===this.json)return this.convertedJson;this.json=e;const t=function(e){return"string"==typeof e?JSON.parse(e):e}(e);let i=function(e,t){return t=new N(t),Z(e,"",t)}(t,this.configuration);return i=this.configuration.postProcessConvertedJson(i),this.convertedJson=i,i}convertJson(e){return this.convert(e)}}function Z(e,t,i){return Array.isArray(e)?e.map(((e,t)=>Z(e,String(t),i))):function(e,t){const{typeKey:i}=t,n=G(e)&&Boolean(e[i]);return n}(e,i)?function(e,t){const{typeKey:i}=t,n=e[i];let o=Object.assign({},e);return delete o[i],o=q(o,t),W(n,o,t)}(e,i):G(e)?D in e?function(e,t){const{functionKey:i}=t,n=e[i];let o=Object.assign({},e);return delete o[i],o=q(o,t),function(e,t,i){const n=i.functions[e];if(!n){const{log:n}=i;if(n){const i=JSON.stringify(t,null,0).slice(0,40);n.warn("JSON converter: No registered function "+e+"("+i+"...)  ")}return null}return n(t)}(n,o,t)}(e,i):q(e,i):"string"==typeof e?function(e,t,i){if(e.startsWith(k)&&i.convertFunction)return e=e.replace(k,""),i.convertFunction(e,i);if(e.startsWith(F)){if(e=e.replace(F,""),i.constants[e])return i.constants[e];const[t,n]=e.split(".");return i.enumerations[t][n]}return e}(e,0,i):e}function q(e,t){j(G(e));const i={};for(const n in e){const o=e[n];i[n]=Z(o,0,t)}return i}var K=i(63201),J=i(40604),Y=i(36876),X=i(83617),Q=i(3002),$=i(3346),ee=i(48956),te=i(78243),ie=i(60192),ne=i(84348),oe=i(80458),se=i(34651),re=i(5397),ae=i(21410),le=i(10800),ce=i(84962),de=i(83667),ue=i(39738),pe=i(50740),he=i(47495),ge=i(44274),fe=i(77075),me=i(74759),ve=i(99550),ye=i(69703),xe=i(29586),_e=i(57149),be=i(52601),we=i(89497),Pe=i(96538),Se=i(65641),Ce=i(37806),Ae=i(2966),Me=i(13644),Te=i(71490),Le=i(65544),Oe=i(43594),Ie=i(16828),Ee=i(33003),Re=i(12882),ze=i(17752),je=i(79338),ke=i(24460),Fe=i(7576),De=i(20624),Ve=i(49954),Ne=i(5223),Ue=i(55189),Be=i(50111),We=i(33847),Ge=i(73422),He=i(18120),Ze=i(44173);function qe(e,t,i,n,o,s){var r;if(void 0===n&&(n=[]),!e.content)return!1;e.userData||(e.userData={});const a=null==(r=t.get(i))?void 0:r[0];if(a){if(n.every((e=>e.name in a)))return!1;t.clear()}const l={};for(const c of e.content){let e=c.id;const t="function"==typeof o?o(c,{}):o;for(let n=0;n<i-1;n++)e=(0,Ge.s7)(e);const r=Number(e);if(!(r in l)){l[r]={id:e,count:0,position:[0,0]};for(const{name:e,aggregation:t}of n)l[r][e]="any"===t?c.properties[e]:0}const a=l[r].count;l[r].count+="function"==typeof s?s(c,{}):s;const d=l[r].count,u=d-a;l[r].position[0]=(a*l[r].position[0]+u*t[0])/d,l[r].position[1]=(a*l[r].position[1]+u*t[1])/d;for(const{name:i,aggregation:o}of n){const e=l[r][i],t=c.properties[i];"average"===o?l[r][i]=(a*e+u*t)/d:"count"===o||"sum"===o?l[r][i]=e+t:"max"===o?l[r][i]=Math.max(e,t):"min"===o&&(l[r][i]=Math.min(e,t))}}return t.set(i,Object.values(l)),!0}var Ke=i(96457);class Je extends ke.TL{getTileIndices(e){return super.getTileIndices(e).map(Ge.cx).map((e=>({q:e,i:(0,Ge.Q9)(e)})))}getTileId(e){let{q:t,i:i}=e;return i||(0,Ge.Q9)(t)}getTileMetadata(e){let{q:t}=e;return super.getTileMetadata((0,Ge.mM)(t))}getTileZoom(e){let{q:t}=e;return Number((0,Ge.Hn)(t))}getParentIndex(e){let{q:t}=e;return{q:(0,Ge.s7)(t)}}}var Ye=i(24697);function Xe(e){const{x:t,y:i,z:n}=(0,Ge.mM)(e),o=512/(1<<n);return[t*o,512-i*o,o]}function Qe(e,t){void 0===t&&(t=1);const[i,n]=function(e,t){const[i,n,o]=Xe(e);return[[i,n],[i+t*o,n-t*o]]}(e,t),[o,s]=(0,Ye.iV)(i),[r,a]=(0,Ye.iV)(n);return[r,s,r,a,o,a,o,s,r,s]}var $e=i(34935),et=i(22786);(0,Ne.mk)([$e.A]);const tt={data:et.ko,clusterLevel:{type:"number",value:5,min:1},getPosition:{type:"accessor",value:e=>{let{id:t}=e;return Qe(t,.5).slice(2,4)}},getWeight:{type:"accessor",value:1},refinementStrategy:"no-overlap",tileSize:Ke.R};class it extends Ae.A{initializeState(){super.initializeState(),this.state.aggregationCache=new WeakMap}renderLayers(){var e;const t=null==(e=this.state.tileset)?void 0:e.tiles.filter((e=>e.isLoaded&&e.content&&this.state.tileset.isTileVisible(e)));if(null==t||!t.length)return null;t.sort(((e,t)=>t.zoom-e.zoom));const{zoom:i}=this.context.viewport,{clusterLevel:n,getPosition:o,getWeight:s}=this.props,{aggregationCache:r}=this.state,a=function(e){const t=[],i=["any","average","count","min","max","sum"];for(const n of Object.keys(e.content[0].properties)){let e=n.split("_").pop().toLowerCase();i.includes(e)||(He.A.warn("No valid aggregation present in "+n+" property")(),e="any"),t.push({name:n,aggregation:e})}return t}(t[0]),l=[];let c=!1;for(const p of t){const e=Math.round(i-p.zoom),t=Math.round(n)-e;let d=r.get(p.content);d||(d=new Map,r.set(p.content,d));const u=qe(p,d,t,a,o,s);c||(c=u),l.push(...d.get(t))}l.sort(((e,t)=>Number(t.count-e.count)));const d=null==l?void 0:l.map((e=>e.id));if(c||(c=!(0,Be.b)(d,this.state.clusterIds,1)),this.setState({clusterIds:d}),c){const e=function(e,t){const i={};for(const{name:n,aggregation:o}of t)if(i[n]={min:1/0,max:-1/0},"any"!==o)for(const t of e)i[n].min=Math.min(i[n].min,t[n]),i[n].max=Math.max(i[n].max,t[n]);return i}(l,a),t=function(e){const t=new Float32Array(2*e.length),i=new Uint16Array(e.length);for(let n=0;n<e.length;n++)t.set(e[n].position,2*n),i[n]=n;return Object.assign({},(0,Ze.bY)(),{points:(0,Ze.YR)(t,i,i,{},e)})}(l);t.points.attributes={stats:e},this.setState({data:t})}const u=Object.assign({},this.props,{id:"clusters",data:this.state.data,dataComparator:(e,t)=>{var i,n;const o=null==e||null==(i=e.points)||null==(i=i.properties)?void 0:i.map((e=>e.id)),s=null==t||null==(n=t.points)||null==(n=n.properties)?void 0:n.map((e=>e.id));return(0,Be.b)(o,s,1)}});return new ce.A(this.getSubLayerProps(u))}getPickingInfo(e){const t=e.info;if(-1!==t.index){const{data:i}=e.sourceLayer.props;t.object=(0,Ue.K)(i,{globalFeatureId:t.index})}return t}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}filterSubLayer(){return!0}}it.layerName="ClusterGeoJsonLayer",it.defaultProps=tt;class nt extends We.A{getLoadOptions(){const e=this.props.data;return(0,et.FB)(super.getLoadOptions(),{fetch:{headers:{Authorization:"Bearer "+e.accessToken}},cartoSpatialTile:{scheme:"quadbin"}})}renderLayers(){const e=this.props.data;if(!e)return null;const{tiles:t,maxresolution:i}=e;return[new it(this.props,{id:"cluster-geojson-layer-"+this.props.id,data:t,TilesetClass:Je,maxZoom:i,loadOptions:this.getLoadOptions()})]}}nt.layerName="ClusterTileLayer",nt.defaultProps=tt;const ot=nt;var st=i(89254),rt=i(98587);const at={name:"heatmap",uniformPropTypes:{colorDomain:{value:[0,1]},delta:{value:[0,1]},intensity:{value:1,min:.1,max:10},opacity:{value:1,min:0,max:1},radiusPixels:{value:20,min:0,softMax:100}},uniformTypes:{colorDomain:"vec2<f32>",delta:"vec2<f32>",intensity:"f32",opacity:"f32",radiusPixels:"f32"},getUniforms:e=>{if(!e)return{};const{colorDomain:t=[0,1],colorTexture:i,delta:n=[1,0],intensity:o=1,opacity:s=1,radiusPixels:r=20}=e;return{colorDomain:t,colorTexture:i,delta:n,intensity:o,opacity:s,radiusPixels:r}},fs:"uniform heatmapUniforms {\n  vec2 colorDomain;\n  vec2 delta;\n  float intensity;\n  float opacity;\n  float radiusPixels;\n} heatmap;\n\nuniform sampler2D colorTexture;\n\nvec3 colorGradient(float value) {\n  return texture(colorTexture, vec2(value, 0.5)).rgb;\n}\n\nconst vec3 SHIFT = vec3(1.0, 256.0, 256.0 * 256.0);\nconst float MAX_VAL = SHIFT.z * 255.0;\nconst float SCALE = MAX_VAL / 8.0;\nvec4 pack(float value) {\n  return vec4(mod(vec3(value, floor(value / SHIFT.yz)), 256.0), 255.0) / 255.0;\n}\nfloat unpack(vec3 color) {\n  return 255.0 * dot(color, SHIFT);\n}\n\nvec4 heatmap_sampleColor(sampler2D source, vec2 texSize, vec2 texCoord) {\n  bool firstPass = (heatmap.delta.y < 0.5);\n  float accumulator = 0.0;\n\n  // Controls quality of heatmap, larger values increase quality at expense of performance\n  float SUPPORT = clamp(heatmap.radiusPixels / 2.0, 8.0, 32.0);\n\n  // Gaussian normalization parameters\n  float sigma = SUPPORT / 3.0;\n  float a = -0.5 / (sigma * sigma);\n  float w0 = 0.3989422804014327 / sigma; // 1D normalization\n  for (float t = -SUPPORT; t <= SUPPORT; t++) {\n    vec2 percent = (t * heatmap.delta - 0.5) / SUPPORT;\n    vec2 delta = percent * heatmap.radiusPixels / texSize;\n    vec4 offsetColor = texture(source, texCoord + delta);\n\n    // Unpack float\n    float value = unpack(offsetColor.rgb);\n\n    // Gaussian\n    float weight = w0 * exp(a * t * t);\n    \n    accumulator += value * weight;\n  }\n\n  if (firstPass) {\n    return pack(accumulator);\n  }\n\n  // Undo scaling to obtain normalized density\n  float density = 10.0 * heatmap.intensity * accumulator / SCALE;\n \n  // Domain also in normalized density units\n  vec2 domain = heatmap.colorDomain;\n\n  // Apply domain\n  float f = (density - domain[0]) / (domain[1] - domain[0]);\n\n  // sqrt/log scaling??\n  // float f = (log(density) - log(domain[0] + 1.0)) / (log(domain[1] + 1.0) - log(domain[0] + 1.0));\n  // f = sqrt(f);\n\n  // Color map\n  vec4 color = vec4(0.0);\n  color.rgb = colorGradient(f);\n\n  color.a = smoothstep(0.0, 0.1, f);\n  color.a = pow(color.a, 1.0 / 2.2);\n  color.a *= heatmap.opacity;\n\n  return color;\n}\n",passes:[{sampler:!0,uniforms:{delta:[1,0]}},{sampler:!0,uniforms:{delta:[0,1]}}]};var lt=i(70628),ct=i(55382),dt=i(39883);const ut={name:"screen",fs:"uniform screenUniforms {\n  vec2 texSize;\n} screen;\n",uniformTypes:{texSize:"vec2<f32>"}};class pt extends dt.A{constructor(e,t){super(e,t);const{module:i,fs:n,id:o}=t;this.model=new ct.T(e,{id:o,fs:n,modules:[i,ut],parameters:{depthWriteEnabled:!1,depthCompare:"always"}})}render(e){this._renderPass(this.device,e)}delete(){this.model.destroy(),this.model=null}_renderPass(e,t){const{clearCanvas:i,inputBuffer:n,outputBuffer:o}=t,s=[n.width,n.height],r={texSrc:n.colorAttachments[0],texSize:s};this.model.shaderInputs.setProps(Object.assign({screen:r},t.moduleProps));const a=this.device.beginRenderPass({framebuffer:o,parameters:{viewport:[0,0,...s]},clearColor:!!i&&[0,0,0,0],clearDepth:1,clearStencil:!1});this.model.draw(a),a.end()}}class ht{constructor(e,t){this.id=e.name+"-pass",this.props=t,(0,lt.UK)(e),this.module=e}setup(e){let{device:t}=e;this.passes=function(e,t,i){return t.passes.map(((n,o)=>{const s=function(e,t){if(t.filter){const i="string"==typeof t.filter?t.filter:e.name+"_filterColor_ext";return ft(i)}if(t.sampler){const i="string"==typeof t.sampler?t.sampler:e.name+"_sampleColor";return mt(i)}return""}(t,n);return new pt(e,{id:i+"-"+o,module:t,fs:s})}))}(t,this.module,this.id)}setProps(e){this.props=e}preRender(){}postRender(e){const t=this.passes,{target:i}=e;let n=e.inputBuffer,o=e.swapBuffer;for(let s=0;s<t.length;s++){const r=s===t.length-1,a=void 0!==i&&r;a&&(o=i);const l=!a||Boolean(e.clearCanvas),c={},d=this.module.passes[s].uniforms;c[this.module.name]=Object.assign({},this.props,d),t[s].render({clearCanvas:l,inputBuffer:n,outputBuffer:o,moduleProps:c});const u=o;o=n,n=u}return n}cleanup(){if(this.passes){for(const e of this.passes)e.delete();this.passes=void 0}}}const gt="#version 300 es\nuniform sampler2D texSrc;\n\nin vec2 position;\nin vec2 coordinate;\nin vec2 uv;\n\nout vec4 fragColor;\n",ft=e=>gt+"\nvoid main() {\n  fragColor = texture(texSrc, coordinate);\n  fragColor = "+e+"(fragColor, screen.texSize, coordinate);\n}\n",mt=e=>gt+"\nvoid main() {\n  fragColor = "+e+"(texSrc, screen.texSize, coordinate);\n}\n";const vt={format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}};function yt(e){for(;e.parent&&!e.applyPostProcess;)e=e.parent;return e}class xt extends Q.A{initializeState(){this.id="draw-callback-"+yt(this).props.id}_drawLayer(){yt(this).applyPostProcess()}}function _t(e){var t;return(t=class extends e{draw(e){const{shaderModuleProps:t}=e,{picking:i}=t,n=yt(this);i.isActive||n.enableRTT(e),super.draw(e),i.isActive||n.disableRTT()}}).layerName="RTT-"+e.layerName,t}function bt(e,t){var i;return(i=class extends e{initializeState(e){super.initializeState(e),this._createTextures(),this.internalState.postProcess=new ht(t,this.props),this.internalState.postProcess.setup(e)}updateState(e){super.updateState(e),this.internalState.postProcess.setProps(this.props)}renderLayers(){let e=super.renderLayers();return e?(e=Array.isArray(e)?e:[e],[...e,new xt]):null}_createTextures(){const{device:e}=this.context;this.internalState.renderBuffers=[0,1].map((t=>e.createFramebuffer({id:"layer-fbo-"+t,colorAttachments:[e.createTexture(vt)],depthStencilAttachment:"depth16unorm"})))}_resizeBuffers(e){const{shaderModuleProps:t}=e,{viewport:i}=this.context,{devicePixelRatio:n}=t.project,o=n*i.width,s=n*i.height;this.internalState.renderBuffers.forEach((e=>e.resize({width:o,height:s})))}enableRTT(e){this._resizeBuffers(e),this.internalState.originalRenderPass=this.context.renderPass;const[t]=this.internalState.renderBuffers;this.internalState.internalRenderPass=this.context.device.beginRenderPass({framebuffer:t,parameters:{viewport:[0,0,t.width,t.height]},clearColor:!this.internalState.renderInProgress&&[0,0,0,0]}),this.internalState.renderInProgress=!0,this.context.renderPass=this.internalState.internalRenderPass}disableRTT(){this.internalState.internalRenderPass.end(),this.context.renderPass=this.internalState.originalRenderPass}applyPostProcess(){if(!this.internalState.renderInProgress)return;const[e,t]=this.internalState.renderBuffers,{framebuffer:i}=this.context.renderPass.props;this.internalState.postProcess.postRender({inputBuffer:e,swapBuffer:t,target:i}),this.internalState.renderInProgress=!1}_finalize(){this.internalState.renderBuffers.forEach((e=>{e.destroy()})),this.internalState.renderBuffers=null,this.internalState.postProcess.cleanup()}}).layerName="PostProcess"+e.layerName,i}xt.layerName="DrawCallbackLayer";const wt={name:"copy",fs:"vec4 copy_filterColor_ext(vec4 color, vec2 texSize, vec2 texCoord) {\n  return color;\n}\n",getUniforms:()=>({}),passes:[{filter:!0}]};class Pt extends ze.A{indexToBounds(){const{data:e,extruded:t,getQuadbin:i}=this.props,n=t?.99:1;return{data:e,_normalize:!1,positionFormat:"XY",getPolygon:(e,t)=>Qe(i(e,t),n),updateTriggers:{getPolygon:n}}}}Pt.layerName="QuadbinLayer",Pt.defaultProps={getQuadbin:{type:"accessor",value:e=>e.quadbin}};const St=Pt;var Ct=i(42463);const At=e=>{const{data:t}=e;if(!t||!t.length)return null;const i="bigint"==typeof t[0].id;return new St(e,{getQuadbin:i?e=>e.id:e=>(0,Ge.uU)(e.id)})},Mt={data:et.ko,tileSize:Ke.R};class Tt extends We.A{getLoadOptions(){const e=this.props.data;return(0,et.FB)(super.getLoadOptions(),{fetch:{headers:{Authorization:"Bearer "+e.accessToken}},cartoSpatialTile:{scheme:"quadbin"}})}renderLayers(){const e=this.props.data;if(!e)return null;const{tiles:t,maxresolution:i}=e;return new(this.getSubLayerClass("spatial-index-tile",Ct.A))(this.props,{id:"quadbin-tile-layer-"+this.props.id,data:t,TilesetClass:Je,renderSubLayers:At,maxZoom:i,loadOptions:this.getLoadOptions()})}}Tt.layerName="QuadbinTileLayer",Tt.defaultProps=Mt;const Lt=Tt,Ot=["data","getWeight","colorDomain","intensity","radiusPixels","_subLayerProps","updateTriggers","onMaxDensityChange","onViewportLoad","onTileLoad","onTileUnload"],It={format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}};function Et(e){const t=Number((0,Ge.Hn)(e));return Math.pow(4,t)}const Rt={name:"density",vs:"uniform densityUniforms {\n  float factor;\n} density;\n",uniformTypes:{factor:"f32"}};class zt extends(_t(ue.A)){getShaders(e){const t=super.getShaders(e);return t.inject={"vs:#main-end":'\n      // Value from getWeight accessor\n  float weight = elevations;\n\n  // Keep "power" delivered to screen constant when tiles update\n  // by outputting normalized density\n  weight *= density.factor;\n\n  // Pack float into 3 channels to pass to heatmap shader\n  // SCALE value important, as we don\'t want to saturate\n  // but also want enough definition to avoid banding\n  const vec3 SHIFT = vec3(1.0, 256.0, 256.0 * 256.0);\n  const float MAX_VAL = SHIFT.z * 255.0;\n  const float SCALE = MAX_VAL / 8.0;\n  weight *= SCALE;\n  weight = clamp(weight, 0.0, MAX_VAL);\n  vColor = vec4(mod(vec3(weight, floor(weight / SHIFT.yz)), 256.0), 255.0) / 255.0;\n'},t.modules=[...t.modules,Rt],t}draw(e){const t=this.props.data[0],i=this.props.elevationScale,n={factor:Et(t.id)/i};for(const o of this.state.models)o.shaderInputs.setProps({density:n});super.draw(e)}}zt.layerName="RTTSolidPolygonLayer";const jt=bt(Lt,at),kt={data:et.ko,getWeight:{type:"accessor",value:1},onMaxDensityChange:{type:"function",optional:!0,value:null},colorDomain:{type:"array",value:[0,1]},colorRange:[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]],intensity:{type:"number",value:1},radiusPixels:{type:"number",min:0,max:100,value:20}};class Ft extends We.A{initializeState(){this.state={isLoaded:!1,tiles:new Set,viewportChanged:!1}}shouldUpdateState(e){let{changeFlags:t}=e;const{viewportChanged:i}=t;return this.setState({viewportChanged:i}),t.somethingChanged}updateState(e){const{props:t,oldProps:i}=e;super.updateState(e),t.colorRange!==i.colorRange&&this._updateColorTexture(e)}renderLayers(){var e,t;const i=this.props,{data:n,getWeight:o,colorDomain:s,intensity:r,radiusPixels:a,_subLayerProps:l,updateTriggers:c,onMaxDensityChange:d,onViewportLoad:u,onTileLoad:p,onTileUnload:h}=i,g=(0,rt.A)(i,Ot),f=Object.assign({},l,{cell:Object.assign({},null==l?void 0:l.cell,{_subLayerProps:Object.assign({},null==l||null==(e=l.cell)?void 0:e._subLayerProps,{fill:Object.assign({},null==l||null==(t=l.cell)||null==(t=t._subLayerProps)?void 0:t.fill,{type:zt})})})});let m=0,v=0;const y=[...this.state.tiles].filter((e=>e.content)),x=y.filter((e=>e.isVisible)),_=x.length?x:y;for(const w of _){const e=Et(w.content[0].id);v=Math.max(w.userData.maxWeight*e,v),m=Math.max(w.zoom,m)}const b=this.context.viewport.zoom-m;return v=v*Math.pow(2,b),"function"==typeof d&&d(v),new jt(g,this.getSubLayerProps({id:"heatmap",data:n,getFillColor:0,getElevation:o,elevationScale:v,colorDomain:s,radiusPixels:a,intensity:r,_subLayerProps:f,refinementStrategy:"no-overlap",colorTexture:this.state.colorTexture,extruded:!1,stroked:!1,updateTriggers:{getElevation:c.getWeight},onViewportLoad:e=>{this.setState({isLoaded:!0}),"function"==typeof u&&u(e)},onTileLoad:e=>{let t=-1/0;if("function"!=typeof o)t=o;else if(e.content)for(const i of e.content)t=Math.max(o(i,{}),t);e.userData={maxWeight:t},this.state.tiles.add(e),"function"==typeof p&&p(e)},onTileUnload:e=>{this.state.tiles.delete(e),"function"==typeof h&&h(e)},transitions:{elevationScale:{type:"spring",stiffness:.3,damping:.5}}}))}_updateColorTexture(e){var t;const{colorRange:i}=e.props;let{colorTexture:n}=this.state;const o=function(e){const t=new Uint8Array(4*e.length);let i=0;for(let n=0;n<e.length;n++){const o=e[n];t[i++]=o[0],t[i++]=o[1],t[i++]=o[2],t[i++]=Number.isFinite(o[3])?o[3]:255}return t}(i);var s;n&&(null==(t=n)?void 0:t.width)===i.length?n.setTexture2DData({data:o}):(null==(s=n)||s.destroy(),n=this.context.device.createTexture(Object.assign({},It,{data:o,width:i.length,height:1})));this.setState({colorTexture:n})}}Ft.layerName="HeatmapTileLayer",Ft.defaultProps=kt;const Dt=Ft,Vt=["updateTriggers"],[Nt,Ut,Bt,Wt]=[0,1,2,3];class Gt extends he.A{getShaders(){const e=super.getShaders();let t=e.vs;return t=t.replaceAll("textBackground.padding.","_padding."),t=t.replace("void main(void) {","void main(void) {\n  vec4 _padding = textBackground.padding + instancePixelOffsets.xyxy * vec4(1.0, 1.0, -1.0, -1.0);"),Object.assign({},e,{vs:t})}}Gt.layerName="EnhancedTextBackgroundLayer";class Ht extends de.A{filterSubLayer(e){let{layer:t,renderPass:i}=e;const n=t.id.includes("primary-background");return"collision"===i?n:!n}}Ht.layerName="EnhancedTextLayer";const Zt=Object.assign({},de.A.defaultProps,{getRadius:{type:"accessor",value:1},radiusScale:{type:"number",min:0,value:1}});class qt extends We.A{calculatePixelOffset(e){const{getTextAnchor:t,getAlignmentBaseline:i,getRadius:n,getSecondaryText:o,radiusScale:s,secondarySizeScale:r,sizeScale:a}=this.props,l="middle"===t?0:"start"===t?1:-1,c="center"===i?0:"bottom"===i?1:-1,d=a/4,u=1.25*a,p=.6*(1-c)*a;let h=e?p:0;"middle"===t&&"top"===i&&o&&(h-=p,h-=r,h+=a);const g=1.25;return"function"==typeof n?(e,t)=>{const i=(t?n(e,t):1)*s*g;return[l*(i+d),c*(i+u)+h]}:[l*(n*s*g+d),c*(n*s*g+u)+h]}calculateBackgroundPadding(){const{getTextAnchor:e,getAlignmentBaseline:t,sizeScale:i}=this.props,n=12*i,o=3*i,s=[0,0,0,0];return"top"===t?s[Ut]=o:"bottom"===t?s[Wt]=o:(s[Ut]=.5*o,s[Wt]=.5*o),"start"===e?s[Nt]=n:"end"===e?s[Bt]=n:(s[Nt]=.5*n,s[Bt]=.5*n),s}renderTextLayer(e,t){let{updateTriggers:i={}}=t,n=(0,rt.A)(t,Vt);const{data:o,characterSet:s,fontFamily:r,fontSettings:a,fontWeight:l,outlineColor:c,outlineWidth:d,sizeScale:u,radiusScale:p,getAlignmentBaseline:h,getColor:g,getPosition:f,getTextAnchor:m,updateTriggers:v}=this.props;if(u<2){var y;const e=null!=(y=this.parent)&&null!=(y=y.props)&&y.textSizeScale?"textSizeScale":"sizeScale";He.A.warn(e+" has small value ("+u+"). Note getTextSize is not supported on PointLabelLayer")()}return new Ht(this.getSubLayerProps({id:e,data:o,characterSet:s,fontFamily:r,fontSettings:a,fontWeight:l,outlineColor:c,outlineWidth:d,sizeScale:u,getAlignmentBaseline:h,getColor:g,getPosition:f,getTextAnchor:m,updateTriggers:Object.assign({},v,i,{getPixelOffset:[v.getRadius,v.getTextAnchor,v.getAlignmentBaseline,p,u]})}),{getSize:1,_subLayerProps:{background:{type:Gt}}},n)}renderLayers(){const{getText:e,getSecondaryColor:t,getSecondaryText:i,secondaryOutlineColor:n,secondarySizeScale:o,updateTriggers:s}=this.props,r=this.calculatePixelOffset(!1),a=this.calculateBackgroundPadding();return[this.renderTextLayer(s.getText+"-primary",{backgroundPadding:a,getText:e,getPixelOffset:r,background:!0}),Boolean(i)&&this.renderTextLayer(s.getSecondaryText+"-secondary",Object.assign({getText:i,getPixelOffset:this.calculatePixelOffset(!0),getAlignmentBaseline:"top"},t&&{getColor:t},o&&{sizeScale:o},n&&{outlineColor:n}))]}}qt.layerName="PointLabelLayer",qt.defaultProps=Zt;const Kt=qt,Jt=Object.assign({},se.A.defaultProps,{extruded:!1,diskResolution:4,vertices:[[-.5,-.5],[.5,-.5],[.5,.5],[-.5,.5]]});class Yt extends(_t(se.A)){getShaders(){var e;const t=super.getShaders(),i=this.props.data,n=null!=(e=i.data.blockSize)?e:Math.sqrt(i.length);return Object.assign({},t,{defines:Object.assign({},t.defines,{BLOCK_WIDTH:n}),vs:"#version 300 es\n#define SHADER_NAME raster-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin float instanceElevations;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec4 position_commonspace;\n#endif\nvoid main(void) {\nvec2 tileOrigin = column.offset.xy;\nfloat scale = column.widthScale;\nint yIndex = - (gl_InstanceID / BLOCK_WIDTH);\nint xIndex = gl_InstanceID + (yIndex * BLOCK_WIDTH);\nvec2 cellCenter = scale * vec2(float(xIndex) + 0.5, float(yIndex) - 0.5);\nvec4 color = column.isStroke ? instanceLineColors : instanceFillColors;\nfloat shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\nfloat cellWidth = column.coverage * scale;\ngeometry.position = vec4(tileOrigin, 0.0, 1.0);\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\ngeometry.position.xyz -= project.commonOrigin;\n}\ngeometry.position.xy += cellCenter;\nfloat elevation = 0.0;\nfloat strokeOffsetRatio = 1.0;\nif (column.extruded) {\nelevation = instanceElevations * (positions.z + 1.0) / 2.0 * column.elevationScale;\n} else if (column.stroked) {\nfloat halfOffset = project_pixel_size(column.widthScale) / cellWidth;\nif (column.isStroke) {\nstrokeOffsetRatio -= sign(positions.z) * halfOffset;\n} else {\nstrokeOffsetRatio -= halfOffset;\n}\n}\ngeometry.pickingColor = instancePickingColors;\nvec2 base = positions.xy * scale * strokeOffsetRatio * column.coverage * shouldRender;\nvec3 cell = vec3(base, project_size(elevation));\nDECKGL_FILTER_SIZE(cell, geometry);\ngeometry.position.xyz += cell;\ngl_Position = project_common_position_to_clipspace(geometry.position);\ngeometry.normal = project_normal(normals);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (column.extruded && !column.isStroke) {\n#ifdef FLAT_SHADING\nposition_commonspace = geometry.position;\nvColor = vec4(color.rgb, color.a * layer.opacity);\n#else\nvec3 lightColor = lighting_getLightColor(color.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, color.a * layer.opacity);\n#endif\n} else {\nvColor = vec4(color.rgb, color.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n"})}initializeState(){this.getAttributeManager().addInstanced({instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getLineColor",defaultValue:[255,255,255,255]}})}}function Xt(e,t){return e.data===t.data&&e.length===t.length}Yt.layerName="RasterColumnLayer";class Qt extends We.A{renderLayers(){var e;const{data:t,getElevation:i,getFillColor:n,getLineColor:o,getLineWidth:s,tileIndex:r,updateTriggers:a}=this.props;if(!t||!r)return null;const l=null!=(e=t.blockSize)?e:0,[c,d,u]=Xe(r),p=[c,d],h=u/l,g=this.getSubLayerClass("column",Yt),{highlightedObjectIndex:f,highlightColor:m}=this.state;return new g(this.props,this.getSubLayerProps({id:"cell",updateTriggers:a,getElevation:this.getSubLayerAccessor(i),getFillColor:this.getSubLayerAccessor(n),getLineColor:this.getSubLayerAccessor(o),getLineWidth:this.getSubLayerAccessor(s)}),{data:{data:t,length:l*l},dataComparator:Xt,offset:p,lineWidthScale:h,highlightedObjectIndex:f,highlightColor:m,parameters:{blendColorSrcFactor:"one",blendAlphaSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaDstFactor:"zero",blendColorOperation:"add",blendAlphaOperation:"add"}})}getSubLayerAccessor(e){return"function"!=typeof e?super.getSubLayerAccessor(e):(t,i)=>{const{data:n,index:o}=i,s=n.data,r=(0,Ze.Qd)(s.cells,o);return e({properties:r},i)}}getPickingInfo(e){const t=super.getPickingInfo(e);return-1!==t.index&&(t.object=this.getSubLayerAccessor((e=>e))(void 0,{data:this.props,index:t.index})),t}_updateAutoHighlight(e){const{highlightedObjectIndex:t}=this.state;let i=-1;if(-1!==e.index&&(i=e.index),t!==i){let{highlightColor:t}=this.props;"function"==typeof t&&(t=t(e)),this.setState({highlightColor:t,highlightedObjectIndex:i})}}}Qt.layerName="RasterLayer",Qt.defaultProps=Jt;const $t=Qt;var ei=i(55404);const ti={uint8:Uint8Array,uint16:Uint16Array,uint32:Uint32Array,uint64:BigUint64Array,int8:Int8Array,int16:Int16Array,int32:Int32Array,int64:BigInt64Array,float32:Float32Array,float64:Float64Array};class ii{static read(e,t){return e.readFields(ii._readField,{name:"",type:"",data:null},t)}static _readField(e,t,i){if(1===e)t.name=i.readString();else if(2===e)t.type=i.readString();else if(3===e){const e=ti[t.type];if(!e)throw Error("Invalid data type: "+t.type);t.data={};const{compression:n}=ni;(0,ei.w)(e,i,t.data,{compression:n})}}}class ni{static read(e,t){return e.readFields(ni._readField,{blockSize:0,bands:[]},t)}static _readField(e,t,i){1===e?t.blockSize=i.readVarint():2===e&&t.bands.push(ii.read(i,i.readVarint()+i.pos))}}var oi=i(39255);const si="9.1.14",ri="cartoRasterTile";function ai(e,t){var i;const n=null==t||null==(i=t.cartoRasterTile)?void 0:i.metadata;if(!e||!n)return null;ni.compression=n.compression;const o=(0,oi.u)(e,ni),{bands:s,blockSize:r}=o,a={};for(let l=0;l<s.length;l++){const{name:e,data:t}=s[l];a[e]=t}return{blockSize:r,cells:{numericProps:a,properties:[]}}}const li={name:"CARTO Raster Tile",version:si,id:ri,module:"carto",extensions:["pbf"],mimeTypes:["application/vnd.carto-raster-tile"],category:"geometry",parse:async(e,t)=>ai(e,t),parseSync:ai,worker:!0,options:{cartoRasterTile:{metadata:null,workerUrl:(0,Ze.MU)(ri,si)}}};(0,Ne.mk)([li]);const ci=e=>{var t;const i=null==(t=e.tile)||null==(t=t.index)?void 0:t.q;return i?new $t(e,{tileIndex:i}):null},di={data:et.ko,refinementStrategy:"no-overlap",tileSize:Ke.R};class ui extends(bt(Ae.A,wt)){filterSubLayer(e){const{tile:t}=e.layer.props;return!t||super.filterSubLayer(e)}}class pi extends We.A{getLoadOptions(){const e=this.props.data;return(0,et.FB)(super.getLoadOptions(),{fetch:{headers:{Authorization:"Bearer "+e.accessToken}}})}renderLayers(){const e=this.props.data;if(!e)return null;const{tiles:t,minzoom:i,maxzoom:n,raster_metadata:o}=e,s=this.getSubLayerClass("tile",ui),r=this.getLoadOptions();return new s(this.props,{id:"raster-tile-layer-"+this.props.id,data:t,TilesetClass:Je,renderSubLayers:ci,minZoom:i,maxZoom:n,loadOptions:Object.assign({},r,{cartoRasterTile:Object.assign({},null==r?void 0:r.cartoRasterTile,{metadata:o})})})}}pi.layerName="RasterTileLayer",pi.defaultProps=di;const hi=pi;var gi=i(68801);class fi{static read(e,t){return e.readFields(fi._readField,{properties:[],numericProps:{}},t)}static _readField(e,t,i){if(1===e)t.properties.push(gi.tZ.read(i,i.readVarint()+i.pos));else if(2===e){const e=gi.cQ.read(i,i.readVarint()+i.pos);t.numericProps[e.key]=e.value}}}const mi="9.1.14",vi="cartoPropertiesTile";function yi(e,t){return e?(0,oi.u)(e,fi):null}const xi={name:"CARTO Properties Tile",version:mi,id:vi,module:"carto",extensions:["pbf"],mimeTypes:["application/vnd.carto-properties-tile"],category:"geometry",worker:!0,parse:async(e,t)=>yi(e,t),parseSync:yi,options:{cartoPropertiesTile:{workerUrl:(0,Ze.MU)(vi,mi)}}};var _i=i(29469);const bi="9.1.14",wi="cartoVectorTile";function Pi(e,t,i){let{startPosition:n,endPosition:o,indices:s}=i;const r=e.positions.size,a=n*r,l=o*r,c=e.positions.value.subarray(a,l),d=s.slice(1).map((e=>e-n)),u=(0,_i.Ay)(c,d,r);for(let p=0,h=u.length;p<h;++p)t.push(n+u[p])}function Si(e,t){if(!e)return null;const i=(0,oi.u)(e,gi._t);return i.polygons&&!i.polygons.triangles&&function(e){const{polygonIndices:t,primitivePolygonIndices:i}=e,n=[];let o=0;for(let s=0;s<t.value.length-1;s++){const r=t.value[s],a=t.value[s+1],l=i.value.indexOf(a),c=i.value.subarray(o,l);o=l,Pi(e,n,{startPosition:r,endPosition:a,indices:c})}e.triangles={value:new Uint32Array(n),size:1}}(i.polygons),i}const Ci={name:"CARTO Vector Tile",version:bi,id:wi,module:"carto",extensions:["pbf"],mimeTypes:["application/vnd.carto-vector-tile"],category:"geometry",parse:async(e,t)=>Si(e,t),parseSync:Si,worker:!0,options:{cartoVectorTile:{workerUrl:(0,Ze.MU)(wi,bi)}}};var Ai=i(39373),Mi=i(68062);function Ti(e,t){const{positions:{value:i,size:n},polygonIndices:{value:o},triangles:{value:s}}=e,r=o[t],a=o[t+1];let l=0,c=0;for(;c<s.length;){if(s[c]>=r)break;c+=3}for(;c<s.length;){const e=s[c];if(e>=a)break;const t=s[c+1],o=s[c+2];l+=Ii(i.subarray(e*n,e*n+n),i.subarray(t*n,t*n+n),i.subarray(o*n,o*n+n)),c+=3}return l}function Li(e,t){let[i,n]=e,{west:o,east:s,south:r,north:a}=t;return i>=o&&i<s&&n>=r&&n<a}function Oi(e,t,i,n){const o=Math.abs((i[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(i[1]-t[1]))/2,s=Math.abs((t[0]-e[0])*(i[1]-e[1])-(i[0]-e[0])*(t[1]-e[1]))/2,r=Math.abs((i[0]-e[0])*(n[1]-e[1])-(n[0]-e[0])*(i[1]-e[1]))/2,a=Math.abs((n[0]-e[0])*(t[1]-e[1])-(t[0]-e[0])*(n[1]-e[1]))/2;return Math.abs(o-(s+r+a))<1e-10}function Ii(e,t,i){let[n,o]=e,[s,r]=t,[a,l]=i;return Math.abs((n*(r-l)+s*(l-o)+a*(o-r))/2)}function Ei(e,t){const{positions:{value:i,size:n}}=e,o=n*e.polygonIndices.value[t],s=n*e.polygonIndices.value[t+1];let r=1/0,a=1/0,l=-1/0,c=-1/0;for(let d=o;d<s;d+=n){const[e,t]=i.subarray(d,d+2);r=Math.min(r,e),a=Math.min(a,t),l=Math.max(l,e),c=Math.max(c,t)}return[(r+l)/2,(a+c)/2]}function Ri(e,t){const{positions:{value:i}}=e,[n,o,s,r]=i.subarray(t,t+4);return Math.sqrt(Math.pow(s-n,2)+Math.pow(r-o,2))}function zi(e,t){const{positions:{size:i}}=e,n=i*e.pathIndices.value[t],o=i*e.pathIndices.value[t+1];let s=0;for(let r=n;r<o;r+=i)s+=Ri(e,r);return s}function ji(e,t){const{positions:{value:i},pathIndices:{value:n}}=e,o=2*n[t],s=(2*n[t+1]-o)/2;if(2===s){const[e,t,n,s]=i.subarray(o,o+4);return[(e+n)/2,(t+s)/2]}const r=o+2*Math.floor(s/2);return[i[r],i[r+1]]}(0,Ne.mk)([xi,Ci]);const ki=Object.assign({},Ee.A.defaultProps,{autoLabels:!1,data:et.ko,dataComparator:et.ko.equal,tileSize:Ke.R});class Fi extends Ee.A{constructor(){super(...arguments)}initializeState(){super.initializeState(),this.setState({binary:!0})}updateState(e){const{props:t}=e;if(t.data){super.updateState(e);const i="mvt"===new URL(t.data.tiles[0]).searchParams.get("formatTiles");this.setState({mvt:i})}}getLoadOptions(){const e=this.props.data;return(0,et.FB)(super.getLoadOptions(),{fetch:{headers:{Authorization:"Bearer "+e.accessToken}},gis:{format:"binary"}})}async getTileData(e){const t=this.props.data,{tiles:i,properties_tiles:n}=t,o=(0,je.g8)(i,e);if(!o)return Promise.reject("Invalid URL");const s=this.getLoadOptions(),{fetch:r}=this.props,{signal:a}=e,l=r(o,{propName:"data",layer:this,loadOptions:s,signal:a});if(!n)return await l;const c=(0,je.g8)(n,e);if(!c)return Promise.reject("Invalid properties URL");const d=r(c,{propName:"data",layer:this,loadOptions:s,signal:a}),[u,p]=await Promise.all([l,d]);return u?p?(0,et.PR)(u,p):u:null}renderSubLayers(e){var t,i;if(null===e.data)return null;const n=e.tile.bbox,o=[],s={"points-text":Object.assign({type:Kt},null==e||null==(t=e._subLayerProps)?void 0:t["points-text"],{extensions:[new Ai.A,...e.extensions||[],...(null==e||null==(i=e._subLayerProps)||null==(i=i["points-text"])?void 0:i.extensions)||[]]})};if(this.state.mvt)o.push(super.renderSubLayers(e));else{const{west:t,south:i,east:r,north:a}=n,l=[new Mi.A,...e.extensions||[]],c={clipBounds:[t,i,r,a]},d=t=>{var i,n;return{[t]:Object.assign({},c,null==e||null==(i=e._subLayerProps)?void 0:i[t],{extensions:[...l,...(null==e||null==(n=e._subLayerProps)||null==(n=n[t])?void 0:n.extensions)||[]]})}},u=Object.assign({},e,{data:Object.assign({},e.data,{tileBbox:n}),autoHighlight:!1,_subLayerProps:Object.assign({},e._subLayerProps,s,d("polygons-fill"),d("polygons-stroke"),d("linestrings"))});o.push(new ce.A(u))}if(o[0]&&e.autoLabels){const t=(0,Ze.bY)();e.data.lines&&e.data.lines.positions.value.length>0&&(t.points=function(e,t){const i=!!t&&t in e.numericProps,n=new Map;for(let d=0;d<e.pathIndices.value.length-1;d++){const o=e.pathIndices.value[d],s=e.featureIds.value[o];let r;r=void 0===t?s:i?e.numericProps[t].value[o]:e.properties[s]&&t in e.properties[s]?e.properties[s][t]:void 0;const a=zi(e,d);(!n.has(r)||a>n.get(r).length)&&n.set(r,{index:d,length:a})}const o=[],s=[],r=[],a=[],l=(0,Ze.Sm)(n.size,e.numericProps);let c=0;for(const[d,{index:u}]of n){const t=ji(e,u);o.push(...t);const i=e.pathIndices.value[u],n=e.featureIds.value[i];r.push(c),s.push(e.properties[n]),a.push(e.globalFeatureIds.value[i]),(0,Ze.T2)(e.numericProps,l,i,c),c++}return(0,Ze.YR)(o,r,a,l,s)}(e.data.lines,"object"==typeof e.autoLabels?e.autoLabels.uniqueIdProperty:void 0)),e.data.polygons&&e.data.polygons.positions.value.length>0&&(t.points=function(e,t,i){const{west:n,south:o,east:s,north:r}=t,a=(s-n)*(r-o)*1e-4,l=[],c=[],d=[],u=[],p=(0,Ze.Sm)(e.polygonIndices.value.length-1,e.numericProps);let h=0,g=0;const{extruded:f}=i;for(let m=0;m<e.polygonIndices.value.length-1;m++){const n=e.polygonIndices.value[m],o=e.polygonIndices.value[m+1];if(Ti(e,m)<a)continue;const s=Ei(e,m);let r=-1,v=[0,0],y=!1;for(;g<e.triangles.value.length;){const t=e.triangles.value[g];if(t>=o)break;if(y){g+=3;continue}const i=e.triangles.value[g+1],n=e.triangles.value[g+2],a=e.positions.value.subarray(t*e.positions.size,t*e.positions.size+e.positions.size),l=e.positions.value.subarray(i*e.positions.size,i*e.positions.size+e.positions.size),c=e.positions.value.subarray(n*e.positions.size,n*e.positions.size+e.positions.size);if(Oi(s,a,l,c))y=!0;else{const e=Ii(a,l,c);e>r&&(r=e,v=[(a[0]+l[0]+c[0])/3,(a[1]+l[1]+c[1])/3])}g+=3}const x=y?s:v;if(Li(x,t)){l.push(...x);const t=e.featureIds.value[n];if(f){const n=i.getElevation(void 0,{data:e,index:t});l.push(n*i.elevationScale)}c.push(e.properties[t]),d.push(h),u.push(e.globalFeatureIds.value[n]),(0,Ze.T2)(e.numericProps,p,n,h),h++}}return e.numericProps&&Object.keys(p).forEach((e=>{p[e].value=p[e].value.slice(0,h)})),(0,Ze.YR)(l,d,u,p,c,f?3:2)}(e.data.polygons,n,e)),o.push(o[0].clone({id:e.id+"-labels",data:t,pickable:!1,autoHighlight:!1}))}return o}renderLayers(){const e=super.renderLayers();if(!this.props.autoLabels)return e;const t=e.flat().filter(Boolean);return t.sort(((e,t)=>{const i=e.id.includes("labels"),n=t.id.includes("labels");return i&&!n?1:!i&&n?-1:0})),t.map((e=>e.id.includes("labels")?e.clone({highlightedObjectIndex:-1}):e))}_isWGS84(){return!this.state.mvt||super._isWGS84()}}Fi.layerName="VectorTileLayer",Fi.defaultProps=ki;const Di=Fi;var Vi=i(11512);const Ni={ClusterTileLayer:ot,H3TileLayer:st.A,HeatmapTileLayer:Dt,PointLabelLayer:Kt,QuadbinTileLayer:Lt,RasterTileLayer:hi,VectorTileLayer:Di},Ui={boundaryQuerySource:Vi.m_,boundaryTableSource:Vi.Ix,h3QuerySource:Vi.dE,h3TableSource:Vi.nJ,h3TilesetSource:Vi.R6,rasterSource:Vi.xG,quadbinQuerySource:Vi.M5,quadbinTableSource:Vi.kj,quadbinTilesetSource:Vi.Q9,vectorQuerySource:Vi.dP,vectorTableSource:Vi.pt,vectorTilesetSource:Vi.tP};var Bi=i(53420),Wi=i(34553),Gi=i(1263);var Hi=i(92269);var Zi=i(23746),qi=i(8961),Ki=i(91858),Ji=i(801),Yi=i(9959),Xi=i(20633),Qi=i(10299);(0,Ne.mk)([Ji.y,Yi.V]);const $i={classes:Object.assign({MapView:K.A,FirstPersonView:J.A,OrbitView:Y.A,OrthographicView:X.A},n,o,Ni,s,r,Zi,{}),functions:Object.assign({},Ui,{colorBins:Bi.A,colorCategories:function(e){let{attr:t,domain:i,colors:n=Wi.GT,nullColor:o=Wi.Uf,othersColor:s=Wi.Sr}=e;(0,Ze.vA)(Array.isArray(i),'Expected "domain" to be an array of numbers or strings');const r={},a="string"==typeof n?(0,Wi.Ay)(n,i.length):n;for(const[l,c]of i.entries())r[c]=a[l];return(e,i)=>{const n=(0,Gi.l)(t,e,i);return"number"==typeof n&&Number.isFinite(n)||"string"==typeof n?r[n]||s:o}},colorContinuous:function(e){let{attr:t,domain:i,colors:n=Wi.GT,nullColor:o=Wi.Uf}=e;(0,Ze.vA)(Array.isArray(i),'Expected "domain" to be an array of numbers');const s="string"==typeof n?(0,Wi.Ay)(n,i.length):n,r=(0,Hi.A)().domain(i).range(s);return(e,i)=>{const n=(0,Gi.l)(t,e,i);return"number"==typeof n&&Number.isFinite(n)?r(n):o}}}),enumerations:{COORDINATE_SYSTEM:qi.rf,GL:Ki.GL},constants:{Tiles3DLoader:Xi.i,CesiumIonLoader:Qi.s},postProcessConvertedJson:e=>(e.layers&&(e.layers=e.layers.filter((e=>e instanceof Q.A))),e.widgets&&(e.widgets=e.widgets.filter((e=>"function"==typeof e.onAdd))),!e.views||e.views instanceof p.A||(e.views=e.views.filter((e=>e instanceof p.A))),e)};var en=i(70470);i(59118),i(83139);const tn={"website/3D Heatmap (HexagonLayer)":JSON.parse('{"description":"The deck.gl website hexagonlayer example in JSON format","websiteUrl":"https://deck.gl/#/examples/core-layers/hexagon-layer","initialViewState":{"longitude":-1.4157267858730052,"latitude":52.232395363869415,"zoom":6.6,"minZoom":5,"maxZoom":15,"pitch":40.5,"bearing":-27.396674584323023},"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"}],"layers":[{"@@type":"HexagonLayer","id":"heatmap","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv","coverage":1,"pickable":true,"autoHighlight":true,"elevationRange":[0,3000],"elevationScale":50,"extruded":true,"getPosition":"@@=[lng,lat]","radius":1000,"upperPercentile":100,"colorRange":[[1,152,189],[73,227,206],[216,254,181],[254,237,177],[254,173,84],[209,55,78]]}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/3D Heatmap (wth Minimap)":JSON.parse('{"description":"The deck.gl website hexagonlayer example (with added minimap)","websiteUrl":"https://deck.gl/#/examples/core-layers/hexagon-layer","initialViewState":{"id":"view-state","longitude":-1.4157267858730052,"latitude":52.232395363869415,"zoom":6.6,"minZoom":5,"maxZoom":15,"pitch":40.5,"bearing":-27.396674584323023},"views":[{"@@type":"MapView","id":"main","mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","controller":true},{"@@type":"MapView","id":"minimap","mapStyle":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json","width":"40%","height":"40%","x":"55%","y":"5%","clear":true,"viewState":{"id":"main","pitch":0,"bearing":0,"zoom":4}}],"layers":[{"@@type":"HexagonLayer","id":"heatmap","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/3d-heatmap/heatmap-data.csv","coverage":1,"elevationRange":[0,3000],"elevationScale":50,"extruded":true,"getPosition":"@@=[lng,lat]","radius":1000,"upperPercentile":100,"colorRange":[[1,152,189],[73,227,206],[216,254,181],[254,237,177],[254,173,84],[209,55,78]]}]}'),"website/GeoJSON (GeoJsonLayer)":JSON.parse('{"description":"The deck.gl website GeoJsonLayer (polygons) example in JSON format","websiteUrl":"https://deck.gl/#/examples/core-layers/geojson-layer-polygons","initialViewState":{"latitude":49.254,"longitude":-123.13,"zoom":11,"maxZoom":16,"pitch":45,"bearing":0},"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json"}],"layers":[{"@@type":"GeoJsonLayer","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/geojson/vancouver-blocks.json","opacity":0.8,"stroked":false,"filled":true,"extruded":true,"wireframe":true,"elevationScale":0.1,"getElevation":"@@=properties.valuePerSqm","getFillColor":[199,233,180],"getLineColor":[255,255,255]}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/Line (LineLayer)":JSON.parse('{"description":"The deck.gl website LineLayer example in JSON format","websiteUrl":"https://deck.gl/#/examples/line-layers/line-layer","initialViewState":{"latitude":47.65,"longitude":7,"zoom":4.5,"maxZoom":16,"pitch":50,"bearing":0},"map":true,"pickingRadius":5,"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"}],"layers":[{"@@type":"ScatterplotLayer","id":"airports","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/line/airports.json","radiusScale":20,"getPosition":"@@=coordinates","getFillColor":[255,140,0],"getRadius":60},{"@@type":"LineLayer","id":"flight-paths","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/line/heathrow-flights.json","opacity":0.8,"strokeWidth":3,"getSourcePosition":"@@=start","getTargetPosition":"@@=end","getColor":[200,32,64,192]}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/Scatterplot (ScatterplotLayer)":JSON.parse('{"description":"The deck.gl website ScatterplotLayer example in JSON format","websiteUrl":"https://deck.gl/#/examples/core-layers/scattterplot-layer","initialViewState":{"longitude":-74,"latitude":40.7,"zoom":11,"maxZoom":16,"pitch":0,"bearing":0},"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json"}],"layers":[{"@@type":"ScatterplotLayer","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/scatterplot/manhattan.json","radiusScale":30,"radiusMinPixels":0.25,"getPosition":"@@=-","getFillColor":[0,128,255],"getRadius":1}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/Screen Grid (ScreenGridLayer)":JSON.parse('{"description":"The deck.gl website ScreenGridLayer example in JSON format","websiteUrl":"https://deck.gl/#/examples/core-layers/screen-grid-layer","initialViewState":{"longitude":-119.3,"latitude":35.6,"zoom":6,"maxZoom":20,"pitch":0,"bearing":0},"map":true,"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json"}],"layers":[{"@@type":"ScreenGridLayer","id":"grid","data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/examples/screen-grid/ca-transit-stops.json","opacity":0.8,"cellSizePixels":20,"colorRange":[[255,255,178,25],[254,217,118,85],[254,178,76,127],[253,141,60,170],[240,59,32,212],[189,0,38,255]],"getPosition":"@@=-","gpuAggregation":true}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/TagMap (TextLayer)":JSON.parse('{"description":"A deck.gl TextLayer example in JSON format","initialViewState":{"latitude":39.1,"longitude":-94.57,"zoom":3.8,"maxZoom":16,"pitch":0,"bearing":0},"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json"}],"layers":[{"@@type":"TextLayer","id":"twitter-topics-raw","data":"https://rivulet-zhang.github.io/dataRepo/tagmap/hashtags10k.json","characterSet":"auto","getText":"@@=label","getPosition":"@@=coordinates","getColor":[29,145,192],"getSize":12}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/3D Tiles (Tile3DLayer, Royal)":JSON.parse('{"description":"The deck.gl website tile-3d-layer example","websiteUrl":"https://deck.gl/#/examples/geo-layers/tile-3d-layer","initialViewState":{"latitude":-37.8058,"longitude":144.9713,"pitch":45,"maxPitch":60,"bearing":0,"minZoom":2,"maxZoom":20,"zoom":17.36},"views":[{"@@type":"MapView","mapStyle":"https://basemaps.cartocdn.com/gl/positron-nolabels-gl-style/style.json","controller":true}],"layers":[{"@@type":"Tile3DLayer","id":"tiles-royal","loader":"@@#Tiles3DLoader","getPointColor":[0,125,200,255],"data":"https://raw.githubusercontent.com/visgl/deck.gl-data/master/3d-tiles/RoyalExhibitionBuilding/tileset.json"}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/3D Tiles (Tile3DLayer, St Helens)":JSON.parse('{"description":"The deck.gl website tile-3d-layer example","websiteUrl":"https://deck.gl/#/examples/geo-layers/tile-3d-layer","initialViewState":{"latitude":46.26,"longitude":-122.12,"pitch":45,"maxPitch":60,"bearing":0,"minZoom":2,"maxZoom":30,"zoom":10},"views":[{"@@type":"MapView","mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","controller":true}],"layers":[{"@@type":"Tile3DLayer","id":"tiles-st-helens","loader":"@@#CesiumIonLoader","data":"https://assets.cesium.com/33301/tileset.json","loadOptions":{"cesium-ion":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIxN2NhMzkwYi0zNWM4LTRjNTYtYWE3Mi1jMDAxYzhlOGVmNTAiLCJpZCI6OTYxOSwic2NvcGVzIjpbImFzbCIsImFzciIsImFzdyIsImdjIl0sImlhdCI6MTU2MjE4MTMxM30.OkgVr6NaKYxabUMIGqPOYFe0V5JifXLVLfpae63x-tA"}}}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/3D Tiles (Tile3DLayer, Cairo/vricon)":JSON.parse('{"description":"The deck.gl website tile-3d-layer example","websiteUrl":"https://deck.gl/#/examples/geo-layers/tile-3d-layer","initialViewState":{"latitude":29.99,"longitude":31.13,"pitch":45,"maxPitch":60,"bearing":0,"minZoom":2,"maxZoom":30,"zoom":12.8},"views":[{"@@type":"MapView","mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","controller":true}],"layers":[{"@@type":"Tile3DLayer","id":"tiles-cairo-vricon","DracoWorkerLoader":"@!DracoWorkerLoader","loader":"@@#CesiumIonLoader","data":"https://assets.cesium.com/29328/tileset.json","loadOptions":{"cesium-ion":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJlYWMxMzcyYy0zZjJkLTQwODctODNlNi01MDRkZmMzMjIxOWIiLCJpZCI6OTYyMCwic2NvcGVzIjpbImFzbCIsImFzciIsImdjIl0sImlhdCI6MTU2Mjg2NjI3M30.1FNiClUyk00YH_nWfSGpiQAjR5V2OvREDq1PJ5QMjWQ"}}}]}'),"website/3D Tiles (Tile3DLayer, New York)":JSON.parse('{"description":"The deck.gl website tile-3d-layer example","websiteUrl":"https://deck.gl/#/examples/geo-layers/tile-3d-layer","initialViewState":{"latitude":40.73,"longitude":-73.99,"pitch":45,"maxPitch":60,"bearing":0,"minZoom":2,"maxZoom":30,"zoom":10.77},"views":[{"@@type":"MapView","mapStyle":"https://basemaps.cartocdn.com/gl/dark-matter-nolabels-gl-style/style.json","controller":true}],"layers":[{"@@type":"Tile3DLayer","id":"tiles-new-york","DracoWorkerLoader":"@!DracoWorkerLoader","loader":"@@#CesiumIonLoader","data":"https://assets.cesium.com/7162/tileset.json","loadOptions":{"cesium-ion":{"accessToken":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiIzMGY4ODczYy1mNTk4LTRiMDUtYmIxYy0xZWYwOWZmMGY4NjQiLCJpZCI6NDQsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJhc3NldHMiOlsxLDIsMyw0LDYxOTMsNjI3Myw3MTYyLDczNTMsNzE0Ml0sImlhdCI6MTU0MTYxODM0NX0.lWnGs9ySXO4QK3HagcMsDpZ8L01DpmUDQm38-2QAQuE"}}}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"website/CartoLayer":JSON.parse('{"description":"CARTO vector tileset declarative example","initialViewState":{"latitude":40.7368521,"longitude":-73.8536065,"zoom":9,"pitch":0,"bearing":0},"views":[{"@@type":"MapView","controller":true,"mapStyle":"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json"}],"layers":[{"@@type":"VectorTileLayer","data":{"@@function":"cartoVectorTilesetSource","accessToken":"eyJhbGciOiJIUzI1NiJ9.eyJhIjoiYWNfbHFlM3p3Z3UiLCJqdGkiOiI1YjI0OWE2ZCJ9.Y7zB30NJFzq5fPv8W5nkoH5lPXFWQP0uywDtqUg8y8c","connectionName":"bqconn","tableName":"cartobq.public_account.nyc_taxi_points_demo_id"},"getFillColor":{"@@function":"colorBins","attr":"aggregated_total","domain":[10,100,1000,10000,100000,1000000],"colors":"SunsetDark"},"pointRadiusMinPixels":2,"stroked":false}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"get-started/US map (GeoJsonLayer)":JSON.parse('{"description":"A deck.gl get-started GeoJsonLayer example in JSON format","initialViewState":{"latitude":40,"longitude":-100,"zoom":3,"bearing":30,"pitch":30},"map":true,"views":[{"@@type":"MapView","controller":true}],"layers":[{"@@type":"GeoJsonLayer","data":"https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_110m_admin_1_states_provinces_shp.geojson","stroked":true,"filled":true,"lineWidthMinPixels":2,"opacity":0.4,"getLineColor":[255,100,100],"getFillColor":[200,160,0,180]}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}'),"get-started/Dot Text (Scatterplot/TextLayer)":JSON.parse('{"description":"A minimal deck.gl example rendering a circle with text","initialViewState":{"longitude":-122.45,"latitude":37.8,"zoom":12},"layers":[{"@@type":"ScatterplotLayer","data":[{"position":[-122.45,37.8]}],"getFillColor":[255,0,0,255],"getRadius":1000},{"@@type":"TextLayer","data":[{"position":[-122.45,37.8],"text":"Hello World"}]}],"widgets":[{"@@type":"ZoomWidget"},{"@@type":"CompassWidget"}]}')},nn=Object.keys(tn)[0];function on(e){return"object"==typeof e&&"@@function"in e}class sn extends a.Component{constructor(e){super(e),this.state={text:"",jsonProps:{},initialViewState:null},this._onTemplateChange=this._onTemplateChange.bind(this),this._onEditorChange=this._onEditorChange.bind(this);const t=new N($i);this.jsonConverter=new H({configuration:t})}componentDidMount(){this._setTemplate(nn)}_setTemplate(e){const t=tn[e];t&&(this._setEditorText(t),this._setJSON(t))}_setJSON(e){!function(e){if(e&&e.layers)for(const t of e.layers){const e={};for(const[i,n]of Object.entries(t))(i.startsWith("get")&&"string"==typeof n||on(n))&&(e[i]=n);Object.keys(e).length&&(t.updateTriggers=e)}}(e);const t=this.jsonConverter.convert(e);this._updateViewState(t),this.setState({jsonProps:t})}_updateViewState(e){const t=e.initialViewState||e.viewState;if(t){(!this.state.initialViewState||!function(e,t){if(e===t)return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const i in e)if(!(i in t)||e[i]!==t[i])return!1;for(const i in t)if(!(i in e))return!1;return!0}(t,this.state.initialViewState))&&this.setState({initialViewState:Object.assign({},t,{transitionDuration:4e3,transitionInterpolator:new w.A})})}return e}_setEditorText(e){const t="string"!=typeof e?JSON.stringify(e,null,2):e;this.setState({text:t})}_onTemplateChange(e){const t=e&&e.target&&e.target.value;this._setTemplate(t)}_onEditorChange(e,t){let i=null;try{i=e&&JSON.parse(e)}catch(n){}this._setEditorText(e),this._setJSON(i)}_renderJsonSelector(){return(0,f.jsx)("select",{name:"JSON templates",onChange:this._onTemplateChange,children:Object.entries(tn).map((e=>{let[t]=e;return(0,f.jsx)("option",{value:t,children:t},t)}))})}render(){const{jsonProps:e,initialViewState:t}=this.state;let i;return i=!0===e.google?(0,f.jsx)(_,Object.assign({initialViewState:t,id:"json-deck"},e,{googleMapsToken:"AIzaSyDQqS4LGJzG2H_SLM6v0WRXncXlb95iq4I"})):(0,f.jsx)(m,Object.assign({id:"json-deck"},e,{initialViewState:t,Map:d.T5})),(0,f.jsxs)(a.Fragment,{children:[(0,f.jsxs)("div",{id:"left-pane",children:[this._renderJsonSelector(),(0,f.jsx)("div",{id:"editor",children:(0,f.jsx)(c.Ay,{children:e=>{let{width:t,height:i}=e;return(0,f.jsx)(en.Ay,{width:t+"px",height:i+"px",mode:"json",theme:"github",onChange:this._onEditorChange,name:"AceEditorDiv",editorProps:{$blockScrolling:!0},ref:e=>{this.ace=e},value:this.state.text})}})})]}),(0,f.jsx)("div",{id:"right-pane",children:i})]})}}function rn(e){(0,l.createRoot)(e).render((0,f.jsx)(sn,{}))}},81481:()=>{},29586:(e,t,i)=>{"use strict";i.d(t,{A:()=>r});var n=i(33847),o=i(1570);class s extends n.A{get isDrawable(){return!0}initializeState(){this.getAttributeManager().remove(["instancePickingColors"])}updateState(e){super.updateState(e);const t=this.getAggregatorType();if(e.changeFlags.extensionsChanged||this.state.aggregatorType!==t){var i,n;null==(i=this.state.aggregator)||i.destroy();const e=this.createAggregator(t);return e.setProps({attributes:null==(n=this.getAttributeManager())?void 0:n.attributes}),this.setState({aggregator:e,aggregatorType:t}),!0}return!1}finalizeState(e){super.finalizeState(e),this.state.aggregator.destroy()}updateAttributes(e){const{aggregator:t}=this.state;t.setProps({attributes:e});for(const i in e)this.onAttributeChange(i);t.update()}draw(e){let{shaderModuleProps:t}=e;const{aggregator:i}=this.state;i.setProps({shaderModuleProps:t}),i.preDraw()}_getAttributeManager(){return new o.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}s.layerName="AggregationLayer";const r=s},52601:(e,t,i)=>{"use strict";i.d(t,{M:()=>c});var n=i(50111);const o=(e,t)=>{let i=0;for(const n of e)i+=t(n);return i},s={COUNT:e=>e.length,SUM:o,MEAN:(e,t)=>0===e.length?NaN:o(e,t)/e.length,MIN:(e,t)=>{let i=1/0;for(const n of e){const e=t(n);e<i&&(i=e)}return i},MAX:(e,t)=>{let i=-1/0;for(const n of e){const e=t(n);e>i&&(i=e)}return i}};function r(e){let{bins:t,getValue:i,operation:n,target:o}=e;(!o||o.length<t.length)&&(o=new Float32Array(t.length));let s=1/0,r=-1/0;for(let a=0;a<t.length;a++){const{points:e}=t[a];o[a]=n(e,i),o[a]<s&&(s=o[a]),o[a]>r&&(r=o[a])}return{value:o,domain:[s,r]}}function a(e,t,i){const n={};for(const s of e.sources||[]){const e=t[s];if(!e)throw new Error("Cannot find attribute "+s);n[s]=l(e)}const o={};return t=>{for(const e in n)o[e]=n[e](t);return e.getValue(o,t,i)}}function l(e){const t=e.value,{offset:i=0,stride:n,size:o}=e.getAccessor(),s=t.BYTES_PER_ELEMENT,r=i/s,a=n?n/s:o;if(1===o)return e.isConstant?()=>t[0]:e=>t[r+a*e];let l;return e.isConstant?(l=Array.from(t),()=>l):(l=new Array(o),e=>{const i=r+a*e;for(let n=0;n<o;n++)l[n]=t[i+n];return l})}class c{constructor(e){this.bins=[],this.binIds=null,this.results=[],this.dimensions=e.dimensions,this.channelCount=e.getValue.length,this.props=Object.assign({},e,{binOptions:{},pointCount:0,operations:[],customOperations:[],attributes:{}}),this.needsUpdate=!0,this.setProps(e)}destroy(){}get binCount(){return this.bins.length}setProps(e){const t=this.props;if(e.binOptions&&((0,n.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate()),e.operations)for(let i=0;i<this.channelCount;i++)e.operations[i]!==t.operations[i]&&this.setNeedsUpdate(i);if(e.customOperations)for(let i=0;i<this.channelCount;i++)Boolean(e.customOperations[i])!==Boolean(t.customOperations[i])&&this.setNeedsUpdate(i);void 0!==e.pointCount&&e.pointCount!==t.pointCount&&this.setNeedsUpdate(),e.attributes&&(e.attributes=Object.assign({},t.attributes,e.attributes)),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate=!0:!0!==this.needsUpdate&&(this.needsUpdate=this.needsUpdate||[],this.needsUpdate[e]=!0)}update(){if(!0===this.needsUpdate){var e;this.bins=function(e){let{pointCount:t,getBinId:i}=e;const n=new Map;for(let o=0;o<t;o++){const e=i(o);if(null===e)continue;let t=n.get(String(e));t?t.points.push(o):(t={id:e,index:n.size,points:[o]},n.set(String(e),t))}return Array.from(n.values())}({pointCount:this.props.pointCount,getBinId:a(this.props.getBin,this.props.attributes,this.props.binOptions)});const t=function(e){let{bins:t,dimensions:i,target:n}=e;const o=t.length*i;(!n||n.length<o)&&(n=new Float32Array(o));for(let s=0;s<t.length;s++){const{id:e}=t[s];Array.isArray(e)?n.set(e,s*i):n[s]=e}return n}({bins:this.bins,dimensions:this.dimensions,target:null==(e=this.binIds)?void 0:e.value});this.binIds={value:t,type:"float32",size:this.dimensions}}for(let o=0;o<this.channelCount;o++)if(!0===this.needsUpdate||this.needsUpdate[o]){var t,i,n;const e=this.props.customOperations[o]||s[this.props.operations[o]],{value:l,domain:c}=r({bins:this.bins,getValue:a(this.props.getValue[o],this.props.attributes,void 0),operation:e,target:null==(t=this.results[o])?void 0:t.value});this.results[o]={value:l,domain:c,type:"float32",size:1},null==(i=(n=this.props).onUpdate)||i.call(n,{channel:o})}this.needsUpdate=!1}preDraw(){}getBins(){return this.binIds}getResult(e){return this.results[e]}getResultDomain(e){var t,i;return null!=(t=null==(i=this.results[e])?void 0:i.domain)?t:[1/0,-1/0]}getBin(e){const t=this.bins[e];if(!t)return null;const i=new Array(this.channelCount);for(let n=0;n<i.length;n++){const t=this.results[n];i[n]=null==t?void 0:t.value[e]}return{id:t.id,value:i,count:t.points.length,pointIndices:t.points}}}},57149:(e,t,i)=>{"use strict";i.d(t,{V:()=>m});var n=i(71904);function o(e,t,i){return e.createFramebuffer({width:t,height:i,colorAttachments:[e.createTexture({width:t,height:i,format:"rgba32float",mipmaps:!1,sampler:{minFilter:"nearest",magFilter:"nearest"}})]})}const s={name:"binSorter",vs:"uniform binSorterUniforms {\n  ivec4 binIdRange;\n  ivec2 targetSize;\n} binSorter;\n",uniformTypes:{binIdRange:"vec4<i32>",targetSize:"vec2<i32>"}},r=[1,2,4,8],a=3e38,l={SUM:0,MEAN:0,MIN:0,MAX:0,COUNT:0},c=1024;class d{constructor(e,t){this.binsFBO=null,this.device=e,this.model=function(e,t){let i=t.vs;2===t.dimensions&&(i+="\nvoid getBin(out int binId) {\n  ivec2 binId2;\n  getBin(binId2);\n  if (binId2.x < binSorter.binIdRange.x || binId2.x >= binSorter.binIdRange.y) {\n    binId = -1;\n  } else {\n    binId = (binId2.y - binSorter.binIdRange.z) * (binSorter.binIdRange.y - binSorter.binIdRange.x) + binId2.x;\n  }\n}\n");const o="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-vertex\n\n"+i+"\n\nout vec3 v_Value;\n\nvoid main() {\n  int binIndex;\n  getBin(binIndex);\n  binIndex = binIndex - binSorter.binIdRange.x;\n  if (binIndex < 0) {\n    gl_Position = vec4(0.);\n    return;\n  }\n  int row = binIndex / binSorter.targetSize.x;\n  int col = binIndex - row * binSorter.targetSize.x;\n  vec2 position = (vec2(col, row) + 0.5) / vec2(binSorter.targetSize) * 2.0 - 1.0;\n  gl_Position = vec4(position, 0.0, 1.0);\n  gl_PointSize = 1.0;\n\n#if NUM_CHANNELS == 3\n  getValue(v_Value);\n#elif NUM_CHANNELS == 2\n  getValue(v_Value.xy);\n#else\n  getValue(v_Value.x);\n#endif\n}\n",r="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-fragment\n\nprecision highp float;\n\nin vec3 v_Value;\nout vec4 fragColor;\n\nvoid main() {\n  fragColor.xyz = v_Value;\n\n  #ifdef MODULE_GEOMETRY\n  geometry.uv = vec2(0.);\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n  #endif\n\n  fragColor.w = 1.0;\n}\n",a=new n.K(e,{bufferLayout:t.bufferLayout,modules:[...t.modules||[],s],defines:Object.assign({},t.defines,{NON_INSTANCED_MODEL:1,NUM_CHANNELS:t.channelCount}),isInstanced:!1,vs:o,fs:r,topology:"point-list",disableWarnings:!0});return a}(e,t)}get texture(){return this.binsFBO?this.binsFBO.colorAttachments[0].texture:null}destroy(){var e,t;this.model.destroy(),null==(e=this.binsFBO)||e.colorAttachments[0].texture.destroy(),null==(t=this.binsFBO)||t.destroy()}getBinValues(e){if(!this.binsFBO)return null;const t=e%c,i=Math.floor(e/c),n=this.device.readPixelsToArrayWebGL(this.binsFBO,{sourceX:t,sourceY:i,sourceWidth:1,sourceHeight:1}).buffer;return new Float32Array(n)}setDimensions(e,t){var i,n;const s=c,r=Math.ceil(e/s);this.binsFBO?this.binsFBO.height<r&&this.binsFBO.resize({width:s,height:r}):this.binsFBO=o(this.device,s,r);const a={binIdRange:[t[0][0],t[0][1],(null==(i=t[1])?void 0:i[0])||0,(null==(n=t[1])?void 0:n[1])||0],targetSize:[this.binsFBO.width,this.binsFBO.height]};this.model.shaderInputs.setProps({binSorter:a})}setModelProps(e){const t=this.model;e.attributes&&t.setAttributes(e.attributes),e.constantAttributes&&t.setConstantAttributes(e.constantAttributes),void 0!==e.vertexCount&&t.setVertexCount(e.vertexCount),e.shaderModuleProps&&t.shaderInputs.setProps(e.shaderModuleProps)}update(e){if(!this.binsFBO)return;const t=function(e){const t=Object.assign({},l);for(let i=0;i<e.length;i++){const n=e[i];n&&(t[n]+=r[i])}return t}(e);this._updateBins("SUM",t.SUM+t.MEAN),this._updateBins("MIN",t.MIN),this._updateBins("MAX",t.MAX)}_updateBins(e,t){if(0===t)return;t|=r[3];const i=this.model,n=this.binsFBO,o="MAX"===e?-a:"MIN"===e?a:0,s=this.device.beginRenderPass({id:"gpu-aggregation-"+e,framebuffer:n,parameters:{viewport:[0,0,n.width,n.height],colorMask:t},clearColor:[o,o,o,0],clearDepth:!1,clearStencil:!1});i.setParameters({blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendColorOperation:"MAX"===e?"max":"MIN"===e?"min":"add",blendAlphaOperation:"add"}),i.draw(s),s.end()}}var u=i(68475);const p={name:"aggregatorTransform",vs:"uniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n",uniformTypes:{binIdRange:"vec4<i32>",isCount:"vec3<f32>",isMean:"vec3<f32>"}};class h{constructor(e,t){this.binBuffer=null,this.valueBuffer=null,this._domains=null,this.device=e,this.channelCount=t.channelCount,this.transform=function(e,t){const i="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-vertex\n\nuniform sampler2D bins;\n\n#if NUM_DIMS == 1\nout float binIds;\n#else\nout vec2 binIds;\n#endif\n\n#if NUM_CHANNELS == 1\nflat out float values;\n#elif NUM_CHANNELS == 2\nflat out vec2 values;\n#else\nflat out vec3 values;\n#endif\n\nconst float NAN = intBitsToFloat(-1);\n\nvoid main() {\n  int row = gl_VertexID / SAMPLER_WIDTH;\n  int col = gl_VertexID - row * SAMPLER_WIDTH;\n  vec4 weights = texelFetch(bins, ivec2(col, row), 0);\n  vec3 value3 = mix(\n    mix(weights.rgb, vec3(weights.a), aggregatorTransform.isCount),\n    weights.rgb / max(weights.a, 1.0),\n    aggregatorTransform.isMean\n  );\n  if (weights.a == 0.0) {\n    value3 = vec3(NAN);\n  }\n\n#if NUM_DIMS == 1\n  binIds = float(gl_VertexID + aggregatorTransform.binIdRange.x);\n#else\n  int y = gl_VertexID / (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  int x = gl_VertexID - y * (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  binIds.y = float(y + aggregatorTransform.binIdRange.z);\n  binIds.x = float(x + aggregatorTransform.binIdRange.x);\n#endif\n\n#if NUM_CHANNELS == 3\n  values = value3;\n#elif NUM_CHANNELS == 2\n  values = value3.xy;\n#else\n  values = value3.x;\n#endif\n\n  gl_Position = vec4(0., 0., 0., 1.);\n  // This model renders into a 2x1 texture to obtain min and max simultaneously.\n  // See comments in fragment shader\n  gl_PointSize = 2.0;\n}\n",n="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-fragment\n\nprecision highp float;\n\n#if NUM_CHANNELS == 1\nflat in float values;\n#elif NUM_CHANNELS == 2\nflat in vec2 values;\n#else\nflat in vec3 values;\n#endif\n\nout vec4 fragColor;\n\nvoid main() {\n  vec3 value3;\n#if NUM_CHANNELS == 3\n  value3 = values;\n#elif NUM_CHANNELS == 2\n  value3.xy = values;\n#else\n  value3.x = values;\n#endif\n  if (isnan(value3.x)) discard;\n  // This shader renders into a 2x1 texture with blending=max\n  // The left pixel yields the max value of each channel\n  // The right pixel yields the min value of each channel\n  if (gl_FragCoord.x < 1.0) {\n    fragColor = vec4(value3, 1.0);\n  } else {\n    fragColor = vec4(-value3, 1.0);\n  }\n}\n";return new u.p(e,{vs:i,fs:n,topology:"point-list",modules:[p],parameters:{blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendColorOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendAlphaOperation:"max"},defines:{NUM_DIMS:t.dimensions,NUM_CHANNELS:t.channelCount,SAMPLER_WIDTH:c},varyings:["binIds","values"],disableWarnings:!0})}(e,t),this.domainFBO=o(e,2,1)}destroy(){var e,t;this.transform.destroy(),null==(e=this.binBuffer)||e.destroy(),null==(t=this.valueBuffer)||t.destroy(),this.domainFBO.colorAttachments[0].texture.destroy(),this.domainFBO.destroy()}get domains(){if(!this._domains){const e=this.device.readPixelsToArrayWebGL(this.domainFBO).buffer,t=new Float32Array(e);this._domains=[[-t[4],t[0]],[-t[5],t[1]],[-t[6],t[2]]].slice(0,this.channelCount)}return this._domains}setDimensions(e,t){var i,n;const{model:o,transformFeedback:s}=this.transform;o.setVertexCount(e);const r={binIdRange:[t[0][0],t[0][1],(null==(i=t[1])?void 0:i[0])||0,(null==(n=t[1])?void 0:n[1])||0]};o.shaderInputs.setProps({aggregatorTransform:r});const a=e*t.length*4;var l;(!this.binBuffer||this.binBuffer.byteLength<a)&&(null==(l=this.binBuffer)||l.destroy(),this.binBuffer=this.device.createBuffer({byteLength:a}),s.setBuffer("binIds",this.binBuffer));const c=e*this.channelCount*4;var d;(!this.valueBuffer||this.valueBuffer.byteLength<c)&&(null==(d=this.valueBuffer)||d.destroy(),this.valueBuffer=this.device.createBuffer({byteLength:c}),s.setBuffer("values",this.valueBuffer))}update(e,t){if(!e)return;const i=this.transform,n=this.domainFBO,o={isCount:[0,1,2].map((e=>"COUNT"===t[e]?1:0)),isMean:[0,1,2].map((e=>"MEAN"===t[e]?1:0)),bins:e};i.model.shaderInputs.setProps({aggregatorTransform:o}),i.run({id:"gpu-aggregation-domain",framebuffer:n,parameters:{viewport:[0,0,2,1]},clearColor:[-3e38,-3e38,-3e38,0],clearDepth:!1,clearStencil:!1}),this._domains=null}}var g=i(50111),f=i(18120);class m{static isSupported(e){return e.features.has("float32-renderable-webgl")&&e.features.has("texture-blend-float-webgl")}constructor(e,t){this.binCount=0,this.binIds=null,this.results=[],this.device=e,this.dimensions=t.dimensions,this.channelCount=t.channelCount,this.props=Object.assign({},t,{pointCount:0,binIdRange:[[0,0]],operations:[],attributes:{},binOptions:{}}),this.needsUpdate=new Array(this.channelCount).fill(!0),this.binSorter=new d(e,t),this.aggregationTransform=new h(e,t),this.setProps(t)}getBins(){var e;const t=this.aggregationTransform.binBuffer;return t?((null==(e=this.binIds)?void 0:e.buffer)!==t&&(this.binIds={buffer:t,type:"float32",size:this.dimensions}),this.binIds):null}getResult(e){var t;const i=this.aggregationTransform.valueBuffer;return!i||e>=this.channelCount?null:((null==(t=this.results[e])?void 0:t.buffer)!==i&&(this.results[e]={buffer:i,type:"float32",size:1,stride:4*this.channelCount,offset:4*e}),this.results[e])}getResultDomain(e){return this.aggregationTransform.domains[e]}getBin(e){if(e<0||e>=this.binCount)return null;const{binIdRange:t}=this.props;let i;if(1===this.dimensions)i=[e+t[0][0]];else{const[[n,o],[s]]=t,r=o-n;i=[e%r+n,Math.floor(e/r)+s]}const n=this.binSorter.getBinValues(e);if(!n)return null;const o=n[3],s=[];for(let r=0;r<this.channelCount;r++){const e=this.props.operations[r];s[r]="COUNT"===e?o:0===o?NaN:"MEAN"===e?n[r]/o:n[r]}return{id:i,value:s,count:o}}destroy(){this.binSorter.destroy(),this.aggregationTransform.destroy()}setProps(e){const t=this.props;if("binIdRange"in e&&!(0,g.b)(e.binIdRange,t.binIdRange,2)){const t=e.binIdRange;if(f.A.assert(t.length===this.dimensions),1===this.dimensions){const[[e,i]]=t;this.binCount=i-e}else{const[[e,i],[n,o]]=t;this.binCount=(i-e)*(o-n)}this.binSorter.setDimensions(this.binCount,t),this.aggregationTransform.setDimensions(this.binCount,t),this.setNeedsUpdate()}if(e.operations)for(let i=0;i<this.channelCount;i++)e.operations[i]!==t.operations[i]&&this.setNeedsUpdate(i);if(void 0!==e.pointCount&&e.pointCount!==t.pointCount&&(this.binSorter.setModelProps({vertexCount:e.pointCount}),this.setNeedsUpdate()),e.binOptions&&((0,g.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate(),this.binSorter.model.shaderInputs.setProps({binOptions:e.binOptions})),e.attributes){const t={},i={};for(const n of Object.values(e.attributes))for(const[e,o]of Object.entries(n.getValue()))ArrayBuffer.isView(o)?i[e]=o:o&&(t[e]=o);this.binSorter.setModelProps({attributes:t,constantAttributes:i})}e.shaderModuleProps&&this.binSorter.setModelProps({shaderModuleProps:e.shaderModuleProps}),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate.fill(!0):this.needsUpdate[e]=!0}update(){}preDraw(){if(!this.needsUpdate.some(Boolean))return;const{operations:e}=this.props,t=this.needsUpdate.map(((t,i)=>t?e[i]:null));this.binSorter.update(t),this.aggregationTransform.update(this.binSorter.texture,e);for(let o=0;o<this.channelCount;o++){var i,n;if(this.needsUpdate[o])this.needsUpdate[o]=!1,null==(i=(n=this.props).onUpdate)||i.call(n,{channel:o})}}}},7017:(e,t,i)=>{"use strict";function n(e){let{dataBounds:t,getBinId:i,padding:n=0}=e;const o=[t[0],t[1],[t[0][0],t[1][1]],[t[1][0],t[0][1]]].map((e=>i(e))),s=Math.min(...o.map((e=>e[0])))-n,r=Math.min(...o.map((e=>e[1])))-n;return[[s,Math.max(...o.map((e=>e[0])))+n+1],[r,Math.max(...o.map((e=>e[1])))+n+1]]}i.d(t,{O:()=>n})},58213:(e,t,i)=>{"use strict";i.d(t,{Pu:()=>r,QO:()=>n,Y5:()=>o,cp:()=>a});const n=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function o(e,t,i){let n;if(void 0===t&&(t=!1),void 0===i&&(i=Float32Array),Number.isFinite(e[0]))n=new i(e);else{n=new i(4*e.length);let t=0;for(let i=0;i<e.length;i++){const o=e[i];n[t++]=o[0],n[t++]=o[1],n[t++]=o[2],n[t++]=Number.isFinite(o[3])?o[3]:255}}if(t)for(let o=0;o<n.length;o++)n[o]/=255;return n}const s={linear:"linear",quantile:"nearest",quantize:"nearest",ordinal:"nearest"};function r(e,t){e.setSampler({minFilter:s[t],magFilter:s[t]})}function a(e,t,i){void 0===i&&(i="linear");const n=o(t,!1,Uint8Array);return e.createTexture({format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:s[i],magFilter:s[i],addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},data:n,width:n.length/4,height:1})}},39792:(e,t,i)=>{"use strict";i.d(t,{bg:()=>n});class n{constructor(e,t){this.props={scaleType:"linear",lowerPercentile:0,upperPercentile:100},this.domain=null,this.cutoff=null,this.input=e,this.inputLength=t,this.attribute=e}getScalePercentile(){if(!this._percentile){const e=o(this.input,this.inputLength);this._percentile=function(e,t){void 0===t&&(t=100);const i=Array.from(e).filter(Number.isFinite).sort(s);let n=0;const o=Math.max(1,t),a=new Array(o-1);for(;++n<o;)a[n-1]=r(i,n/o);return{attribute:{value:e.map((e=>Number.isFinite(e)?function(e,t){let i=0,n=e.length;for(;i<n;){const o=i+n>>>1;e[o]>t?n=o:i=o+1}return i}(a,e):NaN)),type:"float32",size:1},domain:a}}(e)}return this._percentile}getScaleOrdinal(){if(!this._ordinal){const e=o(this.input,this.inputLength);this._ordinal=function(e){const t=new Set;for(const o of e)Number.isFinite(o)&&t.add(o);const i=Array.from(t).sort(),n=new Map;for(let o=0;o<i.length;o++)n.set(i[o],o);return{attribute:{value:e.map((e=>Number.isFinite(e)?n.get(e):NaN)),type:"float32",size:1},domain:i}}(e)}return this._ordinal}getCutoff(e){let{scaleType:t,lowerPercentile:i,upperPercentile:n}=e;if("quantile"===t)return[i,n-1];if(i>0||n<100){var o,s;const{domain:e}=this.getScalePercentile();let r=null!=(o=e[Math.floor(i)-1])?o:-1/0,a=null!=(s=e[Math.floor(n)-1])?s:1/0;if("ordinal"===t){const{domain:e}=this.getScaleOrdinal();r=e.findIndex((e=>e>=r)),a=e.findIndex((e=>e>a))-1,-2===a&&(a=e.length-1)}return[r,a]}return null}update(e){const t=this.props;if(e.scaleType!==t.scaleType)switch(e.scaleType){case"quantile":{const{attribute:e}=this.getScalePercentile();this.attribute=e,this.domain=[0,99];break}case"ordinal":{const{attribute:e,domain:t}=this.getScaleOrdinal();this.attribute=e,this.domain=[0,t.length-1];break}default:this.attribute=this.input,this.domain=null}return e.scaleType===t.scaleType&&e.lowerPercentile===t.lowerPercentile&&e.upperPercentile===t.upperPercentile||(this.cutoff=this.getCutoff(e)),this.props=e,this}}function o(e,t){var i,n;const o=(null!=(i=e.stride)?i:4)/4,s=(null!=(n=e.offset)?n:0)/4;let r=e.value;if(!r){var a;const i=null==(a=e.buffer)?void 0:a.readSyncWebGL(0,4*o*t);i&&(r=new Float32Array(i.buffer),e.value=r)}if(1===o)return r.subarray(0,t);const l=new Float32Array(t);for(let c=0;c<t;c++)l[c]=r[c*o+s];return l}function s(e,t){return e-t}function r(e,t){const i=e.length;if(t<=0||i<2)return e[0];if(t>=1)return e[i-1];const n=(i-1)*t,o=Math.floor(n),s=e[o];return s+(e[o+1]-s)*(n-o)}},74759:(e,t,i)=>{"use strict";i.d(t,{A:()=>pe});var n=i(30428),o=i(50111),s=i(43976),r=i(8961),a=i(21410),l=i(39738),c=i(57149),d=i(52601),u=i(29586);const p=.5,h=1/6,g={N:[0,p],E:[p,0],S:[0,-.5],W:[-.5,0],NE:[p,p],NW:[-.5,p],SE:[p,-.5],SW:[-.5,-.5]},f=[g.W,g.SW,g.S],m=[g.S,g.SE,g.E],v=[g.E,g.NE,g.N],y=[g.NW,g.W,g.N],x=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5]],_=[[-h,-.5],[h,-.5],[p,-h],[p,h]],b=[[p,-h],[p,h],[h,p],[-h,p]],w=[[-.5,h],[-.5,-h],[h,p],[-h,p]],P=[g.W,g.SW,g.SE,g.E],S=[g.S,g.SE,g.NE,g.N],C=[g.NW,g.W,g.E,g.NE],A=[g.NW,g.SW,g.S,g.N],M=[[-.5,h],[-.5,-h],[p,-h],[p,h]],T=[[-h,-.5],[h,-.5],[h,p],[-h,p]],L=[g.NW,g.SW,g.SE,g.NE],O=[g.NW,g.SW,g.SE,g.E,g.N],I=[g.W,g.SW,g.SE,g.NE,g.N],E=[g.NW,g.W,g.S,g.SE,g.NE],R=[g.NW,g.SW,g.S,g.E,g.NE],z=[g.NW,g.W,[p,-h],[p,h],g.N],j=[[-h,-.5],[h,-.5],g.E,g.NE,g.N],k=[[-.5,h],[-.5,-h],g.S,g.SE,g.E],F=[g.W,g.SW,g.S,[h,p],[-h,p]],D=[g.NW,g.W,[-h,-.5],[h,-.5],g.N],V=[[-.5,h],[-.5,-h],g.E,g.NE,g.N],N=[g.S,g.SE,g.E,[h,p],[-h,p]],U=[g.W,g.SW,g.S,[p,-h],[p,h]],B=[g.W,g.SW,g.SE,g.E,[h,p],[-h,p]],W=[[-.5,h],[-.5,-h],g.S,g.SE,g.NE,g.N],G=[g.NW,g.W,[-h,-.5],[h,-.5],g.E,g.NE],H=[g.NW,g.SW,g.S,[p,-h],[p,h],g.N],Z=[g.W,g.SW,g.S,g.E,g.NE,g.N],q=[g.NW,g.W,g.S,g.SE,g.E,g.N],K=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5],g.E,g.NE,g.N],J=[g.W,g.SW,g.S,[p,-h],[p,h],[h,p],[-h,p]],Y=[g.NW,g.W,[-h,-.5],[h,-.5],[p,-h],[p,h],g.N],X=[[-.5,h],[-.5,-h],g.S,g.SE,g.E,[h,p],[-h,p]],Q=[[-.5,h],[-.5,-h],[-h,-.5],[h,-.5],[p,-h],[p,h],[h,p],[-h,p]],$={0:[],1:[[g.W,g.S]],2:[[g.S,g.E]],3:[[g.W,g.E]],4:[[g.N,g.E]],5:{0:[[g.W,g.S],[g.N,g.E]],1:[[g.W,g.N],[g.S,g.E]]},6:[[g.N,g.S]],7:[[g.W,g.N]],8:[[g.W,g.N]],9:[[g.N,g.S]],10:{0:[[g.W,g.N],[g.S,g.E]],1:[[g.W,g.S],[g.N,g.E]]},11:[[g.N,g.E]],12:[[g.W,g.E]],13:[[g.S,g.E]],14:[[g.W,g.S]],15:[]};function ee(e){return parseInt(e,4)}const te={[ee("0000")]:[],[ee("2222")]:[],[ee("2221")]:[f],[ee("2212")]:[m],[ee("2122")]:[v],[ee("1222")]:[y],[ee("0001")]:[f],[ee("0010")]:[m],[ee("0100")]:[v],[ee("1000")]:[y],[ee("2220")]:[x],[ee("2202")]:[_],[ee("2022")]:[b],[ee("0222")]:[w],[ee("0002")]:[x],[ee("0020")]:[_],[ee("0200")]:[b],[ee("2000")]:[w],[ee("0011")]:[P],[ee("0110")]:[S],[ee("1100")]:[C],[ee("1001")]:[A],[ee("2211")]:[P],[ee("2112")]:[S],[ee("1122")]:[C],[ee("1221")]:[A],[ee("2200")]:[M],[ee("2002")]:[T],[ee("0022")]:[M],[ee("0220")]:[T],[ee("1111")]:[L],[ee("1211")]:[O],[ee("2111")]:[I],[ee("1112")]:[E],[ee("1121")]:[R],[ee("1011")]:[O],[ee("0111")]:[I],[ee("1110")]:[E],[ee("1101")]:[R],[ee("1200")]:[z],[ee("0120")]:[j],[ee("0012")]:[k],[ee("2001")]:[F],[ee("1022")]:[z],[ee("2102")]:[j],[ee("2210")]:[k],[ee("0221")]:[F],[ee("1002")]:[D],[ee("2100")]:[V],[ee("0210")]:[N],[ee("0021")]:[U],[ee("1220")]:[D],[ee("0122")]:[V],[ee("2012")]:[N],[ee("2201")]:[U],[ee("0211")]:[B],[ee("2110")]:[W],[ee("1102")]:[G],[ee("1021")]:[H],[ee("2011")]:[B],[ee("0112")]:[W],[ee("1120")]:[G],[ee("1201")]:[H],[ee("2101")]:[Z],[ee("0121")]:[Z],[ee("1012")]:[q],[ee("1210")]:[q],[ee("0101")]:{0:[f,v],1:[Z],2:[Z]},[ee("1010")]:{0:[y,m],1:[q],2:[q]},[ee("2121")]:{0:[Z],1:[Z],2:[f,v]},[ee("1212")]:{0:[q],1:[q],2:[y,m]},[ee("2120")]:{0:[K],1:[K],2:[x,v]},[ee("2021")]:{0:[J],1:[J],2:[f,b]},[ee("1202")]:{0:[Y],1:[Y],2:[y,_]},[ee("0212")]:{0:[X],1:[X],2:[m,w]},[ee("0102")]:{0:[x,v],1:[K],2:[K]},[ee("0201")]:{0:[f,b],1:[J],2:[J]},[ee("1020")]:{0:[y,_],1:[Y],2:[Y]},[ee("2010")]:{0:[m,w],1:[X],2:[X]},[ee("2020")]:{0:[w,_],1:[Q],2:[x,b]},[ee("0202")]:{0:[b,x],1:[Q],2:[w,_]}};function ie(e,t){return Number.isNaN(e)?0:Array.isArray(t)?e<t[0]?0:e<t[1]?1:2:e>=t?1:0}function ne(e){const{x:t,y:i,xRange:n,yRange:o,getValue:s,threshold:r}=e,a=t<n[0],l=t>=n[1]-1,c=i<o[0],d=i>=o[1]-1,u=a||l||c||d;let p,h,g,f,m=0;if(a||d)g=0;else{const e=s(t,i+1);g=ie(e,r),m+=e}if(l||d)f=0;else{const e=s(t+1,i+1);f=ie(e,r),m+=e}if(l||c)h=0;else{const e=s(t+1,i);h=ie(e,r),m+=e}if(a||c)p=0;else{const e=s(t,i);p=ie(e,r),m+=e}let v=-1;Number.isFinite(r)&&(v=g<<3|f<<2|h<<1|p),Array.isArray(r)&&(v=g<<6|f<<4|h<<2|p);let y=0;return u||(y=ie(m/4,r)),{code:v,meanCode:y}}function oe(e){const{x:t,y:i,z:n,code:o,meanCode:s}=e;let r=te[o];Array.isArray(r)||(r=r[s]);const a=t+1,l=i+1,c=[];return r.forEach((e=>{const t=[];e.forEach((e=>{const i=a+e[0],o=l+e[1];t.push([i,o,n])})),c.push(t)})),c}function se(e){const{x:t,y:i,z:n,code:o,meanCode:s}=e;let r=$[o];Array.isArray(r)||(r=r[s]);const a=t+1,l=i+1,c=[];return r.forEach((e=>{e.forEach((e=>{const t=a+e[0],i=l+e[1];c.push([t,i,n])}))})),c}function re(e){const{aggregator:t,binIdRange:i,channel:n}=e;if(t instanceof c.V){var o;const e=null==(o=t.getResult(n))?void 0:o.buffer;if(e){return function(e,t){const[[i,n],[o,s]]=t,r=n-i,a=s-o;return(t,n)=>(n-=o,(t-=i)<0||t>=r||n<0||n>=a?NaN:e[n*r+t])}(new Float32Array(e.readSyncWebGL().buffer),i)}}if(t instanceof d.M){var s,r;const e=null==(s=t.getResult(n))?void 0:s.value,i=null==(r=t.getBins())?void 0:r.value;if(i&&e)return function(e,t,i){const n={};for(let o=0;o<i;o++){const i=t[2*o],s=t[2*o+1];n[i]=n[i]||{},n[i][s]=e[o]}return(e,t)=>{var i,o;return null!=(i=null==(o=n[e])?void 0:o[t])?i:NaN}}(e,i,t.binCount)}return null}var ae=i(7017),le=i(31886);const ce={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}},de=[255,255,255,255];class ue extends u.A{getAggregatorType(){return this.props.gpuAggregation&&c.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"===e?new d.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,i)=>{let{positions:n}=e;const o=this.state.aggregatorViewport.projectPosition(n),{cellSizeCommon:s,cellOriginCommon:r}=i;return[Math.floor((o[0]-r[0])/s[0]),Math.floor((o[1]-r[1])/s[1])]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}],onUpdate:this._onAggregationUpdate.bind(this)}):new c.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[n.A,ce],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float value) {\n    value = counts;\n  }\n  "}),{onUpdate:this._onAggregationUpdate.bind(this)}))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:s}=e,{aggregator:r}=this.state;if(t||s.dataChanged||i.cellSize!==n.cellSize||!(0,o.b)(i.gridOrigin,n.gridOrigin,1)||i.aggregation!==n.aggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:n}=this.state;r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.aggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t}})}return(0,o.b)(n.contours,i.contours,2)||this.setState({contourData:null}),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let r=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a,gridOrigin:l}=this.props,{unitsPerMeter:c}=o.getDistanceScales(r);t[0]=c[0]*a,t[1]=c[1]*a;const d=o.projectFlat(r);i=[Math.floor((d[0]-l[0])/t[0])*t[0]+l[0],Math.floor((d[1]-l[1])/t[1])*t[1]+l[1]],r=o.unprojectFlat(i);const u=o.constructor;o=o.isGeospatial?new u({longitude:r[0],latitude:r[1],zoom:12}):new s.A({position:[r[0],r[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,ae.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return[Math.floor((n[0]-i[0])/t[0]),Math.floor((n[1]-i[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(){const{aggregator:e,binIdRange:t}=this.state;this.setState({aggregatedValueReader:re({aggregator:e,binIdRange:t,channel:0}),contourData:null})}_getContours(){const{aggregatedValueReader:e}=this.state;if(!e)return null;if(!this.state.contourData){const{binIdRange:t}=this.state,{contours:i}=this.props,n=function(e){let{contours:t,getValue:i,xRange:n,yRange:o}=e;const s=[],r=[];let a=0,l=0;for(let d=0;d<t.length;d++){var c;const e=t[d],u=null!=(c=e.zIndex)?c:d,{threshold:p}=e;for(let t=n[0]-1;t<n[1];t++)for(let c=o[0]-1;c<o[1];c++){const{code:d,meanCode:h}=ne({getValue:i,threshold:p,x:t,y:c,xRange:n,yRange:o}),g={x:t,y:c,z:u,code:d,meanCode:h};if(Array.isArray(p)){const t=oe(g);for(const i of t)r[l++]={vertices:i,contour:e}}else{const t=se(g);t.length>0&&(s[a++]={vertices:t,contour:e})}}}return{lines:s,polygons:r}}({contours:i,getValue:e,xRange:t[0],yRange:t[1]});this.state.contourData=n}return this.state.contourData}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{cellSizeCommon:e,cellOriginCommon:i}});break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const e=this._getContours();if(!e)return null;const{lines:t,polygons:i}=e,{zOffset:n}=this.props,{cellOriginCommon:o,cellSizeCommon:s}=this.state,c=this.getSubLayerClass("lines",a.A),d=this.getSubLayerClass("bands",l.A),u=(new le.k).translate([o[0],o[1],0]).scale([s[0],s[1],n]);return[t&&t.length>0&&new c(this.getSubLayerProps({id:"lines"}),{data:t,coordinateSystem:r.rf.CARTESIAN,modelMatrix:u,getPath:e=>e.vertices,getColor:e=>{var t;return null!=(t=e.contour.color)?t:de},getWidth:e=>{var t;return null!=(t=e.contour.strokeWidth)?t:1},widthUnits:"pixels"}),i&&i.length>0&&new d(this.getSubLayerProps({id:"bands"}),{data:i,coordinateSystem:r.rf.CARTESIAN,modelMatrix:u,getPolygon:e=>e.vertices,getFillColor:e=>{var t;return null!=(t=e.contour.color)?t:de}})]}getPickingInfo(e){const t=e.info,{object:i}=t;return i&&(t.object={contour:i.contour}),t}}ue.layerName="ContourLayer",ue.defaultProps={cellSize:{type:"number",min:1,value:1e3},gridOrigin:{type:"array",compare:!0,value:[0,0]},getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:{type:"object",value:[{threshold:1}],optional:!0,compare:3},zOffset:.005};const pe=ue},99550:(e,t,i)=>{"use strict";i.d(t,{A:()=>b});var n=i(18120),o=i(30428),s=i(33698),r=i(43976),a=i(57149),l=i(52601),c=i(29586),d=i(58213),u=i(39792),p=i(7017),h=i(34651),g=i(8145);const f={name:"grid",vs:"uniform gridUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n  vec2 sizeCommon;\n} grid;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>",sizeCommon:"vec2<f32>"}};class m extends h.A{getShaders(){const e=super.getShaders();return e.modules.push(f),Object.assign({},e,{vs:"#version 300 es\n#define SHADER_NAME grid-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < grid.colorDomain.z ||\ninstanceColorValues > grid.colorDomain.w ||\ninstanceElevationValues < grid.elevationDomain.z ||\ninstanceElevationValues > grid.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = (instancePositions + (positions.xy + 1.0) / 2.0 * column.coverage) * grid.sizeCommon + grid.originCommon - project.commonOrigin.xy;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, grid.elevationDomain.xy, grid.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, grid.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n"})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e,n=this.state.fillModel;if(i.colorRange!==t.colorRange){var o;null==(o=this.state.colorTexture)||o.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};n.shaderInputs.setProps({grid:e})}else i.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}_updateGeometry(){const e=new g.c9;this.state.fillModel.setGeometry(e)}draw(e){let{uniforms:t}=e;const{cellOriginCommon:i,cellSizeCommon:n,elevationRange:o,elevationScale:s,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],u=this.props.elevationCutoff||[-1/0,1/0],p=this.state.fillModel,h={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],u[0]),Math.min(c[1],u[1]),Math.max(c[0]-1,u[0]),Math.min(c[1]+1,u[1])],elevationRange:[o[0]*s,o[1]*s],originCommon:i,sizeCommon:n};p.shaderInputs.setProps({column:{extruded:r,coverage:a},grid:h}),p.draw(this.context.renderPass)}}m.layerName="GridCellLayer";const v={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}};function y(){}const x={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:y,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:y,cellSize:{type:"number",min:0,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},gridAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class _ extends c.A{getAggregatorType(){const{gpuAggregation:e,gridAggregator:t,getColorValue:i,getElevationValue:o}=this.props;return e&&(t||i||o)?(n.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{gridAggregator:e,cellSize:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(i,n,o)=>{let{positions:s}=i;if(e)return e(s,t);const r=this.state.aggregatorViewport.projectPosition(s),{cellSizeCommon:a,cellOriginCommon:l}=o;return[Math.floor((r[0]-l[0])/a[0]),Math.floor((r[1]-l[1])/a[1])]}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[o.A,v],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:o}=e,{aggregator:r}=this.state;if(!o.dataChanged&&this.state.dataAsArray||!i.getColorValue&&!i.getElevationValue||(this.state.dataAsArray=Array.from((0,s.X)(i.data).iterable)),t||o.dataChanged||i.cellSize!==n.cellSize||i.getColorValue!==n.getColorValue||i.getElevationValue!==n.getElevationValue||i.colorAggregation!==n.colorAggregation||i.elevationAggregation!==n.elevationAggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:n,dataAsArray:o}=this.state;if(r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.colorAggregation,i.elevationAggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),o){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>o[e])),{indices:t,data:i.data})),t&&(e=>t(e.map((e=>o[e])),{indices:e,data:i.data}))]})}}return o.updateTriggersChanged&&o.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),o.updateTriggersChanged&&o.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let s=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a}=this.props,{unitsPerMeter:l}=o.getDistanceScales(s);t[0]=l[0]*a,t[1]=l[1]*a;const c=o.projectFlat(s);i=[Math.floor(c[0]/t[0])*t[0],Math.floor(c[1]/t[1])*t[1]],s=o.unprojectFlat(i);const d=o.constructor;o=o.isGeospatial?new d({longitude:s[0],latitude:s[1],zoom:12}):new r.A({position:[s[0],s[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,p.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return[Math.floor((n[0]-i[0])/t[0]),Math.floor((n[1]-i[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const i=this.getCurrentLayer().props,{aggregator:n}=this.state;if(0===t){const e=n.getResult(0);this.setState({colors:new u.bg(e,n.binCount)}),i.onSetColorDomain(n.getResultDomain(0))}else if(1===t){const e=n.getResult(1);this.setState({elevations:new u.bg(e,n.binCount)}),i.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{cellSizeCommon:e,cellOriginCommon:i}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:i,cellOriginCommon:n,cellSizeCommon:o}=this.state,{elevationScale:s,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:u,colorScaleType:p,lowerPercentile:h,upperPercentile:g,colorDomain:f,elevationScaleType:v,elevationLowerPercentile:y,elevationUpperPercentile:x,elevationDomain:_}=this.props,b=this.getSubLayerClass("cells",m),w=i.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:p,lowerPercentile:h,upperPercentile:g}),S=null==(t=this.state.elevations)?void 0:t.update({scaleType:v,lowerPercentile:y,upperPercentile:x});return P&&S?new b(this.getSubLayerProps({id:"cells"}),{data:{length:i.binCount,attributes:{getBin:w,getColorValue:P.attribute,getElevationValue:S.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[w],getColorValue:[P.attribute],getElevationValue:[S.attribute]},cellOriginCommon:n,cellSizeCommon:o,elevationScale:s,colorRange:r,colorScaleType:p,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||i.getResultDomain(0),elevationDomain:S.domain||_||i.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:S.cutoff,transitions:u&&{getFillColor:u.getColorValue||u.getColorWeight,getElevation:u.getElevationValue||u.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;e&&(n={col:e.id[0],row:e.id[1],colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=n}return t}}_.layerName="GridLayer",_.defaultProps=x;const b=_},69703:(e,t,i)=>{"use strict";i.d(t,{A:()=>R});const n=new Float32Array(12);function o(e,t){void 0===t&&(t=2);let i=0;for(const o of e)for(let e=0;e<t;e++)n[i++]=o[e]||0;return n}var s=i(66652),r=i(30428),a=i(8961),l=i(1570),c=i(18120),d=i(71904),u=i(3002);const p="uniform triangleUniforms {\n  float aggregationMode;\n  vec2 colorDomain;\n  float intensity;\n  float threshold;\n} triangle;\n",h={name:"triangle",vs:p,fs:p,uniformTypes:{aggregationMode:"f32",colorDomain:"vec2<f32>",intensity:"f32",threshold:"f32"}};class g extends u.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME heatp-map-layer-vertex-shader\nuniform sampler2D maxTexture;\nin vec3 positions;\nin vec2 texCoords;\nout vec2 vTexCoords;\nout float vIntensityMin;\nout float vIntensityMax;\nvoid main(void) {\ngl_Position = project_position_to_clipspace(positions, vec3(0.0), vec3(0.0));\nvTexCoords = texCoords;\nvec4 maxTexture = texture(maxTexture, vec2(0.5));\nfloat maxValue = triangle.aggregationMode < 0.5 ? maxTexture.r : maxTexture.g;\nfloat minValue = maxValue * triangle.threshold;\nif (triangle.colorDomain[1] > 0.) {\nmaxValue = triangle.colorDomain[1];\nminValue = triangle.colorDomain[0];\n}\nvIntensityMax = triangle.intensity / maxValue;\nvIntensityMin = triangle.intensity / minValue;\n}\n",fs:"#version 300 es\n#define SHADER_NAME triangle-layer-fragment-shader\nprecision highp float;\nuniform sampler2D weightsTexture;\nuniform sampler2D colorTexture;\nin vec2 vTexCoords;\nin float vIntensityMin;\nin float vIntensityMax;\nout vec4 fragColor;\nvec4 getLinearColor(float value) {\nfloat factor = clamp(value * vIntensityMax, 0., 1.);\nvec4 color = texture(colorTexture, vec2(factor, 0.5));\ncolor.a *= min(value * vIntensityMin, 1.0);\nreturn color;\n}\nvoid main(void) {\nvec4 weights = texture(weightsTexture, vTexCoords);\nfloat weight = weights.r;\nif (triangle.aggregationMode > 0.5) {\nweight /= max(1.0, weights.a);\n}\nif (weight <= 0.) {\ndiscard;\n}\nvec4 linearColor = getLinearColor(weight);\nlinearColor.a *= layer.opacity;\nfragColor = linearColor;\n}\n",modules:[r.A,h]})}initializeState(e){let{device:t}=e;this.setState({model:this._getModel(t)})}_getModel(e){const{vertexCount:t,data:i}=this.props;return new d.K(e,Object.assign({},this.getShaders(),{id:this.props.id,attributes:i.attributes,bufferLayout:[{name:"positions",format:"float32x3"},{name:"texCoords",format:"float32x2"}],topology:"triangle-strip",vertexCount:t}))}draw(){const{model:e}=this.state,{aggregationMode:t,colorDomain:i,intensity:n,threshold:o,colorTexture:s,maxTexture:r,weightsTexture:a}=this.props,l={aggregationMode:t,colorDomain:i,intensity:n,threshold:o,colorTexture:s,maxTexture:r,weightsTexture:a};e.shaderInputs.setProps({triangle:l}),e.draw(this.context.renderPass)}}g.layerName="TriangleLayer";const f=g;var m=i(33847),v=i(9649);function y(e,t){const i={};for(const n in e)t.includes(n)||(i[n]=e[n]);return i}class x extends m.A{initializeAggregationLayer(e){super.initializeState(this.context),this.setState({ignoreProps:y(this.constructor._propTypes,e.data.props),dimensions:e})}updateState(e){super.updateState(e);const{changeFlags:t}=e;if(t.extensionsChanged){const e=this.getShaders({});e&&e.defines&&(e.defines.NON_INSTANCED_MODEL=1),this.updateShaders(e)}this._updateAttributes()}updateAttributes(e){this.setState({changedAttributes:e})}getAttributes(){return this.getAttributeManager().getAttributes()}getModuleSettings(){const{viewport:e,mousePosition:t,device:i}=this.context;return Object.assign(Object.create(this.props),{viewport:e,mousePosition:t,picking:{isActive:0},devicePixelRatio:i.canvasContext.cssToDeviceRatio()})}updateShaders(e){}isAggregationDirty(e,t){void 0===t&&(t={});const{props:i,oldProps:n,changeFlags:o}=e,{compareAll:s=!1,dimension:r}=t,{ignoreProps:a}=this.state,{props:l,accessors:c=[]}=r,{updateTriggersChanged:d}=o;if(o.dataChanged)return!0;if(d){if(d.all)return!0;for(const e of c)if(d[e])return!0}if(s)return!!o.extensionsChanged||(0,v.Me)({oldProps:n,newProps:i,ignoreProps:a,propTypes:this.constructor._propTypes});for(const u of l)if(i[u]!==n[u])return!0;return!1}isAttributeChanged(e){const{changedAttributes:t}=this.state;return e?t&&void 0!==t[e]:!function(e){let t=!0;for(const i in e){t=!1;break}return t}(t)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}x.layerName="AggregationLayer";const _=x;var b=i(58213);const w="#version 300 es\nin vec3 positions;\nin vec3 positions64Low;\nin float weights;\nout vec4 weightsTexture;\nvoid main()\n{\nweightsTexture = vec4(weights * weight.weightsScale, 0., 0., 1.);\nfloat radiusTexels = project_pixel_size(weight.radiusPixels) * weight.textureWidth / (weight.commonBounds.z - weight.commonBounds.x);\ngl_PointSize = radiusTexels * 2.;\nvec3 commonPosition = project_position(positions, positions64Low);\ngl_Position.xy = (commonPosition.xy - weight.commonBounds.xy) / (weight.commonBounds.zw - weight.commonBounds.xy) ;\ngl_Position.xy = (gl_Position.xy * 2.) - (1.);\ngl_Position.w = 1.0;\n}\n",P="#version 300 es\nin vec4 weightsTexture;\nout vec4 fragColor;\nfloat gaussianKDE(float u){\nreturn pow(2.71828, -u*u/0.05555)/(1.77245385*0.166666);\n}\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(0.5, 0.5));\nif (dist > 0.5) {\ndiscard;\n}\nfragColor = weightsTexture * gaussianKDE(2. * dist);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",S={name:"weight",vs:"uniform weightUniforms {\n  vec4 commonBounds;\n  float radiusPixels;\n  float textureWidth;\n  float weightsScale;\n} weight;\n",uniformTypes:{commonBounds:"vec4<f32>",radiusPixels:"f32",textureWidth:"f32",weightsScale:"f32"}},C={name:"maxWeight",vs:"uniform maxWeightUniforms {\n  float textureSize;\n} maxWeight;\n",uniformTypes:{textureSize:"f32"}},A={format:"rgba8unorm",mipmaps:!1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}},M=[0,0],T={SUM:0,MEAN:1},L={getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},intensity:{type:"number",min:0,value:1},radiusPixels:{type:"number",min:1,max:100,value:50},colorRange:b.QO,threshold:{type:"number",min:0,max:1,value:.05},colorDomain:{type:"array",value:null,optional:!0},aggregation:"SUM",weightsTextureSize:{type:"number",min:128,max:2048,value:2048},debounceTimeout:{type:"number",min:0,max:1e3,value:500}},O=["float32-renderable-webgl","texture-blend-float-webgl"],I={data:{props:["radiusPixels"]}};class E extends _{getShaders(e){let t=[r.A];return e.modules&&(t=[...t,...e.modules]),super.getShaders(Object.assign({},e,{modules:t}))}initializeState(){super.initializeAggregationLayer(I),this.setState({colorDomain:M}),this._setupTextureParams(),this._setupAttributes(),this._setupResources()}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){super.updateState(e),this._updateHeatmapState(e)}_updateHeatmapState(e){const{props:t,oldProps:i}=e,n=this._getChangeFlags(e);(n.dataChanged||n.viewportChanged)&&(n.boundsChanged=this._updateBounds(n.dataChanged),this._updateTextureRenderingBounds()),n.dataChanged||n.boundsChanged?(clearTimeout(this.state.updateTimer),this.setState({isWeightMapDirty:!0})):n.viewportZoomChanged&&this._debouncedUpdateWeightmap(),t.colorRange!==i.colorRange&&this._updateColorTexture(e),this.state.isWeightMapDirty&&this._updateWeightmap(),this.setState({zoom:e.context.viewport.zoom})}renderLayers(){const{weightsTexture:e,triPositionBuffer:t,triTexCoordBuffer:i,maxWeightsTexture:n,colorTexture:o,colorDomain:s}=this.state,{updateTriggers:r,intensity:l,threshold:c,aggregation:d}=this.props;return new(this.getSubLayerClass("triangle",f))(this.getSubLayerProps({id:"triangle-layer",updateTriggers:r}),{coordinateSystem:a.rf.DEFAULT,data:{attributes:{positions:t,texCoords:i}},vertexCount:4,maxTexture:n,colorTexture:o,aggregationMode:T[d]||0,weightsTexture:e,intensity:l,threshold:c,colorDomain:s})}finalizeState(e){super.finalizeState(e);const{weightsTransform:t,weightsTexture:i,maxWeightTransform:n,maxWeightsTexture:o,triPositionBuffer:s,triTexCoordBuffer:r,colorTexture:a,updateTimer:l}=this.state;null==t||t.destroy(),null==i||i.destroy(),null==n||n.destroy(),null==o||o.destroy(),null==s||s.destroy(),null==r||r.destroy(),null==a||a.destroy(),l&&clearTimeout(l)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}_getChangeFlags(e){const t={},{dimensions:i}=this.state;t.dataChanged=this.isAttributeChanged()?"attribute changed":this.isAggregationDirty(e,{compareAll:!0,dimension:i.data})&&"aggregation is dirty",t.viewportChanged=e.changeFlags.viewportChanged;const{zoom:n}=this.state;return e.context.viewport&&e.context.viewport.zoom===n||(t.viewportZoomChanged=!0),t}_createTextures(){const{textureSize:e,format:t}=this.state;this.setState({weightsTexture:this.context.device.createTexture(Object.assign({},A,{width:e,height:e,format:t})),maxWeightsTexture:this.context.device.createTexture(Object.assign({},A,{width:1,height:1,format:t}))})}_setupAttributes(){this.getAttributeManager().add({positions:{size:3,type:"float64",accessor:"getPosition"},weights:{size:1,accessor:"getWeight"}}),this.setState({positionAttributeName:"positions"})}_setupTextureParams(){const{device:e}=this.context,{weightsTextureSize:t}=this.props,i=Math.min(t,e.limits.maxTextureDimension2D),n=O.every((t=>e.features.has(t))),o=n?"rgba32float":"rgba8unorm",s=n?1:1/255;this.setState({textureSize:i,format:o,weightsScale:s}),n||c.A.warn("HeatmapLayer: "+this.id+" rendering to float texture not supported, falling back to low precision format")()}_createWeightsTransform(e){var t;let{weightsTransform:i}=this.state;const{weightsTexture:n}=this.state,o=this.getAttributeManager();null==(t=i)||t.destroy(),i=new s.G(this.context.device,Object.assign({id:this.id+"-weights-transform",bufferLayout:o.getBufferLayouts(),vertexCount:1,targetTexture:n,parameters:{depthWriteEnabled:!1,blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"},topology:"point-list"},e,{modules:[...e.modules,S]})),this.setState({weightsTransform:i})}_setupResources(){this._createTextures();const{device:e}=this.context,{textureSize:t,weightsTexture:i,maxWeightsTexture:n}=this.state,o=this.getShaders({vs:w,fs:P});this._createWeightsTransform(o);const r=this.getShaders({vs:"#version 300 es\nuniform sampler2D inTexture;\nout vec4 outTexture;\nvoid main()\n{\nint yIndex = gl_VertexID / int(maxWeight.textureSize);\nint xIndex = gl_VertexID - (yIndex * int(maxWeight.textureSize));\nvec2 uv = (0.5 + vec2(float(xIndex), float(yIndex))) / maxWeight.textureSize;\noutTexture = texture(inTexture, uv);\ngl_Position = vec4(0.0, 0.0, 0.0, 1.0);\ngl_PointSize = 1.0;\n}\n",fs:"#version 300 es\nin vec4 outTexture;\nout vec4 fragColor;\nvoid main() {\nfragColor = outTexture;\nfragColor.g = outTexture.r / max(1.0, outTexture.a);\n}\n",modules:[C]}),a=new s.G(e,Object.assign({id:this.id+"-max-weights-transform",targetTexture:n},r,{vertexCount:t*t,topology:"point-list",parameters:{depthWriteEnabled:!1,blendColorOperation:"max",blendAlphaOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})),l={inTexture:i,textureSize:t};a.model.shaderInputs.setProps({maxWeight:l}),this.setState({weightsTexture:i,maxWeightsTexture:n,maxWeightTransform:a,zoom:null,triPositionBuffer:e.createBuffer({byteLength:48}),triTexCoordBuffer:e.createBuffer({byteLength:48})})}updateShaders(e){this._createWeightsTransform(Object.assign({vs:w,fs:P},e))}_updateMaxWeightValue(){const{maxWeightTransform:e}=this.state;e.run({parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]})}_updateBounds(e){void 0===e&&(e=!1);const{viewport:t}=this.context,i=[t.unproject([0,0]),t.unproject([t.width,0]),t.unproject([0,t.height]),t.unproject([t.width,t.height])].map((e=>e.map(Math.fround))),n=function(e){const t=e.map((e=>e[0])),i=e.map((e=>e[1])),n=Math.min.apply(null,t),o=Math.max.apply(null,t);return[n,Math.min.apply(null,i),o,Math.max.apply(null,i)]}(i),o={visibleWorldBounds:n,viewportCorners:i};let s=!1;if(e||!this.state.worldBounds||(r=this.state.worldBounds,!((l=n)[0]>=r[0]&&l[2]<=r[2]&&l[1]>=r[1]&&l[3]<=r[3]))){const e=this._worldToCommonBounds(n),t=this._commonToWorldBounds(e);this.props.coordinateSystem===a.rf.LNGLAT&&(t[1]=Math.max(t[1],-85.051129),t[3]=Math.min(t[3],85.051129),t[0]=Math.max(t[0],-360),t[2]=Math.min(t[2],360));const i=this._worldToCommonBounds(t);o.worldBounds=t,o.normalizedCommonBounds=i,s=!0}var r,l;return this.setState(o),s}_updateTextureRenderingBounds(){const{triPositionBuffer:e,triTexCoordBuffer:t,normalizedCommonBounds:i,viewportCorners:n}=this.state,{viewport:s}=this.context;e.write(o(n,3));const r=n.map((e=>function(e,t){const[i,n,o,s]=t;return[(e[0]-i)/(o-i),(e[1]-n)/(s-n)]}(s.projectPosition(e),i)));t.write(o(r,2))}_updateColorTexture(e){var t;const{colorRange:i}=e.props;let{colorTexture:n}=this.state;const o=(0,b.Y5)(i,!1,Uint8Array);var s;n&&(null==(t=n)?void 0:t.width)===i.length?n.setTexture2DData({data:o}):(null==(s=n)||s.destroy(),n=this.context.device.createTexture(Object.assign({},A,{data:o,width:i.length,height:1})));this.setState({colorTexture:n})}_updateWeightmap(){const{radiusPixels:e,colorDomain:t,aggregation:i}=this.props,{worldBounds:n,textureSize:o,weightsScale:s,weightsTexture:r}=this.state,a=this.state.weightsTransform;this.state.isWeightMapDirty=!1;const l=this._worldToCommonBounds(n,{useLayerCoordinateSystem:!0});if(t&&"SUM"===i){const{viewport:e}=this.context,i=e.distanceScales.metersPerUnit[2]*(l[2]-l[0])/o;this.state.colorDomain=t.map((e=>e*i*s))}else this.state.colorDomain=t||M;const c=this.getAttributeManager().getAttributes(),d=this.getModuleSettings();this._setModelAttributes(a.model,c),a.model.setVertexCount(this.getNumInstances());const u={radiusPixels:e,commonBounds:l,textureWidth:o,weightsScale:s,weightsTexture:r},{viewport:p,devicePixelRatio:h,coordinateSystem:g,coordinateOrigin:f}=d,{modelMatrix:m}=this.props;a.model.shaderInputs.setProps({project:{viewport:p,devicePixelRatio:h,modelMatrix:m,coordinateSystem:g,coordinateOrigin:f},weight:u}),a.run({parameters:{viewport:[0,0,o,o]},clearColor:[0,0,0,0]}),this._updateMaxWeightValue()}_debouncedUpdateWeightmap(e){void 0===e&&(e=!1);let{updateTimer:t}=this.state;const{debounceTimeout:i}=this.props;e?(t=null,this._updateBounds(!0),this._updateTextureRenderingBounds(),this.setState({isWeightMapDirty:!0})):(this.setState({isWeightMapDirty:!1}),clearTimeout(t),t=setTimeout(this._debouncedUpdateWeightmap.bind(this,!0),i)),this.setState({updateTimer:t})}_worldToCommonBounds(e,t){void 0===t&&(t={});const{useLayerCoordinateSystem:i=!1}=t,[n,o,s,r]=e,{viewport:l}=this.context,{textureSize:c}=this.state,{coordinateSystem:d}=this.props,u=i&&(d===a.rf.LNGLAT_OFFSETS||d===a.rf.METER_OFFSETS),p=u?l.projectPosition(this.props.coordinateOrigin):[0,0],h=2*c/l.scale;let g,f;return i&&!u?(g=this.projectPosition([n,o,0]),f=this.projectPosition([s,r,0])):(g=l.projectPosition([n,o,0]),f=l.projectPosition([s,r,0])),function(e,t,i){const[n,o,s,r]=e,a=s-n,l=r-o;let c=a,d=l;a/l<t/i?c=t/i*l:d=i/t*a,c<t&&(c=t,d=i);const u=(s+n)/2,p=(r+o)/2;return[u-c/2,p-d/2,u+c/2,p+d/2]}([g[0]-p[0],g[1]-p[1],f[0]-p[0],f[1]-p[1]],h,h)}_commonToWorldBounds(e){const[t,i,n,o]=e,{viewport:s}=this.context,r=s.unprojectPosition([t,i]),a=s.unprojectPosition([n,o]);return r.slice(0,2).concat(a.slice(0,2))}}E.layerName="HeatmapLayer",E.defaultProps=L;const R=E},77075:(e,t,i)=>{"use strict";i.d(t,{A:()=>L});var n=i(18120),o=i(30428),s=i(33698),r=i(43976),a=i(57149),l=i(52601),c=i(29586),d=i(58213),u=i(39792),p=i(7017),h=i(34651);const g=Math.PI/3,f=2*Math.sin(g),m=1.5,v=Array.from({length:6},((e,t)=>{const i=t*g;return[Math.sin(i),-Math.cos(i)]}));function y(e,t){let[i,n]=e,o=Math.round(n=n/t/m),s=Math.round(i=i/t/f-(1&o)/2);const r=n-o;if(3*Math.abs(r)>1){const e=i-s,t=s+(i<s?-1:1)/2,a=o+(n<o?-1:1),l=i-t,c=n-a;e*e+r*r>l*l+c*c&&(s=t+(1&o?1:-1)/2,o=a)}return[s,o]}const x="\nconst vec2 DIST = vec2("+f+", "+m+");\n\nivec2 pointToHexbin(vec2 p, float radius) {\n  p /= radius * DIST;\n  float pj = round(p.y);\n  float pjm2 = mod(pj, 2.0);\n  p.x -= pjm2 * 0.5;\n  float pi = round(p.x);\n  vec2 d1 = p - vec2(pi, pj);\n\n  if (abs(d1.y) * 3. > 1.) {\n    vec2 v2 = step(0.0, d1) - 0.5;\n    v2.y *= 2.0;\n    vec2 d2 = d1 - v2;\n    if (dot(d1, d1) > dot(d2, d2)) {\n      pi += v2.x + pjm2 - 0.5;\n      pj += v2.y;\n    }\n  }\n  return ivec2(pi, pj);\n}\n";function _(e,t){let[i,n]=e;return[(i+(1&n)/2)*t*f,n*t*m]}const b="#version 300 es\n#define SHADER_NAME hexagon-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\n"+("\nconst vec2 DIST = vec2("+f+", "+m+");\n\nvec2 hexbinCentroid(vec2 binId, float radius) {\n  binId.x += fract(binId.y * 0.5);\n  return binId * DIST * radius;\n}\n")+"\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < hexagon.colorDomain.z ||\ninstanceColorValues > hexagon.colorDomain.w ||\ninstanceElevationValues < hexagon.elevationDomain.z ||\ninstanceElevationValues > hexagon.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = hexbinCentroid(instancePositions, column.radius) + (hexagon.originCommon - project.commonOrigin.xy);\ncommonPosition += positions.xy * column.radius * column.coverage;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, hexagon.elevationDomain.xy, hexagon.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, hexagon.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",w={name:"hexagon",vs:"uniform hexagonUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n} hexagon;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>"}};class P extends h.A{getShaders(){const e=super.getShaders();return e.modules.push(w),Object.assign({},e,{vs:b})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e,n=this.state.fillModel;if(i.colorRange!==t.colorRange){var o;null==(o=this.state.colorTexture)||o.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};n.shaderInputs.setProps({hexagon:e})}else i.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const{radius:i,hexOriginCommon:n,elevationRange:o,elevationScale:s,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],u=this.props.elevationCutoff||[-1/0,1/0],p=this.state.fillModel;p.vertexArray.indexBuffer&&p.setIndexBuffer(null),p.setVertexCount(this.state.fillVertexCount);const h={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],u[0]),Math.min(c[1],u[1]),Math.max(c[0]-1,u[0]),Math.min(c[1]+1,u[1])],elevationRange:[o[0]*s,o[1]*s],originCommon:n};p.shaderInputs.setProps({column:{extruded:r,coverage:a,radius:i},hexagon:h}),p.draw(this.context.renderPass)}}P.layerName="HexagonCellLayer";const S=P,C={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 hexOriginCommon;\n  float radiusCommon;\n} binOptions;\n",uniformTypes:{hexOriginCommon:"vec2<f32>",radiusCommon:"f32"}};function A(){}const M={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:A,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:A,radius:{type:"number",min:1,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},hexagonAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class T extends c.A{getAggregatorType(){const{gpuAggregation:e,hexagonAggregator:t,getColorValue:i,getElevationValue:o}=this.props;return e&&(t||i||o)?(n.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{hexagonAggregator:e,radius:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(i,n,o)=>{let{positions:s}=i;if(e)return e(s,t);const r=this.state.aggregatorViewport.projectPosition(s),{radiusCommon:a,hexOriginCommon:l}=o;return y([r[0]-l[0],r[1]-l[1]],a)}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[o.A,C],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n  \n  "+x+"\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    binId = pointToHexbin(positionCommon.xy, binOptions.radiusCommon);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:o}=e,{aggregator:r}=this.state;if(!o.dataChanged&&this.state.dataAsArray||!i.getColorValue&&!i.getElevationValue||(this.state.dataAsArray=Array.from((0,s.X)(i.data).iterable)),t||o.dataChanged||i.radius!==n.radius||i.getColorValue!==n.getColorValue||i.getElevationValue!==n.getElevationValue||i.colorAggregation!==n.colorAggregation||i.elevationAggregation!==n.elevationAggregation){this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:t,binIdRange:n,dataAsArray:o}=this.state;if(r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.colorAggregation,i.elevationAggregation],binOptions:{radiusCommon:e,hexOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),o){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>o[e])),{indices:t,data:i.data})),t&&(e=>t(e.map((e=>o[e])),{indices:e,data:i.data}))]})}}return o.updateTriggersChanged&&o.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),o.updateTriggersChanged&&o.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds();let t=1,i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let s=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{radius:a}=this.props,{unitsPerMeter:l}=o.getDistanceScales(s);t=l[0]*a;const c=y(o.projectFlat(s),t);s=o.unprojectFlat(_(c,t));const d=o.constructor;o=o.isGeospatial?new d({longitude:s[0],latitude:s[1],zoom:12}):new r.A({position:[s[0],s[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,p.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return n[0]-=i[0],n[1]-=i[1],y(n,t)},padding:1})}this.setState({radiusCommon:t,hexOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const i=this.getCurrentLayer().props,{aggregator:n}=this.state;if(0===t){const e=n.getResult(0);this.setState({colors:new u.bg(e,n.binCount)}),i.onSetColorDomain(n.getResultDomain(0))}else if(1===t){const e=n.getResult(1);this.setState({elevations:new u.bg(e,n.binCount)}),i.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{radiusCommon:e,hexOriginCommon:i}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:i,radiusCommon:n,hexOriginCommon:o}=this.state,{elevationScale:s,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:u,colorScaleType:p,lowerPercentile:h,upperPercentile:g,colorDomain:f,elevationScaleType:m,elevationLowerPercentile:y,elevationUpperPercentile:x,elevationDomain:_}=this.props,b=this.getSubLayerClass("cells",S),w=i.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:p,lowerPercentile:h,upperPercentile:g}),C=null==(t=this.state.elevations)?void 0:t.update({scaleType:m,lowerPercentile:y,upperPercentile:x});return P&&C?new b(this.getSubLayerProps({id:"cells"}),{data:{length:i.binCount,attributes:{getBin:w,getColorValue:P.attribute,getElevationValue:C.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[w],getColorValue:[P.attribute],getElevationValue:[C.attribute]},diskResolution:6,vertices:v,radius:n,hexOriginCommon:o,elevationScale:s,colorRange:r,colorScaleType:p,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||i.getResultDomain(0),elevationDomain:C.domain||_||i.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:C.cutoff,transitions:u&&{getFillColor:u.getColorValue||u.getColorWeight,getElevation:u.getElevationValue||u.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;if(e){const t=_(e.id,this.state.radiusCommon),i=this.context.viewport.unprojectFlat(t);n={col:e.id[0],row:e.id[1],position:i,colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])}t.object=n}return t}}T.layerName="HexagonLayer",T.defaultProps=M;const L=T},44274:(e,t,i)=>{"use strict";i.d(t,{A:()=>y});var n=i(30428),o=i(57149),s=i(52601),r=i(29586),a=i(71904),l=i(25337),c=i(3002),d=i(28756),u=i(58213);const p={name:"screenGrid",vs:"uniform screenGridUniforms {\n  vec2 cellSizeClipspace;\n  vec2 gridSizeClipspace;\n  vec2 colorDomain;\n} screenGrid;\n",uniformTypes:{cellSizeClipspace:"vec2<f32>",gridSizeClipspace:"vec2<f32>",colorDomain:"vec2<f32>"}};class h extends c.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-vertex-shader\n#define RANGE_COUNT 6\nin vec2 positions;\nin vec2 instancePositions;\nin float instanceWeights;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\nif (isnan(instanceWeights)) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 pos = instancePositions * screenGrid.gridSizeClipspace + positions * screenGrid.cellSizeClipspace;\npos.x = pos.x - 1.0;\npos.y = 1.0 - pos.y;\ngl_Position = vec4(pos, 0., 1.);\nvColor = interp(instanceWeights, screenGrid.colorDomain, colorRange);\nvColor.a *= layer.opacity;\npicking_setPickingColor(instancePickingColors);\n}\n",fs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[d.A,p]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceWeights:{size:1,type:"float32",accessor:"getWeight"}}),this.state.model=this._getModel()}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e,o=this.state.model;if(i.colorRange!==t.colorRange){var s;null==(s=this.state.colorTexture)||s.destroy(),this.state.colorTexture=(0,u.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};o.shaderInputs.setProps({screenGrid:e})}else i.colorScaleType!==t.colorScaleType&&(0,u.Pu)(this.state.colorTexture,t.colorScaleType);if(i.cellMarginPixels!==t.cellMarginPixels||i.cellSizePixels!==t.cellSizePixels||n.viewportChanged){const{width:e,height:t}=this.context.viewport,{cellSizePixels:i,cellMarginPixels:n}=this.props,s=Math.max(i-n,0),r={gridSizeClipspace:[i/e*2,i/t*2],cellSizeClipspace:[s/e*2,s/t*2]};o.shaderInputs.setProps({screenGrid:r})}}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const i=this.props.colorDomain(),n=this.state.model,o={colorDomain:i};n.shaderInputs.setProps({screenGrid:o}),n.draw(this.context.renderPass)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-strip",attributes:{positions:{value:new Float32Array([0,0,1,0,0,1,1,1]),size:2}}}),isInstanced:!0}))}}h.layerName="ScreenGridCellLayer";const g=h,f={name:"binOptions",vs:"uniform binOptionsUniforms {\n  float cellSizePixels;\n} binOptions;\n",uniformTypes:{cellSizePixels:"f32"}},m={cellSizePixels:{type:"number",value:100,min:1},cellMarginPixels:{type:"number",value:2,min:0},colorRange:u.QO,colorScaleType:"linear",getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"};class v extends r.A{getAggregatorType(){return this.props.gpuAggregation&&o.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"!==e&&o.V.isSupported(this.context.device)?new o.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[n.A,f],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n  \n  void getBin(out ivec2 binId) {\n    vec4 pos = project_position_to_clipspace(positions, positions64Low, vec3(0.0));\n    vec2 screenCoords = vec2(pos.x / pos.w + 1.0, 1.0 - pos.y / pos.w) / 2.0 * project.viewportSize / project.devicePixelRatio;\n    vec2 gridCoords = floor(screenCoords / binOptions.cellSizePixels);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float weight) {\n    weight = counts;\n  }\n  "}))):new s.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,i)=>{let{positions:n}=e;const o=this.context.viewport,s=o.project(n),r=i.cellSizePixels;return s[0]<0||s[0]>=o.width||s[1]<0||s[1]>=o.height?null:[Math.floor(s[0]/r),Math.floor(s[1]/r)]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}]})}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:s}=e,{cellSizePixels:r,aggregation:a}=i;if(t||s.dataChanged||s.updateTriggersChanged||s.viewportChanged||a!==n.aggregation||r!==n.cellSizePixels){const{width:e,height:t}=this.context.viewport,{aggregator:i}=this.state;i instanceof o.V&&i.setProps({binIdRange:[[0,Math.ceil(e/r)],[0,Math.ceil(t/r)]]}),i.setProps({pointCount:this.getNumInstances(),operations:[a],binOptions:{cellSizePixels:r}})}return s.viewportChanged&&this.state.aggregator.setNeedsUpdate(),t}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate();break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const{aggregator:e}=this.state,t=this.getSubLayerClass("cells",g),i=e.getBins(),n=e.getResult(0);return new t(this.props,this.getSubLayerProps({id:"cell-layer"}),{data:{length:e.binCount,attributes:{getBin:i,getWeight:n}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[i],getWeight:[n]},parameters:Object.assign({depthWriteEnabled:!1},this.props.parameters),colorDomain:()=>this.props.colorDomain||e.getResultDomain(0),extensions:[]})}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;e&&(n={col:e.id[0],row:e.id[1],value:e.value[0],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=n}return t}}v.layerName="ScreenGridLayer",v.defaultProps=m;const y=v},96457:(e,t,i)=>{"use strict";i.d(t,{R:()=>n});const n=512},89254:(e,t,i)=>{"use strict";i.d(t,{A:()=>x});var n=i(33847),o=i(65544),s=i(24460),r=i(62287);const a=85.051128;function l(e,t,i){let{west:n,north:o,east:s,south:l}=e;void 0===i&&(i=1);const c=[[o,s],[l,s],[l,n],[o,n]].map((e=>(0,r.Sg)(e[0],e[1],t))).map((e=>180*Math.max(...(0,r.Wq)(e).map((e=>(0,r.Wy)(e,r.QN.rads))))/Math.PI)),d=Math.max(...c)*i,u=Math.min(180,d/Math.cos((o+l)/2*Math.PI/180));return{north:Math.min(o+d,a),east:s+u,south:Math.max(l-d,-85.051128),west:n-u}}function c(e,t){let{west:i,north:n,east:o,south:s}=e;const a=Math.abs(o-i);if(a>180){const e=Math.ceil(a/180);let r=[];for(let a=0;a<e;a++){const e=i+180*a,l=Math.min(e+179.9999999,o);r=r.concat(c({west:e,north:n,east:l,south:s},t))}return[...new Set(r)]}const l=[[n,o],[s,o],[s,i],[n,i],[n,o]];return(0,r.r1)(l,t)}function d(e){const t=(0,r.u$)(e),i=t.map((e=>e[0])),n=t.map((e=>e[1]));return l({west:Math.min(...n),south:Math.min(...i),east:Math.max(...n),north:Math.max(...i)},(0,r.Hn)(e),.12)}function u(e,t){const i=Math.log2(t/512),n=2/3*(e.zoom-i),o=Math.log(1/Math.cos(Math.PI*e.latitude/180));return Math.max(0,Math.floor(n+o-2))}class p extends s.TL{getTileIndices(e){let{viewport:t,minZoom:i,maxZoom:n}=e;if(void 0===t.latitude)return[];const[o,s,a,d]=t.getBounds(),{tileSize:p}=this.opts;let h,g=u(t,p);if("number"==typeof i&&Number.isFinite(i)&&g<i)return[];if("number"==typeof n&&Number.isFinite(n)&&g>n){g=n;const e=(0,r.Sg)(t.latitude,t.longitude,n);h=(0,r.uE)(e,1)}else{h=c(l({west:o,north:d,east:a,south:s},g),g)}return h.map((e=>({i:e})))}getTileId(e){let{i:t}=e;return t}getTileMetadata(e){let{i:t}=e;return{bbox:d(t)}}getTileZoom(e){let{i:t}=e;return(0,r.Hn)(t)}getParentIndex(e){const t=(0,r.Hn)(e.i);return{i:(0,r.s7)(e.i,t-1)}}}var h=i(42463),g=i(22786),f=i(96457);const m=e=>{const{data:t}=e,{index:i}=e.tile;return t&&t.length?new o.A(e,{getHexagon:e=>e.id,centerHexagon:i,highPrecision:!0}):null},v={data:g.ko,tileSize:f.R};class y extends n.A{initializeState(){o.A._checkH3Lib()}getLoadOptions(){const e=this.props.data;return(0,g.FB)(super.getLoadOptions(),{fetch:{headers:{Authorization:"Bearer "+e.accessToken}},cartoSpatialTile:{scheme:"h3"}})}renderLayers(){const e=this.props.data;if(!e)return null;const{tiles:t}=e;let{minresolution:i,maxresolution:n}=e;this.props.minZoom&&(i=Math.max(i,u({zoom:this.props.minZoom,latitude:0},this.props.tileSize))),this.props.maxZoom&&(n=Math.min(n,u({zoom:this.props.maxZoom,latitude:0},this.props.tileSize)));return new(this.getSubLayerClass("spatial-index-tile",h.A))(this.props,{id:"h3-tile-layer-"+this.props.id,data:t,TilesetClass:p,renderSubLayers:m,minZoom:i,maxZoom:n,loadOptions:this.getLoadOptions()})}}y.layerName="H3TileLayer",y.defaultProps=v;const x=y},34935:(e,t,i)=>{"use strict";i.d(t,{A:()=>g});var n=i(55404),o=i(68801);class s{static read(e,t){return e.readFields(s._readField,{value:[]},t)}static _readField(e,t,i){1===e&&(0,n.w)(BigUint64Array,i,t)}}class r{static read(e,t){return e.readFields(r._readField,{indices:null,properties:[],numericProps:{}},t)}static _readField(e,t,i){if(1===e)t.indices=s.read(i,i.readVarint()+i.pos);else if(2===e)t.properties.push(o.tZ.read(i,i.readVarint()+i.pos));else if(3===e){const e=o.cQ.read(i,i.readVarint()+i.pos);t.numericProps[e.key]=e.value}}}class a{static read(e,t){return e.readFields(a._readField,{scheme:0,cells:null},t)}static _readField(e,t,i){1===e?t.scheme=i.readVarint():2===e&&(t.cells=r.read(i,i.readVarint()+i.pos))}}var l=i(39255),c=i(44173),d=i(73422);const u="9.1.14",p="cartoSpatialTile";function h(e,t){var i;if(!e)return null;const n=(0,l.u)(e,a),{cells:o}=n;return function(e){const{cells:t,scheme:i}=e,n=t.indices.value.length,o=[];for(let s=0;s<n;s++){const e="h3"===i?(0,d.Q9)(t.indices.value[s]):t.indices.value[s],n=Object.assign({},t.properties[s]);for(const i of Object.keys(t.numericProps))n[i]=t.numericProps[i].value[s];o.push({id:e,properties:n})}return o}({cells:o,scheme:null==t||null==(i=t.cartoSpatialTile)?void 0:i.scheme})}const g={name:"CARTO Spatial Tile",version:u,id:p,module:"carto",extensions:["pbf"],mimeTypes:["application/vnd.carto-spatial-tile"],category:"geometry",parse:async(e,t)=>h(e,t),parseSync:h,worker:!0,options:{cartoSpatialTile:{scheme:"quadbin",workerUrl:(0,c.MU)(p,u)}}}},68801:(e,t,i)=>{"use strict";i.d(t,{_t:()=>g,cQ:()=>d,tZ:()=>s});var n=i(55404);class o{static read(e,t){return e.readFields(o._readField,{key:"",value:null},t)}static _readField(e,t,i){1===e?t.key=i.readString():2===e&&(t.value=i.readString())}}class s{static read(e,t){return e.readFields(s._readField,{},t)}static _readField(e,t,i){if(1===e){const{key:e,value:n}=o.read(i,i.readVarint()+i.pos);t[e]=n}}}class r{static read(e,t){const{value:i,size:n}=e.readFields(r._readField,{value:[],size:0},t);return{value:i,size:n}}static _readField(e,t,i){1===e?(0,n.w)(Float64Array,i,t):2===e&&(t.size=i.readVarint(!0))}}class a{static read(e,t){const{value:i,size:n}=e.readFields(a._readField,{value:[],size:0},t);return{value:new Uint32Array(i),size:n}}static _readField(e,t,i){1===e?i.readPackedVarint(t.value):2===e&&(t.size=i.readVarint(!0))}}class l{static read(e,t){return e.readFields(l._readField,{id:0},t)}static _readField(e,t,i){1===e&&(t.id=i.readVarint())}}class c{static read(e,t){return e.readFields(c._readField,{value:[]},t)}static _readField(e,t,i){1===e&&(0,n.w)(Float64Array,i,t)}}class d{static read(e,t){return e.readFields(d._readField,{key:"",value:null},t)}static _readField(e,t,i){1===e?t.key=i.readString():2===e&&(t.value=c.read(i,i.readVarint()+i.pos))}}class u{static read(e,t){return e.readFields(u._readField,{positions:null,globalFeatureIds:null,featureIds:null,properties:[],numericProps:{},fields:[]},t)}static _readField(e,t,i){if(1===e)t.positions=r.read(i,i.readVarint()+i.pos);else if(2===e)t.globalFeatureIds=a.read(i,i.readVarint()+i.pos);else if(3===e)t.featureIds=a.read(i,i.readVarint()+i.pos);else if(4===e)t.properties.push(s.read(i,i.readVarint()+i.pos));else if(5===e){const e=d.read(i,i.readVarint()+i.pos);t.numericProps[e.key]=e.value}else 6===e&&t.fields.push(l.read(i,i.readVarint()+i.pos))}}class p{static read(e,t){return e.readFields(p._readField,{positions:null,pathIndices:null,globalFeatureIds:null,featureIds:null,properties:[],numericProps:{},fields:[]},t)}static _readField(e,t,i){if(1===e)t.positions=r.read(i,i.readVarint()+i.pos);else if(2===e)t.pathIndices=a.read(i,i.readVarint()+i.pos);else if(3===e)t.globalFeatureIds=a.read(i,i.readVarint()+i.pos);else if(4===e)t.featureIds=a.read(i,i.readVarint()+i.pos);else if(5===e)t.properties.push(s.read(i,i.readVarint()+i.pos));else if(6===e){const e=d.read(i,i.readVarint()+i.pos);t.numericProps[e.key]=e.value}else 7===e&&t.fields.push(l.read(i,i.readVarint()+i.pos))}}class h{static read(e,t){return e.readFields(h._readField,{positions:null,polygonIndices:null,globalFeatureIds:null,featureIds:null,primitivePolygonIndices:null,triangles:null,properties:[],numericProps:{},fields:[]},t)}static _readField(e,t,i){if(1===e)t.positions=r.read(i,i.readVarint()+i.pos);else if(2===e)t.polygonIndices=a.read(i,i.readVarint()+i.pos);else if(3===e)t.globalFeatureIds=a.read(i,i.readVarint()+i.pos);else if(4===e)t.featureIds=a.read(i,i.readVarint()+i.pos);else if(5===e)t.primitivePolygonIndices=a.read(i,i.readVarint()+i.pos);else if(6===e)t.triangles=a.read(i,i.readVarint()+i.pos);else if(7===e)t.properties.push(s.read(i,i.readVarint()+i.pos));else if(8===e){const e=d.read(i,i.readVarint()+i.pos);t.numericProps[e.key]=e.value}else 9===e&&t.fields.push(l.read(i,i.readVarint()+i.pos))}}class g{static read(e,t){return e.readFields(g._readField,{points:null,lines:null,polygons:null},t)}static _readField(e,t,i){1===e?t.points=u.read(i,i.readVarint()+i.pos):2===e?t.lines=p.read(i,i.readVarint()+i.pos):3===e&&(t.polygons=h.read(i,i.readVarint()+i.pos))}}},55404:(e,t,i)=>{"use strict";i.d(t,{w:()=>o});var n=i(16e3);function o(e,t,i,o){const s=2===t.type?t.readVarint()+t.pos:t.pos+1,r=t.buf.buffer.slice(t.pos,s);if("gzip"===(null==o?void 0:o.compression)){const t=(new n.t).decompressSync(r);i.value=new e(t)}else i.value=new e(r);return t.pos=s,i.value}},39255:(e,t,i)=>{"use strict";i.d(t,{u:()=>o});var n=i(15335);function o(e,t){const i=new n(e);return t.read(i)}},42463:(e,t,i)=>{"use strict";i.d(t,{A:()=>c});var n=i(5223),o=i(34935),s=i(2966),r=i(96457);(0,n.mk)([o.A]);const a={tileSize:r.R};class l extends s.A{_updateAutoHighlight(e){const{hoveredFeatureId:t}=this.state,i=e.object;let n=null;if(i&&(n=i.id),t!==n){let{highlightColor:t}=this.props;"function"==typeof t&&(t=t(e)),this.setState({highlightColor:t,hoveredFeatureId:n})}}getSubLayerPropsByTile(e){return{highlightedObjectIndex:this.getHighlightedObjectIndex(e),highlightColor:this.state.highlightColor}}getHighlightedObjectIndex(e){const{hoveredFeatureId:t}=this.state,i=e.content;var n;return null!=(n=t)&&""!==n&&Array.isArray(i)&&this._featureInTile(e,t)?i.findIndex((e=>e.id===t)):-1}_featureInTile(e,t){const i=this.state.tileset,n=i.getTileZoom(e.index),o=e.index.q?"q":"i";let s={[o]:t},r=i.getTileZoom(s);for(;!(r<=n);)s=i.getParentIndex(s),r=i.getTileZoom(s);return s[o]===e.index[o]}}l.layerName="SpatialIndexTileLayer",l.defaultProps=a;const c=l},22786:(e,t,i)=>{"use strict";i.d(t,{FB:()=>a,PR:()=>l,ko:()=>c});var n=i(98587),o=i(18120),s=i(50111);const r=["geoid"];function a(e,t,i){if(void 0===i&&(i=0),!e)return t;if(!t)return e;if(i>10)return t;const n=Object.assign({},e);for(const o in t){const s=t[o];s!==e&&s!==t&&(n[o]="object"==typeof s&&null!==s?a(e[o],s,i+1):s)}return n}function l(e,t){const i={};for(const s of t.properties){const{geoid:e}=s,t=(0,n.A)(s,r);e in i?o.A.warn("Duplicate geoid key in boundary mapping, using first occurance")():i[e]=t}for(const n of["points","lines","polygons"]){const o=e[n];if(0===o.positions.value.length)continue;o.properties=o.properties.map((e=>{let{geoid:t}=e;return i[t]}));const{positions:s,globalFeatureIds:r}=o;let a=null;"lines"===n&&(a=o.pathIndices.value),"polygons"===n&&(a=o.polygonIndices.value);const l=s.value.length/s.size;for(const e in t.numericProps){const i=t.numericProps[e].value,n=new(0,i.constructor)(l);if(o.numericProps[e]={value:n,size:1},a)for(let e=0;e<a.length-1;e++){const t=a[e],o=a[e+1],s=r.value[t];n.fill(i[s],t,o)}else for(let e=0;e<l;e++){const t=r.value[e];n[e]=i[t]}}}return e}const c={type:"object",value:null,validate:(e,t)=>t.optional&&null===e||"object"==typeof e&&Array.isArray(e.tiles)&&e.tiles.every((e=>"string"==typeof e)),equal:(e,t)=>(0,s.b)(e,t,2),async:!0}},53420:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(51004),o=i(34553),s=i(44173),r=i(1263);function a(e){let{attr:t,domain:i,colors:a=o.GT,nullColor:l=o.Uf}=e;(0,s.vA)(Array.isArray(i),'Expected "domain" to be an array of numbers');const c="string"==typeof a?(0,o.Ay)(a,i.length+1):a,d=(0,n.A)().domain(i).range(c);return(e,i)=>{const n=(0,r.l)(t,e,i);return"number"==typeof n&&Number.isFinite(n)?d(n):l}}},34553:(e,t,i)=>{"use strict";i.d(t,{Ay:()=>l,GT:()=>s,Sr:()=>a,Uf:()=>r});var n=i(31263),o=i(44173);const s="PurpOr",r=[204,204,204],a=[119,119,119];function l(e,t){const i=n[e];let s=t;(0,o.vA)(i,'Palette "'+e+'" not found. Expected a CARTOColors string');const r=Object.keys(i).filter((e=>"tags"!==e)).map(Number),a=Math.max(...r),l=Math.min(...r);!Number.isInteger(t)||t>a?s=a:t<l&&(s=l);let c=i[s];return i.tags&&i.tags.includes("qualitative")&&(c=c.slice(0,-1)),c.map((e=>function(e){let t=/^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(e);if(t)return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16),255];if(t=/^#?([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})([a-f\d]{1})$/i.exec(e),t)return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16),parseInt(t[4]+t[4],16)];if(t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e),t)return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),255];return t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e),(0,o.vA)(t,'Hexadecimal color "'+e+'" was not parsed correctly'),[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16),parseInt(t[4],16)]}(e)))}},1263:(e,t,i)=>{"use strict";i.d(t,{l:()=>s});var n=i(44173);const o=Object.freeze(["function","string"]);function s(e,t,i){var s;return(0,n.vA)("object"==typeof t,'Expected "data" to be an object'),(0,n.vA)(o.includes(typeof e),'Expected "attr" to be a function or string'),"function"==typeof e?e(t,i):null==t||null==(s=t.properties)?void 0:s[e]}},44173:(e,t,i)=>{"use strict";i.d(t,{MU:()=>r,Qd:()=>s,Sm:()=>u,T2:()=>p,YR:()=>d,bY:()=>c,vA:()=>o});var n=i(18120);function o(e,t){n.A.assert(e,t)}function s(e,t){const{properties:i,numericProps:n}=e;return new Proxy(i[t]||{},{get:(e,i)=>i in n?n[i].value[t]:e[i],has:(e,t)=>t in n||t in e,ownKeys:e=>[...Object.keys(n),...Reflect.ownKeys(e)],getOwnPropertyDescriptor:(e,t)=>({enumerable:!0,configurable:!0})})}function r(e,t){return"https://unpkg.com/@deck.gl/carto@"+t+"/dist/"+e+"-worker.js"}const a=new Uint16Array,l={positions:{value:new Float32Array,size:2},properties:[],numericProps:{},featureIds:{value:a,size:1},globalFeatureIds:{value:a,size:1}};function c(){return{shape:"binary-feature-collection",points:Object.assign({type:"Point"},l),lines:Object.assign({type:"LineString",pathIndices:{value:a,size:1}},l),polygons:Object.assign({type:"Polygon",polygonIndices:{value:a,size:1},primitivePolygonIndices:{value:a,size:1}},l)}}function d(e,t,i,n,o,s){return void 0===s&&(s=2),{type:"Point",positions:{value:new Float32Array(e),size:s},featureIds:{value:new Uint16Array(t),size:1},globalFeatureIds:{value:new Uint32Array(i),size:1},numericProps:n,properties:o}}function u(e,t){const i={};return t&&Object.keys(t).forEach((t=>{i[t]={value:new Float32Array(e),size:1}})),i}function p(e,t,i,n){Object.keys(e).forEach((o=>{t[o].value[n]=e[o].value[i]}))}},27962:(e,t,i)=>{"use strict";i.d(t,{A:()=>_});var n=i(50948);const o=()=>{},s=2,r=3,a=e=>e,l=1;class c{constructor(e){this._onTransitionUpdate=e=>{const{time:t,settings:{interpolator:i,startProps:n,endProps:o,duration:s,easing:r}}=e,a=r(t/s),l=i.interpolateProps(n,o,a);this.propsInTransition=this.getControllerState(Object.assign({},this.props,l)).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=e.getControllerState,this.propsInTransition=null,this.transition=new n.A(e.timeline),this.onViewStateChange=e.onViewStateChange||o,this.onStateChange=e.onStateChange||o}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(e){let t=!1;const i=this.props;if(this.props=e,!i||this._shouldIgnoreViewportChange(i,e))return!1;if(this._isTransitionEnabled(e)){let n=i;if(this.transition.inProgress){const{interruption:e,endProps:t}=this.transition.settings;n=Object.assign({},i,e===s?t:this.propsInTransition||i)}this._triggerTransition(n,e),t=!0}else this.transition.cancel();return t}updateTransition(){this.transition.update()}_isTransitionEnabled(e){const{transitionDuration:t,transitionInterpolator:i}=e;return(t>0||"auto"===t)&&Boolean(i)}_isUpdateDueToCurrentTransition(e){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(e,this.propsInTransition)}_shouldIgnoreViewportChange(e,t){if(this.transition.inProgress){return this.transition.settings.interruption===r||this._isUpdateDueToCurrentTransition(t)}return!this._isTransitionEnabled(t)||t.transitionInterpolator.arePropsEqual(e,t)}_triggerTransition(e,t){const i=this.getControllerState(e),n=this.getControllerState(t).shortestPathFrom(i),o=t.transitionInterpolator,s=o.getDuration?o.getDuration(e,t):t.transitionDuration;if(0===s)return;const r=o.initializeProps(e,n);this.propsInTransition={};const c={duration:s,easing:t.transitionEasing||a,interpolator:o,interruption:t.transitionInterruption||l,startProps:r.start,endProps:r.end,onStart:t.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(t.onTransitionInterrupt),onEnd:this._onTransitionEnd(t.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(e){return t=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==e||e(t)}}}var d=i(58662);const u={transitionDuration:0},p=e=>1-(1-e)*(1-e),h=["wheel"],g=["panstart","panmove","panend"],f=["pinchstart","pinchmove","pinchend"],m=["multipanstart","multipanmove","multipanend"],v=["dblclick"],y=["keydown"],x={};class _{constructor(e){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new c(Object.assign({},e,{getControllerState:e=>new this.ControllerState(e),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)})),this.handleEvent=this.handleEvent.bind(this),this.eventManager=e.eventManager,this.onViewStateChange=e.onViewStateChange||(()=>{}),this.onStateChange=e.onStateChange||(()=>{}),this.makeViewport=e.makeViewport}set events(e){this.toggleEvents(this._customEvents,!1),this.toggleEvents(e,!0),this._customEvents=e,this.props&&this.setProps(this.props)}finalize(){for(const t in this._events){var e;if(this._events[t])null==(e=this.eventManager)||e.off(t,this.handleEvent)}this.transitionManager.finalize()}handleEvent(e){this._controllerState=void 0;const t=this._eventStartBlocked;switch(e.type){case"panstart":return!t&&this._onPanStart(e);case"panmove":return this._onPan(e);case"panend":return this._onPanEnd(e);case"pinchstart":return!t&&this._onPinchStart(e);case"pinchmove":return this._onPinch(e);case"pinchend":return this._onPinchEnd(e);case"multipanstart":return!t&&this._onMultiPanStart(e);case"multipanmove":return this._onMultiPan(e);case"multipanend":return this._onMultiPanEnd(e);case"dblclick":return this._onDoubleClick(e);case"wheel":return this._onWheel(e);case"keydown":return this._onKeyDown(e);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState(Object.assign({makeViewport:this.makeViewport},this.props,this.state)),this._controllerState}getCenter(e){const{x:t,y:i}=this.props,{offsetCenter:n}=e;return[n.x-t,n.y-i]}isPointInBounds(e,t){const{width:i,height:n}=this.props;if(t&&t.handled)return!1;const o=e[0]>=0&&e[0]<=i&&e[1]>=0&&e[1]<=n;return o&&t&&t.stopPropagation(),o}isFunctionKeyPressed(e){const{srcEvent:t}=e;return Boolean(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(e){const t=setTimeout((()=>{this._eventStartBlocked===t&&(this._eventStartBlocked=null)}),e);this._eventStartBlocked=t}setProps(e){e.dragMode&&(this.dragMode=e.dragMode),this.props=e,"transitionInterpolator"in e||(e.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(e);const{inertia:t}=e;this.inertia=Number.isFinite(t)?t:!0===t?300:0;const{scrollZoom:i=!0,dragPan:n=!0,dragRotate:o=!0,doubleClickZoom:s=!0,touchZoom:r=!0,touchRotate:a=!1,keyboard:l=!0}=e,c=Boolean(this.onViewStateChange);this.toggleEvents(h,c&&i),this.toggleEvents(g,c),this.toggleEvents(f,c&&(r||a)),this.toggleEvents(m,c&&a),this.toggleEvents(v,c&&s),this.toggleEvents(y,c&&l),this.scrollZoom=i,this.dragPan=n,this.dragRotate=o,this.doubleClickZoom=s,this.touchZoom=r,this.touchRotate=a,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(e,t){this.eventManager&&e.forEach((e=>{this._events[e]!==t&&(this._events[e]=t,t?this.eventManager.on(e,this.handleEvent):this.eventManager.off(e,this.handleEvent))}))}updateViewport(e,t,i){void 0===t&&(t=null),void 0===i&&(i={});const n=Object.assign({},e.getViewportProps(),t),o=this.controllerState!==e;if(this.state=e.getState(),this._setInteractionState(i),o){const e=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:n,interactionState:this._interactionState,oldViewState:e,viewId:this.props.id})}}_onTransition(e){this.onViewStateChange(Object.assign({},e,{interactionState:this._interactionState,viewId:this.props.id}))}_setInteractionState(e){Object.assign(this._interactionState,e),this.onStateChange(this._interactionState)}_onPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;let i=this.isFunctionKeyPressed(e)||e.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(i=!i);const n=this.controllerState[i?"panStart":"rotateStart"]({pos:t});return this._panMove=i,this.updateViewport(n,u,{isDragging:!0}),!0}_onPan(e){return!!this.isDragging()&&(this._panMove?this._onPanMove(e):this._onPanRotate(e))}_onPanEnd(e){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(e):this._onPanRotateEnd(e))}_onPanMove(e){if(!this.dragPan)return!1;const t=this.getCenter(e),i=this.controllerState.pan({pos:t});return this.updateViewport(i,u,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(e){const{inertia:t}=this;if(this.dragPan&&t&&e.velocity){const i=this.getCenter(e),n=[i[0]+e.velocityX*t/2,i[1]+e.velocityY*t/2],o=this.controllerState.pan({pos:n}).panEnd();this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:p}),{isDragging:!1,isPanning:!0})}else{const e=this.controllerState.panEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(e){if(!this.dragRotate)return!1;const t=this.getCenter(e),i=this.controllerState.rotate({pos:t});return this.updateViewport(i,u,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(e){const{inertia:t}=this;if(this.dragRotate&&t&&e.velocity){const i=this.getCenter(e),n=[i[0]+e.velocityX*t/2,i[1]+e.velocityY*t/2],o=this.controllerState.rotate({pos:n}).rotateEnd();this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:p}),{isDragging:!1,isRotating:!0})}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(e){if(!this.scrollZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;e.srcEvent.preventDefault();const{speed:i=.01,smooth:n=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:o}=e;let s=2/(1+Math.exp(-Math.abs(o*i)));o<0&&0!==s&&(s=1/s);const r=n?Object.assign({},this._getTransitionProps({around:t}),{transitionDuration:250}):u,a=this.controllerState.zoom({pos:t,scale:s});return this.updateViewport(a,r,{isZooming:!0,isPanning:!0}),!0}_onMultiPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.controllerState.rotateStart({pos:t});return this.updateViewport(i,u,{isDragging:!0}),!0}_onMultiPan(e){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const t=this.getCenter(e);t[0]-=e.deltaX;const i=this.controllerState.rotate({pos:t});return this.updateViewport(i,u,{isDragging:!0,isRotating:!0}),!0}_onMultiPanEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this;if(this.touchRotate&&t&&e.velocityY){const i=this.getCenter(e),n=[i[0],i[1]+=e.velocityY*t/2],o=this.controllerState.rotate({pos:n});this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:p}),{isDragging:!1,isRotating:!0}),this.blockEvents(t)}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.controllerState.zoomStart({pos:t}).rotateStart({pos:t});return x._startPinchRotation=e.rotation,x._lastPinchEvent=e,this.updateViewport(i,u,{isDragging:!0}),!0}_onPinch(e){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let t=this.controllerState;if(this.touchZoom){const{scale:i}=e,n=this.getCenter(e);t=t.zoom({pos:n,scale:i})}if(this.touchRotate){const{rotation:i}=e;t=t.rotate({deltaAngleX:x._startPinchRotation-i})}return this.updateViewport(t,u,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),x._lastPinchEvent=e,!0}_onPinchEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this,{_lastPinchEvent:i}=x;if(this.touchZoom&&t&&i&&e.scale!==i.scale){const n=this.getCenter(e);let o=this.controllerState.rotateEnd();const s=Math.log2(e.scale),r=(s-Math.log2(i.scale))/(e.deltaTime-i.deltaTime),a=Math.pow(2,s+r*t/2);o=o.zoom({pos:n,scale:a}).zoomEnd(),this.updateViewport(o,Object.assign({},this._getTransitionProps({around:n}),{transitionDuration:t,transitionEasing:p}),{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(t)}else{const e=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return x._startPinchRotation=null,x._lastPinchEvent=null,!0}_onDoubleClick(e){if(!this.doubleClickZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.isFunctionKeyPressed(e),n=this.controllerState.zoom({pos:t,scale:i?.5:2});return this.updateViewport(n,this._getTransitionProps({around:t}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(e){if(!this.keyboard)return!1;const t=this.isFunctionKeyPressed(e),{zoomSpeed:i,moveSpeed:n,rotateSpeedX:o,rotateSpeedY:s}=!0===this.keyboard?{}:this.keyboard,{controllerState:r}=this;let a;const l={};switch(e.srcEvent.code){case"Minus":a=t?r.zoomOut(i).zoomOut(i):r.zoomOut(i),l.isZooming=!0;break;case"Equal":a=t?r.zoomIn(i).zoomIn(i):r.zoomIn(i),l.isZooming=!0;break;case"ArrowLeft":t?(a=r.rotateLeft(o),l.isRotating=!0):(a=r.moveLeft(n),l.isPanning=!0);break;case"ArrowRight":t?(a=r.rotateRight(o),l.isRotating=!0):(a=r.moveRight(n),l.isPanning=!0);break;case"ArrowUp":t?(a=r.rotateUp(s),l.isRotating=!0):(a=r.moveUp(n),l.isPanning=!0);break;case"ArrowDown":t?(a=r.rotateDown(s),l.isRotating=!0):(a=r.moveDown(n),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(e){const{transition:t}=this;return t&&t.transitionInterpolator?e?Object.assign({},t,{transitionInterpolator:new d.A(Object.assign({},e,t.transitionInterpolator.opts,{makeViewport:this.controllerState.makeViewport}))}):t:u}}},67797:(e,t,i)=>{"use strict";i.d(t,{A:()=>d,y:()=>c});var n=i(54901),o=i(27962),s=i(43221),r=i(24697),a=i(95238),l=i(58662);class c extends s.A{constructor(e){const{width:t,height:i,latitude:n,longitude:o,zoom:s,bearing:r=0,pitch:l=0,altitude:c=1.5,position:d=[0,0,0],maxZoom:u=20,minZoom:p=0,maxPitch:h=60,minPitch:g=0,startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:x,startZoom:_,normalize:b=!0}=e;(0,a.A)(Number.isFinite(o)),(0,a.A)(Number.isFinite(n)),(0,a.A)(Number.isFinite(s)),super({width:t,height:i,latitude:n,longitude:o,zoom:s,bearing:r,pitch:l,altitude:c,maxZoom:u,minZoom:p,maxPitch:h,minPitch:g,normalize:b,position:d},{startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:x,startZoom:_}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan(e){let{pos:t,startPos:i}=e;const n=this.getState().startPanLngLat||this._unproject(i);if(!n)return this;const o=this.makeViewport(this.getViewportProps()).panByPosition(n,t);return this._getUpdatedState(o)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(e){let{pos:t,deltaAngleX:i=0,deltaAngleY:n=0}=e;const{startRotatePos:o,startBearing:s,startPitch:r}=this.getState();if(!o||void 0===s||void 0===r)return this;let a;return a=t?this._getNewRotation(t,o,r,s):{bearing:s+i,pitch:r+n},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart(e){let{pos:t}=e;return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom(e){let{pos:t,startPos:i,scale:o}=e,{startZoom:s,startZoomLngLat:r}=this.getState();if(r||(s=this.getViewportProps().zoom,r=this._unproject(i)||this._unproject(t)),!r)return this;const{maxZoom:a,minZoom:l}=this.getViewportProps();let c=s+Math.log2(o);c=(0,n.qE)(c,l,a);const d=this.makeViewport(Object.assign({},this.getViewportProps(),{zoom:c}));return this._getUpdatedState(Object.assign({zoom:c},d.panByPosition(r,t)))}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(e){return void 0===e&&(e=2),this._zoomFromCenter(e)}zoomOut(e){return void 0===e&&(e=2),this._zoomFromCenter(1/e)}moveLeft(e){return void 0===e&&(e=100),this._panFromCenter([e,0])}moveRight(e){return void 0===e&&(e=100),this._panFromCenter([-e,0])}moveUp(e){return void 0===e&&(e=100),this._panFromCenter([0,e])}moveDown(e){return void 0===e&&(e=100),this._panFromCenter([0,-e])}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-e})}shortestPathFrom(e){const t=e.getViewportProps(),i=Object.assign({},this.getViewportProps()),{bearing:n,longitude:o}=i;return Math.abs(n-t.bearing)>180&&(i.bearing=n<0?n+360:n-360),Math.abs(o-t.longitude)>180&&(i.longitude=o<0?o+360:o-360),i}applyConstraints(e){const{maxZoom:t,minZoom:i,zoom:o}=e;e.zoom=(0,n.qE)(o,i,t);const{maxPitch:s,minPitch:a,pitch:l}=e;e.pitch=(0,n.qE)(l,a,s);const{normalize:c=!0}=e;return c&&Object.assign(e,(0,r.CK)(e)),e}_zoomFromCenter(e){const{width:t,height:i}=this.getViewportProps();return this.zoom({pos:[t/2,i/2],scale:e})}_panFromCenter(e){const{width:t,height:i}=this.getViewportProps();return this.pan({startPos:[t/2,i/2],pos:[t/2+e[0],i/2+e[1]]})}_getUpdatedState(e){return new this.constructor(Object.assign({makeViewport:this.makeViewport},this.getViewportProps(),this.getState(),e))}_unproject(e){const t=this.makeViewport(this.getViewportProps());return e&&t.unproject(e)}_getNewRotation(e,t,i,o){const s=e[0]-t[0],r=e[1]-t[1],a=e[1],l=t[1],{width:c,height:d}=this.getViewportProps(),u=s/c;let p=0;r>0?Math.abs(d-l)>5&&(p=r/(l-d)*1.2):r<0&&l>5&&(p=1-a/l),p=(0,n.qE)(p,-1,1);const{minPitch:h,maxPitch:g}=this.getViewportProps();let f=i;return p>0?f=i+p*(g-i):p<0&&(f=i-p*(h-i)),{pitch:f,bearing:o+180*u}}}class d extends o.A{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.A({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(e){e.position=e.position||[0,0,0];const t=this.props;super.setProps(e);(!t||t.height!==e.height)&&this.updateViewport(new this.ControllerState(Object.assign({makeViewport:this.makeViewport},e,this.state)))}}},78703:(e,t,i)=>{"use strict";i.d(t,{A:()=>c,c:()=>l});var n=i(54901),o=i(27962),s=i(43221),r=i(87350),a=i(58662);class l extends s.A{constructor(e){const{width:t,height:i,rotationX:n=0,rotationOrbit:o=0,target:s=[0,0,0],zoom:r=0,minRotationX:a=-90,maxRotationX:l=90,minZoom:c=-1/0,maxZoom:d=1/0,startPanPosition:u,startRotatePos:p,startRotationX:h,startRotationOrbit:g,startZoomPosition:f,startZoom:m}=e;super({width:t,height:i,rotationX:n,rotationOrbit:o,target:s,zoom:r,minRotationX:a,maxRotationX:l,minZoom:c,maxZoom:d},{startPanPosition:u,startRotatePos:p,startRotationX:h,startRotationOrbit:g,startZoomPosition:f,startZoom:m}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;return this._getUpdatedState({startPanPosition:this._unproject(t)})}pan(e){let{pos:t,startPosition:i}=e;const n=this.getState().startPanPosition||i;if(!n)return this;const o=this.makeViewport(this.getViewportProps()).panByPosition(n,t);return this._getUpdatedState(o)}panEnd(){return this._getUpdatedState({startPanPosition:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startRotationX:this.getViewportProps().rotationX,startRotationOrbit:this.getViewportProps().rotationOrbit})}rotate(e){let{pos:t,deltaAngleX:i=0,deltaAngleY:n=0}=e;const{startRotatePos:o,startRotationX:s,startRotationOrbit:r}=this.getState(),{width:a,height:l}=this.getViewportProps();if(!o||void 0===s||void 0===r)return this;let c;if(t){let e=(t[0]-o[0])/a;(s<-90||s>90)&&(e*=-1),c={rotationX:s+180*((t[1]-o[1])/l),rotationOrbit:r+180*e}}else c={rotationX:s+n,rotationOrbit:r+i};return this._getUpdatedState(c)}rotateEnd(){return this._getUpdatedState({startRotationX:null,startRotationOrbit:null})}shortestPathFrom(e){const t=e.getViewportProps(),i=Object.assign({},this.getViewportProps()),{rotationOrbit:n}=i;return Math.abs(n-t.rotationOrbit)>180&&(i.rotationOrbit=n<0?n+360:n-360),i}zoomStart(e){let{pos:t}=e;return this._getUpdatedState({startZoomPosition:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom(e){let{pos:t,startPos:i,scale:n}=e,{startZoom:o,startZoomPosition:s}=this.getState();if(s||(o=this.getViewportProps().zoom,s=this._unproject(i)||this._unproject(t)),!s)return this;const r=this._calculateNewZoom({scale:n,startZoom:o}),a=this.makeViewport(Object.assign({},this.getViewportProps(),{zoom:r}));return this._getUpdatedState(Object.assign({zoom:r},a.panByPosition(s,t)))}zoomEnd(){return this._getUpdatedState({startZoomPosition:null,startZoom:null})}zoomIn(e){return void 0===e&&(e=2),this._getUpdatedState({zoom:this._calculateNewZoom({scale:e})})}zoomOut(e){return void 0===e&&(e=2),this._getUpdatedState({zoom:this._calculateNewZoom({scale:1/e})})}moveLeft(e){return void 0===e&&(e=50),this._panFromCenter([-e,0])}moveRight(e){return void 0===e&&(e=50),this._panFromCenter([e,0])}moveUp(e){return void 0===e&&(e=50),this._panFromCenter([0,-e])}moveDown(e){return void 0===e&&(e=50),this._panFromCenter([0,e])}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({rotationOrbit:this.getViewportProps().rotationOrbit+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({rotationX:this.getViewportProps().rotationX-e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({rotationX:this.getViewportProps().rotationX+e})}_unproject(e){const t=this.makeViewport(this.getViewportProps());return e&&t.unproject(e)}_calculateNewZoom(e){let{scale:t,startZoom:i}=e;const{maxZoom:o,minZoom:s}=this.getViewportProps();void 0===i&&(i=this.getViewportProps().zoom);const r=i+Math.log2(t);return(0,n.qE)(r,s,o)}_panFromCenter(e){const{width:t,height:i,target:n}=this.getViewportProps();return this.pan({startPosition:n,pos:[t/2+e[0],i/2+e[1]]})}_getUpdatedState(e){return new this.constructor(Object.assign({makeViewport:this.makeViewport},this.getViewportProps(),this.getState(),e))}applyConstraints(e){const{maxZoom:t,minZoom:i,zoom:o,maxRotationX:s,minRotationX:a,rotationOrbit:l}=e;return e.zoom=Array.isArray(o)?[(0,n.qE)(o[0],i,t),(0,n.qE)(o[1],i,t)]:(0,n.qE)(o,i,t),e.rotationX=(0,n.qE)(e.rotationX,a,s),(l<-180||l>180)&&(e.rotationOrbit=(0,r.zi)(l+180,360)-180),e}}class c extends o.A{constructor(){super(...arguments),this.ControllerState=l,this.transition={transitionDuration:300,transitionInterpolator:new a.A({transitionProps:{compare:["target","zoom","rotationX","rotationOrbit"],required:["target","zoom"]}})}}}},43221:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});class n{constructor(e,t){this._viewportProps=this.applyConstraints(e),this._state=t}getViewportProps(){return this._viewportProps}getState(){return this._state}}},95656:(e,t,i)=>{"use strict";i.d(t,{A:()=>r,k:()=>s});var n=i(18120);let o={};function s(e){o=e}function r(e,t,i,s){n.A.level>0&&o[e]&&o[e].call(null,t,i,s)}},58035:(e,t,i)=>{"use strict";i.d(t,{$:()=>r});const n=[255,255,255],o=1;let s=0;class r{constructor(e){void 0===e&&(e={}),this.type="ambient";const{color:t=n}=e,{intensity:i=o}=e;this.id=e.id||"ambient-"+s++,this.color=t,this.intensity=i}}},55207:(e,t,i)=>{"use strict";i.d(t,{Z:()=>l});var n=i(87597);const o=[255,255,255],s=1,r=[0,0,-1];let a=0;class l{constructor(e){void 0===e&&(e={}),this.type="directional";const{color:t=o}=e,{intensity:i=s}=e,{direction:l=r}=e,{_shadow:c=!1}=e;this.id=e.id||"directional-"+a++,this.color=t,this.intensity=i,this.type="directional",this.direction=new n.P(l).normalize().toArray(),this.shadow=c}getProjectedLight(e){return this}}},55443:(e,t,i)=>{"use strict";i.d(t,{A:()=>S});var n=i(58035),o=i(55207),s=i(31886),r=i(87597),a=i(44584);class l extends a.A{constructor(e,t){super(e,t);const i=e.createTexture({format:"rgba8unorm",width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},mipmaps:!0}),n=e.createTexture({format:"depth16unorm",width:1,height:1,mipmaps:!1});this.fbo=e.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[i],depthStencilAttachment:n})}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null)}getShadowMap(){return this.fbo.colorAttachments[0].texture}render(e){const t=this.fbo,i=this.device.canvasContext.cssToDeviceRatio(),n=e.viewports[0],o=n.width*i,s=n.height*i;o===t.width&&s===t.height||t.resize({width:o,height:s}),super.render(Object.assign({},e,{clearColor:[1,1,1,1],target:t,pass:"shadow"}))}getLayerParameters(e,t,i){return Object.assign({},e.props.parameters,{blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"})}shouldDrawLayer(e){return!1!==e.props.shadowEnabled}getShaderModuleProps(e,t,i){return{shadow:{project:i.project,drawToShadowMap:!0}}}}var c=i(8961),d=i(40281),u=i(63190),p=i(24697);const h="\nuniform shadowUniforms {\n  bool drawShadowMap;\n  bool useShadowMap;\n  vec4 color;\n  highp int lightId;\n  float lightCount;\n  mat4 viewProjectionMatrix0;\n  mat4 viewProjectionMatrix1;\n  vec4 projectCenter0;\n  vec4 projectCenter1;\n} shadow;\n",g="\n"+h+"\n\nconst int max_lights = 2;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  mat4 viewProjectionMatrices[max_lights];\n  viewProjectionMatrices[0] = shadow.viewProjectionMatrix0;\n  viewProjectionMatrices[1] = shadow.viewProjectionMatrix1;\n  vec4 projectCenters[max_lights];\n  projectCenters[0] = shadow.projectCenter0;\n  projectCenters[1] = shadow.projectCenter1;\n\n  if (shadow.drawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[shadow.lightId], projectCenters[shadow.lightId]);\n  }\n  if (shadow.useShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow.lightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[i], projectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n\n",f="\n"+h+"\n\nconst int max_lights = 2;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow.drawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow.useShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow.lightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow.color.a / shadow.lightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow.color.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n\n",m=(0,u.A)((function(e){let{viewport:t,center:i}=e;return new s.k(t.viewProjectionMatrix).invert().transform(i)})),v=(0,u.A)((function(e){let{viewport:t,shadowMatrices:i}=e;const n=[],o=t.pixelUnprojectionMatrix,a=t.isGeospatial?void 0:1,l=[[0,0,a],[t.width,0,a],[0,t.height,a],[t.width,t.height,a],[0,0,-1],[t.width,0,-1],[0,t.height,-1],[t.width,t.height,-1]].map((e=>function(e,t){const[i,n,o]=e,s=(0,p.xJ)([i,n,o],t);if(Number.isFinite(o))return s;return[s[0],s[1],0]}(e,o)));for(const c of i){const e=c.clone().translate(new r.P(t.center).negate()),i=l.map((t=>e.transform(t))),o=(new s.k).ortho({left:Math.min(...i.map((e=>e[0]))),right:Math.max(...i.map((e=>e[0]))),bottom:Math.min(...i.map((e=>e[1]))),top:Math.max(...i.map((e=>e[1]))),near:Math.min(...i.map((e=>-e[2]))),far:Math.max(...i.map((e=>-e[2])))});n.push(o.multiplyRight(c))}return n})),y=[0,0,0,1],x=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const _={name:"shadow",dependencies:[d.A],vs:g,fs:f,inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:function(e){const{shadowEnabled:t=!0,project:i}=e;if(!(t&&i&&e.shadowMatrices&&e.shadowMatrices.length))return{drawShadowMap:!1,useShadowMap:!1,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};const n=d.A.getUniforms(i),o=m({viewport:i.viewport,center:n.center}),s=[],a=v({shadowMatrices:e.shadowMatrices,viewport:i.viewport}).slice();for(let d=0;d<e.shadowMatrices.length;d++){const e=a[d],t=e.clone().translate(new r.P(i.viewport.center).negate());n.coordinateSystem===c.rf.LNGLAT&&n.projectionMode===c.Kx.WEB_MERCATOR?(a[d]=t,s[d]=o):(a[d]=e.clone().multiplyRight(x),s[d]=t.transform(o))}const l={drawShadowMap:Boolean(e.drawToShadowMap),useShadowMap:!!e.shadowMaps&&e.shadowMaps.length>0,color:e.shadowColor||y,lightId:e.shadowLightId||0,lightCount:e.shadowMatrices.length,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};for(let r=0;r<a.length;r++)l["viewProjectionMatrix"+r]=a[r],l["projectCenter"+r]=s[r];for(let r=0;r<2;r++)l["shadow_uShadowMap"+r]=e.shadowMaps&&e.shadowMaps[r]||e.dummyShadowMap;return l},uniformTypes:{drawShadowMap:"f32",useShadowMap:"f32",color:"vec4<f32>",lightId:"i32",lightCount:"f32",viewProjectionMatrix0:"mat4x4<f32>",viewProjectionMatrix1:"mat4x4<f32>",projectCenter0:"vec4<f32>",projectCenter1:"vec4<f32>"}},b={color:[255,255,255],intensity:1},w=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],P=[0,0,0,200/255];class S{constructor(e){void 0===e&&(e={}),this.id="lighting-effect",this.shadowColor=P,this.shadow=!1,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.dummyShadowMap=null,this.setProps(e)}setup(e){this.context=e;const{device:t,deck:i}=e;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(t),i._addDefaultShaderModule(_),this.dummyShadowMap=t.createTexture({width:1,height:1}))}setProps(e){this.ambientLight=void 0,this.directionalLights=[],this.pointLights=[];for(const t in e){const i=e[t];switch(i.type){case"ambient":this.ambientLight=i;break;case"directional":this.directionalLights.push(i);break;case"point":this.pointLights.push(i)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((e=>e.shadow)),this.context&&this.setup(this.context),this.props=e}preRender(e){let{layers:t,layerFilter:i,viewports:n,onViewportActive:o,views:s}=e;if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let e=0;e<this.shadowPasses.length;e++){this.shadowPasses[e].render({layers:t,layerFilter:i,viewports:n,onViewportActive:o,views:s,shaderModuleProps:{shadow:{shadowLightId:e,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}}})}}}getShaderModuleProps(e,t){const i=this.shadow?{project:t.project,shadowMaps:this.shadowPasses.map((e=>e.getShadowMap())),dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{},n={enabled:!0,ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((t=>t.getProjectedLight({layer:e}))),pointLights:this.pointLights.map((t=>t.getProjectedLight({layer:e})))},o=e.props.material;return{shadow:i,lighting:n,phongMaterial:o,gouraudMaterial:o}}cleanup(e){for(const t of this.shadowPasses)t.delete();this.shadowPasses.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,e.deck._removeDefaultShaderModule(_))}_calculateMatrices(){const e=[];for(const t of this.directionalLights){const i=(new s.k).lookAt({eye:new r.P(t.direction).negate()});e.push(i)}return e}_createShadowPasses(e){for(let t=0;t<this.directionalLights.length;t++){const i=new l(e);this.shadowPasses[t]=i}}_applyDefaultLights(){const{ambientLight:e,pointLights:t,directionalLights:i}=this;e||0!==t.length||0!==i.length||(this.ambientLight=new n.$(b),this.directionalLights.push(new o.Z(w[0]),new o.Z(w[1])))}}},1570:(e,t,i)=>{"use strict";i.d(t,{A:()=>B});var n=i(26839),o=i(84529);const s=o.UE;function r(e,t,i){const n="webgpu"===i&&"uint8"===t.type?"unorm8":t.type;return{attribute:e,format:t.size>1?n+"x"+t.size:t.type,byteOffset:t.offset||0}}function a(e){return e.stride||e.size*e.bytesPerElement}var l=i(81052),c=i(87350),d=i(18120);function u(e,t){t.offset&&d.A.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const i=a(e),n=(void 0!==t.vertexOffset?t.vertexOffset:e.vertexOffset||0)*i+(t.elementOffset||0)*e.bytesPerElement+(e.offset||0);return Object.assign({},t,{offset:n,stride:i})}class p{constructor(e,t,i){this._buffer=null,this.device=e,this.id=t.id||"",this.size=t.size||1;const n=t.logicalType||t.type,s="float64"===n;let r,{defaultValue:a}=t;a=Number.isFinite(a)?[a]:a||new Array(this.size).fill(0),r=s?"float32":!n&&t.isIndexed?"uint32":n||"float32";let l=function(e){switch(e){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return(0,o.Y0)(e)}}(n||r);this.doublePrecision=s,s&&!1===t.fp64&&(l=Float32Array),this.value=null,this.settings=Object.assign({},t,{defaultType:l,defaultValue:a,logicalType:n,type:r,normalized:r.includes("norm"),size:this.size,bytesPerElement:l.BYTES_PER_ELEMENT}),this.state=Object.assign({},i,{externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1})}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const e=this.getAccessor();return e.vertexOffset?e.vertexOffset*a(e):0}get numInstances(){return this.state.numInstances}set numInstances(e){this.state.numInstances=e}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),l.A.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const i={};if(this.state.constant){const n=this.value;if(t){const o=u(this.getAccessor(),t),s=o.offset/n.BYTES_PER_ELEMENT,r=o.size||this.size;i[e]=n.subarray(s,s+r)}else i[e]=n}else i[e]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?i[e+"64Low"]=i[e]:i[e+"64Low"]=new Float32Array(this.size)),i}_getBufferLayout(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const i=this.getAccessor(),n=[],o={name:this.id,byteStride:a(i),attributes:n};if(this.doublePrecision){const o=function(e,t){const i=u(e,t);return{high:i,low:Object.assign({},i,{offset:i.offset+4*e.size})}}(i,t||{});n.push(r(e,Object.assign({},i,o.high),this.device.type),r(e+"64Low",Object.assign({},i,o.low),this.device.type))}else if(t){const o=u(i,t);n.push(r(e,Object.assign({},i,o),this.device.type))}else n.push(r(e,i,this.device.type));return o}setAccessor(e){this.state.bufferAccessor=e}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let e=null;if(this.state.constant&&this.value){const t=Array.from(this.value);e=[t,t]}else{const{value:t,numInstances:i,size:n}=this,o=i*n;if(t&&o&&t.length>=o){const i=new Array(n).fill(1/0),s=new Array(n).fill(-1/0);for(let e=0;e<o;)for(let o=0;o<n;o++){const n=t[e++];n<i[o]&&(i[o]=n),n>s[o]&&(s[o]=n)}e=[i,s]}}return this.state.bounds=e,e}setData(e){const{state:t}=this;let i;i=ArrayBuffer.isView(e)?{value:e}:e instanceof n.h?{buffer:e}:e;const o=Object.assign({},this.settings,i);if(ArrayBuffer.isView(i.value)){if(!i.type){if(this.doublePrecision&&i.value instanceof Float64Array)o.type="float32";else{const e=s(i.value);o.type=o.normalized?e.replace("int","norm"):e}}o.bytesPerElement=i.value.BYTES_PER_ELEMENT,o.stride=a(o)}if(t.bounds=null,i.constant){let e=i.value;e=this._normalizeValue(e,[],0),this.settings.normalized&&(e=this.normalizeConstant(e));if(!(!t.constant||!this._areValuesEqual(e,this.value)))return!1;t.externalBuffer=null,t.constant=!0,this.value=ArrayBuffer.isView(e)?e:new Float32Array(e)}else if(i.buffer){const e=i.buffer;t.externalBuffer=e,t.constant=!1,this.value=i.value||null}else if(i.value){this._checkExternalBuffer(i);let e=i.value;t.externalBuffer=null,t.constant=!1,this.value=e;let{buffer:n}=this;const s=a(o),r=(o.vertexOffset||0)*s;if(this.doublePrecision&&e instanceof Float64Array&&(e=(0,c.cT)(e,o)),this.settings.isIndexed){const t=this.settings.defaultType;e.constructor!==t&&(e=new t(e))}const l=e.byteLength+r+2*s;(!n||n.byteLength<l)&&(n=this._createBuffer(l)),n.write(e,r)}return this.setAccessor(o),!0}updateSubBuffer(e){void 0===e&&(e={}),this.state.bounds=null;const t=this.value,{startOffset:i=0,endOffset:n}=e;this.buffer.write(this.doublePrecision&&t instanceof Float64Array?(0,c.cT)(t,{size:this.size,startIndex:i,endIndex:n}):t.subarray(i,n),i*t.BYTES_PER_ELEMENT+this.byteOffset)}allocate(e,t){void 0===t&&(t=!1);const{state:i}=this,n=i.allocatedValue,o=l.A.allocate(n,e+1,{size:this.size,type:this.settings.defaultType,copy:t});this.value=o;const{byteOffset:s}=this;let{buffer:r}=this;return(!r||r.byteLength<o.byteLength+s)&&(r=this._createBuffer(o.byteLength+s),t&&n&&r.write(n instanceof Float64Array?(0,c.cT)(n,this):n,s)),i.allocatedValue=o,i.constant=!1,i.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(e){const{value:t}=e;if(!ArrayBuffer.isView(t))throw new Error("Attribute "+this.id+" value is not TypedArray");const i=this.settings.defaultType;let n=!1;if(this.doublePrecision&&(n=t.BYTES_PER_ELEMENT<4),n)throw new Error("Attribute "+this.id+" does not support "+t.constructor.name);t instanceof i||!this.settings.normalized||"normalized"in e||d.A.warn("Attribute "+this.id+" is normalized")()}normalizeConstant(e){switch(this.settings.type){case"snorm8":return new Float32Array(e).map((e=>(e+128)/255*2-1));case"snorm16":return new Float32Array(e).map((e=>(e+32768)/65535*2-1));case"unorm8":return new Float32Array(e).map((e=>e/255));case"unorm16":return new Float32Array(e).map((e=>e/65535));default:return e}}_normalizeValue(e,t,i){const{defaultValue:n,size:o}=this.settings;if(Number.isFinite(e))return t[i]=e,t;if(!e){let e=o;for(;--e>=0;)t[i+e]=n[e];return t}switch(o){case 4:t[i+3]=Number.isFinite(e[3])?e[3]:n[3];case 3:t[i+2]=Number.isFinite(e[2])?e[2]:n[2];case 2:t[i+1]=Number.isFinite(e[1])?e[1]:n[1];case 1:t[i+0]=Number.isFinite(e[0])?e[0]:n[0];break;default:let s=o;for(;--s>=0;)t[i+s]=Number.isFinite(e[s])?e[s]:n[s]}return t}_areValuesEqual(e,t){if(!e||!t)return!1;const{size:i}=this;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}_createBuffer(e){var t;this._buffer&&this._buffer.destroy();const{isIndexed:i,type:o}=this.settings;return this._buffer=this.device.createBuffer(Object.assign({},null==(t=this._buffer)?void 0:t.props,{id:this.id,usage:(i?n.h.INDEX:n.h.VERTEX)|n.h.COPY_DST,indexType:i?o:void 0,byteLength:e})),this._buffer}}var h=i(95238),g=i(33698),f=i(13696);const m=[],v=[[0,1/0]];var y=i(39976);class x extends p{constructor(e,t){super(e,t,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:v}),this.constant=!1,this.settings.update=t.update||(t.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(e){this.state.startIndices=e}needsUpdate(){return this.state.needsUpdate}needsRedraw(e){let{clearChangedFlags:t=!1}=void 0===e?{}:e;const i=this.state.needsRedraw;return this.state.needsRedraw=i&&!t,i}layoutChanged(){return this.state.layoutChanged}setAccessor(e){var t,i,n;(t=this.state).layoutChanged||(t.layoutChanged=(i=e,n=this.getAccessor(),!(i.type===n.type&&i.size===n.size&&a(i)===a(n)&&(i.offset||0)===(n.offset||0)))),super.setAccessor(e)}getUpdateTriggers(){const{accessor:e}=this.settings;return[this.id].concat("function"!=typeof e&&e||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(e){if(!e||!this.supportsTransition())return null;const{accessor:t}=this.settings,i=this.settings.transition,n=Array.isArray(t)?e[t.find((t=>e[t]))]:e[t];return(0,y.K)(n,i)}setNeedsUpdate(e,t){if(void 0===e&&(e=this.id),this.state.needsUpdate=this.state.needsUpdate||e,this.setNeedsRedraw(e),t){const{startRow:e=0,endRow:i=1/0}=t;this.state.updateRanges=function(e,t){if(e===v)return e;if(t[0]<0&&(t[0]=0),t[0]>=t[1])return e;const i=[],n=e.length;let o=0;for(let s=0;s<n;s++){const n=e[s];n[1]<t[0]?(i.push(n),o=s+1):n[0]>t[1]?i.push(n):t=[Math.min(n[0],t[0]),Math.max(n[1],t[1])]}return i.splice(o,0,t),i}(this.state.updateRanges,[e,i])}else this.state.updateRanges=v}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=m}setNeedsRedraw(e){void 0===e&&(e=this.id),this.state.needsRedraw=this.state.needsRedraw||e}allocate(e){const{state:t,settings:i}=this;return!i.noAlloc&&(!!i.update&&(super.allocate(e,t.updateRanges!==v),!0))}updateBuffer(e){let{numInstances:t,data:i,props:n,context:o}=e;if(!this.needsUpdate())return!1;const{state:{updateRanges:s},settings:{update:r,noAlloc:a}}=this;let l=!0;if(r){for(const[e,a]of s)r.call(o,this,{data:i,startRow:e,endRow:a,props:n,numInstances:t});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[e,i]of s){const n=Number.isFinite(e)?this.getVertexOffset(e):0,o=Number.isFinite(i)?this.getVertexOffset(i):a||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:n,endOffset:o})}else;this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(e){if("webgpu"===this.device.type||void 0===e||"function"==typeof e)return!1;return this.setData({constant:!0,value:e})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(e){const{state:t}=this;return e?(this.clearNeedsUpdate(),t.lastExternalBuffer===e||(t.lastExternalBuffer=e,this.setNeedsRedraw(),this.setData(e)),!0):(t.lastExternalBuffer=null,!1)}setBinaryValue(e,t){void 0===t&&(t=null);const{state:i,settings:n}=this;if(!e)return i.binaryValue=null,i.binaryAccessor=null,!1;if(n.noAlloc)return!1;if(i.binaryValue===e)return this.clearNeedsUpdate(),!0;i.binaryValue=e,this.setNeedsRedraw();if(n.transform||t!==this.startIndices){ArrayBuffer.isView(e)&&(e={value:e});const o=e;(0,h.A)(ArrayBuffer.isView(o.value),"invalid "+n.accessor);const s=Boolean(o.size)&&o.size!==this.size;return i.binaryAccessor=(0,g.I)(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:t,nested:s}),!1}return this.clearNeedsUpdate(),this.setData(e),!0}getVertexOffset(e){const{startIndices:t}=this;return(t?e<t.length?t[e]:this.numInstances:e)*this.size}getValue(){const e=this.settings.shaderAttributes,t=super.getValue();if(!e)return t;for(const i in e)Object.assign(t,super.getValue(i,e[i]));return t}getBufferLayout(e){this.state.layoutChanged=!1;const t=this.settings.shaderAttributes,i=super._getBufferLayout(),{stepMode:n}=this.settings;if(i.stepMode="dynamic"===n?e?e.isInstanced?"instance":"vertex":"instance":null!=n?n:"vertex",!t)return i;for(const o in t){const e=super._getBufferLayout(o,t[o]);i.attributes.push(...e.attributes)}return i}_autoUpdater(e,t){let{data:i,startRow:n,endRow:o,props:s,numInstances:r}=t;if(e.constant&&"webgpu"!==this.context.device.type)return;const{settings:a,state:l,value:c,size:d,startIndices:u}=e,{accessor:p,transform:m}=a;let v=l.binaryAccessor||("function"==typeof p?p:s[p]);"function"!=typeof v&&(v=()=>v),(0,h.A)("function"==typeof v,'accessor "'+p+'" is not a function');let y=e.getVertexOffset(n);const{iterable:x,objectInfo:_}=(0,g.X)(i,n,o);for(const h of x){_.index++;let t=v(h,_);if(m&&(t=m.call(this,t)),u){const i=(_.index<u.length-1?u[_.index+1]:r)-u[_.index];if(t&&Array.isArray(t[0])){let i=y;for(const n of t)e._normalizeValue(n,c,i),i+=d}else t&&t.length>d?c.set(t,y):(e._normalizeValue(t,_.target,0),(0,f.R)({target:c,source:_.target,start:y,count:i}));y+=i*d}else e._normalizeValue(t,c,y),y+=d}}_validateAttributeUpdaters(){const{settings:e}=this;if(!(e.noAlloc||"function"==typeof e.update))throw new Error("Attribute "+this.id+" missing update or accessor")}_checkAttributeArray(){const{value:e}=this,t=Math.min(4,this.size);if(e&&e.length>=t){let i=!0;switch(t){case 4:i=i&&Number.isFinite(e[3]);case 3:i=i&&Number.isFinite(e[2]);case 2:i=i&&Number.isFinite(e[1]);case 1:i=i&&Number.isFinite(e[0]);break;default:i=!1}if(!i)throw new Error("Illegal attribute generated for "+this.id)}}}var _=i(63190),b=i(95656),w=i(68475),P=i(22454);function S(e){const{source:t,target:i,start:n=0,size:o,getData:s}=e,r=e.end||i.length,a=t.length,l=r-n;if(a>l)return void i.set(t.subarray(0,l),n);if(i.set(t,n),!s)return;let c=a;for(;c<l;){const e=s(c,t);for(let t=0;t<o;t++)i[n+c]=e[t]||0,c++}}function C(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'+e+'"')}}function A(e){switch(e){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function M(e){e.push(e.shift())}function T(e){let{device:t,source:i,target:n}=e;var o;(!n||n.byteLength<i.byteLength)&&(null==(o=n)||o.destroy(),n=t.createBuffer({byteLength:i.byteLength,usage:i.usage}));return n}function L(e){let{device:t,buffer:i,attribute:n,fromLength:o,toLength:s,fromStartIndices:r,getData:a=e=>e}=e;const l=n.doublePrecision&&n.value instanceof Float64Array?2:1,c=n.size*l,d=n.byteOffset,u=n.settings.bytesPerElement<4?d/n.settings.bytesPerElement*4:d,p=n.startIndices,h=r&&p,g=n.isConstant;if(!h&&i&&o>=s)return i;const f=n.value instanceof Float64Array?Float32Array:n.value.constructor,m=g?n.value:new f(n.getBuffer().readSyncWebGL(d,s*f.BYTES_PER_ELEMENT).buffer);if(n.settings.normalized&&!g){const e=a;a=(t,i)=>n.normalizeConstant(e(t,i))}const v=g?(e,t)=>a(m,t):(e,t)=>a(m.subarray(e+d,e+d+c),t),y=i?new Float32Array(i.readSyncWebGL(u,4*o).buffer):new Float32Array(0),x=new Float32Array(s);var _;(function(e){let{source:t,target:i,size:n,getData:o,sourceStartIndices:s,targetStartIndices:r}=e;if(!s||!r)return S({source:t,target:i,size:n,getData:o}),i;let a=0,l=0;const c=o&&((e,t)=>o(e+l,t)),d=Math.min(s.length,r.length);for(let u=1;u<d;u++){const e=s[u]*n,o=r[u]*n;S({source:t.subarray(a,e),target:i,start:l,end:o,size:n,getData:c}),a=e,l=o}l<i.length&&S({source:[],target:i,start:l,size:n,getData:c})}({source:y,target:x,sourceStartIndices:r,targetStartIndices:p,size:c,getData:v}),!i||i.byteLength<x.byteLength+u)&&(null==(_=i)||_.destroy(),i=t.createBuffer({byteLength:x.byteLength+u,usage:35050}));return i.write(x,u),i}var O=i(50948);class I{constructor(e){let{device:t,attribute:i,timeline:n}=e;this.buffers=[],this.currentLength=0,this.device=t,this.transition=new O.A(n),this.attribute=i,this.attributeInTransition=function(e){const{device:t,settings:i,value:n}=e,o=new x(t,i);return o.setData({value:n instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:i.normalized}),o}(i),this.currentStartIndices=i.startIndices}get inProgress(){return this.transition.inProgress}start(e,t,i){void 0===i&&(i=1/0),this.settings=e,this.currentStartIndices=this.attribute.startIndices,this.currentLength=function(e,t){const{doublePrecision:i,settings:n,value:o,size:s}=e,r=i&&o instanceof Float64Array?2:1;let a=0;const{shaderAttributes:l}=e.settings;if(l)for(const d of Object.values(l)){var c;a=Math.max(a,null!=(c=d.vertexOffset)?c:0)}return(n.noAlloc?o.length:(t+a)*s)*r}(this.attribute,t),this.transition.start(Object.assign({},e,{duration:i}))}update(){const e=this.transition.update();return e&&this.onUpdate(),e}setBuffer(e){this.attributeInTransition.setData({buffer:e,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const e of this.buffers)e.destroy();this.buffers.length=0}}const E={name:"interpolation",vs:"uniform interpolationUniforms {\n  float time;\n} interpolation;\n",uniformTypes:{time:"f32"}},R="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, interpolation.time);\n  gl_Position = vec4(0.0);\n}\n",z="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n";function j(e){return e.doublePrecision&&e.value instanceof Float64Array}const k={name:"spring",vs:"uniform springUniforms {\n  float damping;\n  float stiffness;\n} spring;\n",uniformTypes:{damping:"f32",stiffness:"f32"}},F="#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE force = delta * spring.stiffness;\n  ATTRIBUTE_TYPE resistance = velocity * spring.damping;\n  return force - resistance + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",D="#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}";const V={interpolation:class extends I{constructor(e){let{device:t,attribute:i,timeline:n}=e;super({device:t,attribute:i,timeline:n}),this.type="interpolation",this.transform=function(e,t){const i=t.size,n=C(i),o=A(i),s=t.getBufferLayout();if(j(t))return new w.p(e,{vs:z,bufferLayout:[{name:"aFrom",byteStride:8*i,attributes:[{attribute:"aFrom",format:o,byteOffset:0},{attribute:"aFrom64Low",format:o,byteOffset:4*i}]},{name:"aTo",byteStride:8*i,attributes:[{attribute:"aTo",format:o,byteOffset:0},{attribute:"aTo64Low",format:o,byteOffset:4*i}]}],modules:[P.dI,E],defines:{ATTRIBUTE_TYPE:n,ATTRIBUTE_SIZE:i},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0});return new w.p(e,{vs:R,bufferLayout:[{name:"aFrom",format:o},{name:"aTo",format:s.attributes[0].format}],modules:[E],defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"],disableWarnings:!0})}(t,i)}start(e,t){const i=this.currentLength,n=this.currentStartIndices;if(super.start(e,t,e.duration),e.duration<=0)return void this.transition.cancel();const{buffers:o,attribute:s}=this;M(o),o[0]=L({device:this.device,buffer:o[0],attribute:s,fromLength:i,toLength:this.currentLength,fromStartIndices:n,getData:e.enter}),o[1]=T({device:this.device,source:o[0],target:o[1]}),this.setBuffer(o[1]);const{transform:r}=this,a=r.model;let l=Math.floor(this.currentLength/s.size);j(s)&&(l/=2),a.setVertexCount(l),s.isConstant?(a.setAttributes({aFrom:o[0]}),a.setConstantAttributes({aTo:s.value})):a.setAttributes({aFrom:o[0],aTo:s.getBuffer()}),r.transformFeedback.setBuffers({vCurrent:o[1]})}onUpdate(){const{duration:e,easing:t}=this.settings,{time:i}=this.transition;let n=i/e;t&&(n=t(n));const{model:o}=this.transform,s={time:n};o.shaderInputs.setProps({interpolation:s}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},spring:class extends I{constructor(e){let{device:t,attribute:i,timeline:n}=e;super({device:t,attribute:i,timeline:n}),this.type="spring",this.texture=function(e){return e.createTexture({data:new Uint8Array(4),format:"rgba8unorm",mipmaps:!1,width:1,height:1})}(t),this.framebuffer=function(e,t){return e.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[t]})}(t,this.texture),this.transform=function(e,t){const i=C(t.size),n=A(t.size);return new w.p(e,{vs:F,fs:D,bufferLayout:[{name:"aPrev",format:n},{name:"aCur",format:n},{name:"aTo",format:t.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[k],defines:{ATTRIBUTE_TYPE:i},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}(t,i)}start(e,t){const i=this.currentLength,n=this.currentStartIndices;super.start(e,t);const{buffers:o,attribute:s}=this;for(let a=0;a<2;a++)o[a]=L({device:this.device,buffer:o[a],attribute:s,fromLength:i,toLength:this.currentLength,fromStartIndices:n,getData:e.enter});o[2]=T({device:this.device,source:o[0],target:o[2]}),this.setBuffer(o[1]);const{model:r}=this.transform;r.setVertexCount(Math.floor(this.currentLength/s.size)),s.isConstant?r.setConstantAttributes({aTo:s.value}):r.setAttributes({aTo:s.getBuffer()})}onUpdate(){const{buffers:e,transform:t,framebuffer:i,transition:n}=this,o=this.settings;t.model.setAttributes({aPrev:e[0],aCur:e[1]}),t.transformFeedback.setBuffers({vNext:e[2]});const s={stiffness:o.stiffness,damping:o.damping};t.model.shaderInputs.setProps({spring:s}),t.run({framebuffer:i,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),M(e),this.setBuffer(e[1]);this.device.readPixelsToArrayWebGL(i)[0]>0||n.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}};class N{constructor(e,t){let{id:i,timeline:n}=t;if(!e)throw new Error("AttributeTransitionManager is constructed without device");this.id=i,this.device=e,this.timeline=n,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const e in this.transitions)this._removeTransition(e)}update(e){let{attributes:t,transitions:i,numInstances:n}=e;this.numInstances=n||1;for(const o in t){const e=t[o],n=e.getTransitionSetting(i);n&&this._updateAttribute(o,e,n)}for(const o in this.transitions){const e=t[o];e&&e.getTransitionSetting(i)||this._removeTransition(o)}}hasAttribute(e){const t=this.transitions[e];return t&&t.inProgress}getAttributes(){const e={};for(const t in this.transitions){const i=this.transitions[t];i.inProgress&&(e[t]=i.attributeInTransition)}return e}run(){if(0===this.numInstances)return!1;for(const t in this.transitions){this.transitions[t].update()&&(this.needsRedraw=!0)}const e=this.needsRedraw;return this.needsRedraw=!1,e}_removeTransition(e){this.transitions[e].delete(),delete this.transitions[e]}_updateAttribute(e,t,i){const n=this.transitions[e];let o=!n||n.type!==i.type;if(o){n&&this._removeTransition(e);const s=V[i.type];s?this.transitions[e]=new s({attribute:t,timeline:this.timeline,device:this.device}):(d.A.error("unsupported transition type '"+i.type+"'")(),o=!1)}(o||t.needsRedraw())&&(this.needsRedraw=!0,this.transitions[e].start(i,this.numInstances))}}const U="attributeManager.invalidate";class B{constructor(e,t){let{id:i="attribute-manager",stats:n,timeline:o}=void 0===t?{}:t;this.mergeBoundsMemoized=(0,_.A)(c._Z),this.id=i,this.device=e,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=n,this.attributeTransitionManager=new N(e,{id:i+"-transitions",timeline:o}),Object.seal(this)}finalize(){for(const e in this.attributes)this.attributes[e].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!e.clearRedrawFlags,t&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(e){this._add(e)}addInstanced(e){this._add(e,{stepMode:"instance"})}remove(e){for(const t of e)void 0!==this.attributes[t]&&(this.attributes[t].delete(),delete this.attributes[t])}invalidate(e,t){const i=this._invalidateTrigger(e,t);(0,b.A)(U,this,e,i)}invalidateAll(e){for(const t in this.attributes)this.attributes[t].setNeedsUpdate(t,e);(0,b.A)(U,this,"all")}update(e){let{data:t,numInstances:i,startIndices:n=null,transitions:o,props:s={},buffers:r={},context:a={}}=e,l=!1;(0,b.A)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const c in this.attributes){const e=this.attributes[c],o=e.settings.accessor;e.startIndices=n,e.numInstances=i,s[c]&&d.A.removed("props."+c,"data.attributes."+c)(),e.setExternalBuffer(r[c])||e.setBinaryValue("string"==typeof o?r[o]:void 0,t.startIndices)||"string"==typeof o&&!r[o]&&e.setConstantValue(s[o])||e.needsUpdate()&&(l=!0,this._updateAttribute({attribute:e,numInstances:i,data:t,props:s,context:a})),this.needsRedraw=this.needsRedraw||e.needsRedraw()}l&&(0,b.A)("attributeManager.updateEnd",this,i),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:i,transitions:o})}updateTransition(){const{attributeTransitionManager:e}=this,t=e.run();return this.needsRedraw=this.needsRedraw||t,t}getAttributes(){return Object.assign({},this.attributes,this.attributeTransitionManager.getAttributes())}getBounds(e){const t=e.map((e=>{var t;return null==(t=this.attributes[e])?void 0:t.getBounds()}));return this.mergeBoundsMemoized(t)}getChangedAttributes(e){void 0===e&&(e={clearChangedFlags:!1});const{attributes:t,attributeTransitionManager:i}=this,n=Object.assign({},i.getAttributes());for(const o in t){const s=t[o];s.needsRedraw(e)&&!i.hasAttribute(o)&&(n[o]=s)}return n}getBufferLayouts(e){return Object.values(this.getAttributes()).map((t=>t.getBufferLayout(e)))}_add(e,t){for(const i in e){const n=e[i],o=Object.assign({},n,{id:i,size:(n.isIndexed?1:n.size)||1},t);this.attributes[i]=new x(this.device,o)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const e={};for(const t in this.attributes){this.attributes[t].getUpdateTriggers().forEach((i=>{e[i]||(e[i]=[]),e[i].push(t)}))}this.updateTriggers=e}_invalidateTrigger(e,t){const{attributes:i,updateTriggers:n}=this,o=n[e];return o&&o.forEach((e=>{const n=i[e];n&&n.setNeedsUpdate(n.id,t)})),o}_updateAttribute(e){const{attribute:t,numInstances:i}=e;if((0,b.A)("attribute.updateStart",t),t.constant)return void t.setConstantValue(t.value);t.allocate(i)&&(0,b.A)("attribute.allocate",t,i);t.updateBuffer(e)&&(this.needsRedraw=!0,(0,b.A)("attribute.updateEnd",t,i))}}},39976:(e,t,i)=>{"use strict";i.d(t,{K:()=>o});const n={interpolation:{duration:0,easing:e=>e},spring:{stiffness:.05,damping:.5}};function o(e,t){if(!e)return null;Number.isFinite(e)&&(e={type:"interpolation",duration:e});const i=e.type||"interpolation";return Object.assign({},n[i],t,e,{type:i})}},33847:(e,t,i)=>{"use strict";i.d(t,{A:()=>l});var n=i(3002),o=i(95656),s=i(13696),r=i(95958);class a extends n.A{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((e=>e.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(e){}setState(e){super.setState(e),this.setNeedsUpdate()}getPickingInfo(e){let{info:t}=e;const{object:i}=t;return i&&i.__source&&i.__source.parent&&i.__source.parent.id===this.id?(t.object=i.__source.object,t.index=i.__source.index,t):t}filterSubLayer(e){return!0}shouldRenderSubLayer(e,t){return t&&t.length}getSubLayerClass(e,t){const{_subLayerProps:i}=this.props;return i&&i[e]&&i[e].type||t}getSubLayerRow(e,t,i){return e.__source={parent:this,object:t,index:i},e}getSubLayerAccessor(e){if("function"==typeof e){const t={index:-1,data:this.props.data,target:[]};return(i,n)=>i&&i.__source?(t.index=i.__source.index,e(i.__source.object,t)):e(i,n)}return e}getSubLayerProps(e){var t;void 0===e&&(e={});const{opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:u,coordinateOrigin:p,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y,_subLayerProps:x}=this.props,_={id:"",updateTriggers:{},opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:u,coordinateOrigin:p,wrapLongitude:h,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y},b=x&&e.id&&x[e.id],w=b&&b.updateTriggers,P=e.id||"sublayer";if(b){const t=this.props[r.fW],i=e.type?e.type._propTypes:{};for(const e in b){const n=i[e]||t[e];n&&"accessor"===n.type&&(b[e]=this.getSubLayerAccessor(b[e]))}}Object.assign(_,e,b),_.id=this.props.id+"-"+P,_.updateTriggers=Object.assign({all:null==(t=this.props.updateTriggers)?void 0:t.all},e.updateTriggers,w);for(const r of m){const e=r.getSubLayerProps.call(this,r);e&&Object.assign(_,e,{updateTriggers:Object.assign(_.updateTriggers,e.updateTriggers)})}return _}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}_getAttributeManager(){return null}_postUpdate(e,t){let i=this.internalState.subLayers;const n=!i||this.needsUpdate();if(n){const e=this.renderLayers();i=(0,s.B)(e,Boolean),this.internalState.subLayers=i}(0,o.A)("compositeLayer.renderLayers",this,n,i);for(const o of i)o.parent=this}}a.layerName="CompositeLayer";const l=a},8961:(e,t,i)=>{"use strict";i.d(t,{Kx:()=>r,We:()=>c,p5:()=>a,rf:()=>s,tg:()=>l});var n=i(18120),o=i(7853);const s={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(s,"IDENTITY",{get:()=>(n.A.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const r={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},a={common:0,meters:1,pixels:2},l={click:"onClick",dblclick:"onClick",panstart:"onDragStart",panmove:"onDrag",panend:"onDragEnd"},c={multipan:[o.uq,{threshold:10,direction:o.e8.Vertical,pointers:2}],pinch:[o.h1,{},null,["multipan"]],pan:[o.uq,{threshold:1},["pinch"],["multipan"]],dblclick:[o.Cx,{event:"dblclick",taps:2}],click:[o.Cx,{event:"click"},null,["dblclick"]]}},23399:(e,t,i)=>{"use strict";i.d(t,{A:()=>ne});var n=i(3726),o=i(3189);const s=[i(64458).A],r=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"],a=[];function l(e){const t=o._.getDefaultShaderAssembler();for(const n of s)t.addDefaultModule(n);const i="glsl"===e?r:a;for(const n of i)t.addShaderHook(n);return t}const c="uniform layerUniforms {\n  uniform float opacity;\n} layer;\n",d={name:"layer",vs:c,fs:c,getUniforms:e=>({opacity:Math.pow(e.opacity,1/2.2)}),uniformTypes:{opacity:"f32"}};var u=i(95958),p=i(18120),h=i(95656),g=i(13696),f=i(97983),m=i(327);class v{constructor(e,t,i){this._loadCount=0,this._subscribers=new Set,this.id=e,this.context=i,this.setData(t)}subscribe(e){this._subscribers.add(e)}unsubscribe(e){this._subscribers.delete(e)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(e,t){if(e===this._data&&!t)return;this._data=e;const i=++this._loadCount;let n=e;"string"==typeof e&&(n=(0,m.H)(e)),n instanceof Promise?(this.isLoaded=!1,this._loader=n.then((e=>{this._loadCount===i&&(this.isLoaded=!0,this._error=void 0,this._content=e)})).catch((e=>{this._loadCount===i&&(this.isLoaded=!0,this._error=e||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=e);for(const o of this._subscribers)o.onChange(this.getData())}}class y{constructor(e){var t;this.protocol=e.protocol||"resource://",this._context={device:e.device,gl:null==(t=e.device)?void 0:t.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(e){return!!e.startsWith(this.protocol)||e in this._resources}add(e){let{resourceId:t,data:i,forceUpdate:n=!1,persistent:o=!0}=e,s=this._resources[t];s?s.setData(i,n):(s=new v(t,i,this._context),this._resources[t]=s),s.persistent=o}remove(e){const t=this._resources[e];t&&(t.delete(),delete this._resources[e])}unsubscribe(e){let{consumerId:t}=e;const i=this._consumers[t];if(i){for(const e in i){const t=i[e],n=this._resources[t.resourceId];n&&n.unsubscribe(t)}delete this._consumers[t],this.prune()}}subscribe(e){let{resourceId:t,onChange:i,consumerId:n,requestId:o="default"}=e;const{_resources:s,protocol:r}=this;t.startsWith(r)&&(t=t.replace(r,""),s[t]||this.add({resourceId:t,data:null,persistent:!1}));const a=s[t];if(this._track(n,o,a,i),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const e in this._resources)this._resources[e].delete()}_track(e,t,i,n){const o=this._consumers,s=o[e]=o[e]||{};let r=s[t];const a=r&&r.resourceId&&this._resources[r.resourceId];a&&(a.unsubscribe(r),this.prune()),i&&(r?(r.onChange=n,r.resourceId=i.id):r={onChange:n,resourceId:i.id},s[t]=r,i.subscribe(r))}_prune(){this._pruneRequest=null;for(const e of Object.keys(this._resources)){const t=this._resources[e];t.persistent||t.inUse()||(t.delete(),delete this._resources[e])}}}var x=i(43976);class _{constructor(e,t){var i;this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=e=>{(0,h.A)("layerManager.activateViewport",this,e),e&&(this.context.viewport=e)};const{deck:o,stats:s,viewport:r,timeline:a}=t||{};this.layers=[],this.resourceManager=new y({device:e,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:e,gl:null==e?void 0:e.gl,deck:o,shaderAssembler:l((null==e||null==(i=e.info)?void 0:i.shadingLanguage)||"glsl"),defaultShaderModules:[d],renderPass:void 0,stats:s||new f.A({id:"deck.gl"}),viewport:r||new x.A({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:a||new n.K,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const e of this.layers)this._finalizeLayer(e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);for(const i of this.layers){const n=i.getNeedsRedraw(e);t=t||n}return t}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(e){this._needsRedraw=this._needsRedraw||e}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e}getLayers(e){let{layerIds:t}=void 0===e?{}:e;return t?this.layers.filter((e=>t.find((t=>0===e.id.indexOf(t))))):this.layers}setProps(e){"debug"in e&&(this._debug=e.debug),"userData"in e&&(this.context.userData=e.userData),"layers"in e&&(this._nextLayers=e.layers),"onError"in e&&(this.context.onError=e.onError)}setLayers(e,t){(0,h.A)("layerManager.setLayers",this,t,e),this._lastRenderedLayers=e;const i=(0,g.B)(e,Boolean);for(const n of i)n.context=this.context;this._updateLayers(this.layers,i)}updateLayers(){const e=this.needsUpdate();e&&(this.setNeedsRedraw("updating layers: "+e),this.setLayers(this._nextLayers||this._lastRenderedLayers,e)),this._nextLayers=null}addDefaultShaderModule(e){const{defaultShaderModules:t}=this.context;t.find((t=>t.name===e.name))||(t.push(e),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(e){const{defaultShaderModules:t}=this.context,i=t.findIndex((t=>t.name===e.name));i>=0&&(t.splice(i,1),this._defaultShaderModulesChanged=!0)}_handleError(e,t,i){i.raiseError(t,e+" of "+i)}_updateLayers(e,t){const i={};for(const s of e)i[s.id]?p.A.warn("Multiple old layers with same id "+s.id)():i[s.id]=s;if(this._defaultShaderModulesChanged){for(const t of e)t.setNeedsUpdate(),t.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}const n=[];this._updateSublayersRecursively(t,i,n),this._finalizeOldLayers(i);let o=!1;for(const s of n)if(s.hasUniformTransition()){o="Uniform transition in "+s;break}this._needsUpdate=o,this.layers=n}_updateSublayersRecursively(e,t,i){for(const o of e){o.context=this.context;const e=t[o.id];null===e&&p.A.warn("Multiple new layers with same id "+o.id)(),t[o.id]=null;let s=null;try{this._debug&&e!==o&&o.validateProps(),e?(this._transferLayerState(e,o),this._updateLayer(o)):this._initializeLayer(o),i.push(o),s=o.isComposite?o.getSubLayers():null}catch(n){this._handleError("matching",n,o)}s&&this._updateSublayersRecursively(s,t,i)}}_finalizeOldLayers(e){for(const t in e){const i=e[t];i&&this._finalizeLayer(i)}}_initializeLayer(e){try{e._initialize(),e.lifecycle=u.VD.INITIALIZED}catch(t){this._handleError("initialization",t,e)}}_transferLayerState(e,t){t._transferState(e),t.lifecycle=u.VD.MATCHED,t!==e&&(e.lifecycle=u.VD.AWAITING_GC)}_updateLayer(e){try{e._update()}catch(t){this._handleError("update",t,e)}}_finalizeLayer(e){this._needsRedraw=this._needsRedraw||"finalized "+e,e.lifecycle=u.VD.AWAITING_FINALIZATION;try{e._finalize(),e.lifecycle=u.VD.FINALIZED}catch(t){this._handleError("finalization",t,e)}}}var b=i(50111);class w{constructor(e){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=e.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=e.eventManager,this._eventCallbacks={onViewStateChange:e.onViewStateChange,onInteractionStateChange:e.onInteractionStateChange},Object.seal(this),this.setProps(e)}finalize(){for(const e in this.controllers){const t=this.controllers[e];t&&t.finalize()}this.controllers={}}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e,this._needsRedraw=this._needsRedraw||e}updateViewStates(){for(const e in this.controllers){const t=this.controllers[e];t&&t.updateTransition()}}getViewports(e){return e?this._viewports.filter((t=>t.containsPixel(e))):this._viewports}getViews(){const e={};return this.views.forEach((t=>{e[t.id]=t})),e}getView(e){return this.views.find((t=>t.id===e))}getViewState(e){const t="string"==typeof e?this.getView(e):e,i=t&&this.viewState[t.getViewStateId()]||this.viewState;return t?t.filterViewState(i):i}getViewport(e){return this._viewportMap[e]}unproject(e,t){const i=this.getViewports(),n={x:e[0],y:e[1]};for(let o=i.length-1;o>=0;--o){const s=i[o];if(s.containsPixel(n)){const i=e.slice();return i[0]-=s.x,i[1]-=s.y,s.unproject(i,t)}}return null}setProps(e){e.views&&this._setViews(e.views),e.viewState&&this._setViewState(e.viewState),("width"in e||"height"in e)&&this._setSize(e.width,e.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(e,t){e===this.width&&t===this.height||(this.width=e,this.height=t,this.setNeedsUpdate("Size changed"))}_setViews(e){e=(0,g.B)(e,Boolean);this._diffViews(e,this.views)&&this.setNeedsUpdate("views changed"),this.views=e}_setViewState(e){if(e){!(0,b.b)(e,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=e}else p.A.warn("missing `viewState` or `initialViewState`")()}_createController(e,t){return new(0,t.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:t=>{var i;return null==(i=this.getView(e.id))?void 0:i.makeViewport({viewState:t,width:this.width,height:this.height})}})}_updateController(e,t,i,n){const o=e.controller;if(o&&i){const s=Object.assign({},t,o,{id:e.id,x:i.x,y:i.y,width:i.width,height:i.height});return n&&n.constructor===o.type||(n=this._createController(e,s)),n&&n.setProps(s),n}return null}_rebuildViewports(){const{views:e}=this,t=this.controllers;this._viewports=[],this.controllers={};let i=!1;for(let n=e.length;n--;){const o=e[n],s=this.getViewState(o),r=o.makeViewport({viewState:s,width:this.width,height:this.height});let a=t[o.id];const l=Boolean(o.controller);l&&!a&&(i=!0),!i&&l||!a||(a.finalize(),a=null),this.controllers[o.id]=this._updateController(o,s,r,a),r&&this._viewports.unshift(r)}for(const n in t){const e=t[n];e&&!this.controllers[n]&&e.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((e=>{e.id&&(this._viewportMap[e.id]=this._viewportMap[e.id]||e)}))}_diffViews(e,t){return e.length!==t.length||e.some(((i,n)=>!e[n].equals(t[n])))}}var P=i(63201),S=i(55443);const C=new S.A;class A{constructor(e){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=e,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(e){const t=this._defaultEffects;if(!t.find((t=>t.id===e.id))){const i=t.findIndex((t=>{return i=e,(null!=(n=t.order)?n:1/0)-(null!=(o=i.order)?o:1/0)>0;var i,n,o}));i<0?t.push(e):t.splice(i,0,e),e.setup(this._context),this._setEffects(this.effects)}}setProps(e){"effects"in e&&((0,b.b)(e.effects,this.effects,1)||this._setEffects(e.effects))}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}getEffects(){return this._resolvedEffects}_setEffects(e){const t={};for(const n of this.effects)t[n.id]=n;const i=[];for(const n of e){const e=t[n.id];let o=n;e&&e!==n?e.setProps?(e.setProps(n.props),o=e):e.cleanup(this._context):e||n.setup(this._context),i.push(o),delete t[n.id]}for(const n in t)t[n].cleanup(this._context);this.effects=i,this._resolvedEffects=i.concat(this._defaultEffects),e.some((e=>e instanceof S.A))||this._resolvedEffects.push(C),this._needsRedraw="effects changed"}finalize(){for(const e of this._resolvedEffects)e.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var M=i(44584);class T extends M.A{shouldDrawLayer(e){const{operation:t}=e.props;return t.includes("draw")||t.includes("terrain")}}var L=i(78218);class O{constructor(e){this.device=e,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new T(e),this.pickLayersPass=new L.A(e),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(e){this.layerFilter!==e.layerFilter&&(this.layerFilter=e.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==e.drawPickingColors&&(this.drawPickingColors=e.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(e){if(!e.viewports.length)return;const t=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,i=Object.assign({layerFilter:this.layerFilter,isPicking:this.drawPickingColors},e);i.effects&&this._preRender(i.effects,i);const n=this.lastPostProcessEffect?this.renderBuffers[0]:i.target;this.lastPostProcessEffect&&(i.clearColor=[0,0,0,0],i.clearCanvas=!0);const o=t.render(Object.assign({},i,{target:n}));i.effects&&this._postRender(i.effects,i),this.renderCount++,(0,h.A)("deckRenderer.renderLayers",this,o,e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}finalize(){const{renderBuffers:e}=this;for(const t of e)t.delete();e.length=0}_preRender(e,t){this.lastPostProcessEffect=null,t.preRenderStats=t.preRenderStats||{};for(const i of e)t.preRenderStats[i.id]=i.preRender(t),i.postRender&&(this.lastPostProcessEffect=i.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:e}=this,t=this.device.canvasContext.getDrawingBufferSize();0===e.length&&[0,1].map((t=>{const i=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"}});e.push(this.device.createFramebuffer({id:"deck-renderbuffer-"+t,colorAttachments:[i]}))}));for(const i of e)i.resize(t)}_postRender(e,t){const{renderBuffers:i}=this,n=Object.assign({},t,{inputBuffer:i[0],swapBuffer:i[1]});for(const o of e)if(o.postRender){n.target=o.id===this.lastPostProcessEffect?t.target:void 0;const e=o.postRender(n);n.inputBuffer=e,n.swapBuffer=e===i[0]?i[1]:i[0]}}}const I={pickedColor:null,pickedObjectIndex:-1};function E(e){let{pickedColors:t,decodePickingColor:i,deviceX:n,deviceY:o,deviceRadius:s,deviceRect:r}=e;const{x:a,y:l,width:c,height:d}=r;let u=s*s,h=-1,g=0;for(let p=0;p<d;p++){const e=p+l-o,i=e*e;if(i>u)g+=4*c;else for(let o=0;o<c;o++){if(t[g+3]-1>=0){const e=o+a-n,t=e*e+i;t<=u&&(u=t,h=g)}g+=4}}if(h>=0){const e=t.slice(h,h+4),n=i(e);if(n){const t=Math.floor(h/4/c),i=h/4-t*c;return Object.assign({},n,{pickedColor:e,pickedX:a+i,pickedY:l+t})}p.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}return I}function R(e){let t,{pickInfo:i,viewports:n,pixelRatio:o,x:s,y:r,z:a}=e,l=n[0];if(n.length>1&&(l=function(e,t){for(let i=e.length-1;i>=0;i--){const n=e[i];if(n.containsPixel(t))return n}return e[0]}((null==i?void 0:i.pickedViewports)||n,{x:s,y:r})),l){const e=[s-l.x,r-l.y];void 0!==a&&(e[2]=a),t=l.unproject(e)}return{color:null,layer:null,viewport:l,index:-1,picked:!1,x:s,y:r,pixel:[s,r],coordinate:t,devicePixel:i&&"pickedX"in i?[i.pickedX,i.pickedY]:void 0,pixelRatio:o}}function z(e){const{pickInfo:t,lastPickedInfo:i,mode:n,layers:o}=e,{pickedColor:s,pickedLayer:r,pickedObjectIndex:a}=t,l=r?[r]:[];if("hover"===n){const e=i.index,t=i.layerId,n=r?r.props.id:null;if(n!==t||a!==e){if(n!==t){const e=o.find((e=>e.props.id===t));e&&l.unshift(e)}i.layerId=n,i.index=a,i.info=null}}const c=R(e),d=new Map;return d.set(null,c),l.forEach((e=>{let t=Object.assign({},c);e===r&&(t.color=s,t.index=a,t.picked=!0),t=j({layer:e,info:t,mode:n});const o=t.layer;e===r&&"hover"===n&&(i.info=t),d.set(o.id,t),"hover"===n&&o.updateAutoHighlight(t)})),d}function j(e){let{layer:t,info:i,mode:n}=e;for(;t&&i;){const e=i.layer||null;i.sourceLayer=e,i.layer=t,i=t.getPickingInfo({info:i,mode:n,sourceLayer:e}),t=t.parent}return i}class k{constructor(e){this._pickable=!0,this.device=e,this.pickLayersPass=new L.A(e),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(e){"layerFilter"in e&&(this.layerFilter=e.layerFilter),"_pickable"in e&&(this._pickable=e._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObject(e){return this._pickClosestObject(e)}pickObjects(e){return this._pickVisibleObjects(e)}getLastPickedObject(e,t){let{x:i,y:n,layers:o,viewports:s}=e;void 0===t&&(t=this.lastPickedInfo.info);const r=t&&t.layer&&t.layer.id,a=t&&t.viewport&&t.viewport.id,l=r?o.find((e=>e.id===r)):null,c=a&&s.find((e=>e.id===a))||s[0],d=c&&c.unproject([i-c.x,n-c.y]),u={x:i,y:n,viewport:c,coordinate:d,layer:l};return Object.assign({},t,u)}_resizeBuffer(){var e,t;if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){const e=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=e}const{canvas:i}=this.device.getDefaultCanvasContext();null==(e=this.pickingFBO)||e.resize({width:i.width,height:i.height}),null==(t=this.depthFBO)||t.resize({width:i.width,height:i.height})}_getPickable(e){if(!1===this._pickable)return null;const t=e.filter((e=>this.pickLayersPass.shouldDrawLayer(e)&&!e.isComposite));return t.length?t:null}_pickClosestObject(e){let{layers:t,views:i,viewports:n,x:o,y:s,radius:r=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:u}=e;const p=this.device.canvasContext.cssToDeviceRatio(),h=this._getPickable(t);if(!h||0===n.length)return{result:[],emptyInfo:R({viewports:n,x:o,y:s,pixelRatio:p})};this._resizeBuffer();const g=this.device.canvasContext.cssToDevicePixels([o,s],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(r*p),{width:v,height:y}=this.pickingFBO,x=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:v,deviceHeight:y}),_={x:o-r,y:s-r,width:2*r+1,height:2*r+1};let b;const w=[],P=new Set;for(let S=0;S<a;S++){let e,t;if(x){const t=this._drawAndSample({layers:h,views:i,viewports:n,onViewportActive:d,deviceRect:x,cullRect:_,effects:u,pass:"picking:"+l});e=E(Object.assign({},t,{deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:x}))}else e={pickedColor:null,pickedObjectIndex:-1};if(e.pickedLayer&&c&&this.depthFBO){const{pickedColors:o}=this._drawAndSample({layers:[e.pickedLayer],views:i,viewports:n,onViewportActive:d,deviceRect:{x:e.pickedX,y:e.pickedY,width:1,height:1},cullRect:_,effects:u,pass:"picking:"+l+":z"},!0);o[3]&&(t=o[0])}e.pickedLayer&&S+1<a&&(P.add(e.pickedLayer),e.pickedLayer.disablePickingIndex(e.pickedObjectIndex)),b=z({pickInfo:e,lastPickedInfo:this.lastPickedInfo,mode:l,layers:h,viewports:n,x:o,y:s,z:t,pixelRatio:p});for(const i of b.values())i.layer&&w.push(i);if(!e.pickedColor)break}for(const S of P)S.restorePickingColors();return{result:w,emptyInfo:b.get(null)}}_pickVisibleObjects(e){let{layers:t,views:i,viewports:n,x:o,y:s,width:r=1,height:a=1,mode:l="query",maxObjects:c=null,onViewportActive:d,effects:u}=e;const h=this._getPickable(t);if(!h||0===n.length)return[];this._resizeBuffer();const g=this.device.canvasContext.cssToDeviceRatio(),f=this.device.canvasContext.cssToDevicePixels([o,s],!0),m=f.x,v=f.y+f.height,y=this.device.canvasContext.cssToDevicePixels([o+r,s+a],!0),x=y.x+y.width,_=y.y,b={x:m,y:_,width:x-m,height:v-_},w=function(e){let{pickedColors:t,decodePickingColor:i}=e;const n=new Map;if(t)for(let o=0;o<t.length;o+=4)if(t[o+3]-1>=0){const e=t.slice(o,o+4),s=e.join(",");if(!n.has(s)){const t=i(e);t?n.set(s,Object.assign({},t,{color:e})):p.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}}return Array.from(n.values())}(this._drawAndSample({layers:h,views:i,viewports:n,onViewportActive:d,deviceRect:b,cullRect:{x:o,y:s,width:r,height:a},effects:u,pass:"picking:"+l})),P=new Map,S=[],C=Number.isFinite(c);for(let p=0;p<w.length;p++){var A;if(C&&S.length>=c)break;const e=w[p];let t={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:o,y:s,pixelRatio:g};t=j({layer:e.pickedLayer,info:t,mode:l});const i=t.layer.id;P.has(i)||P.set(i,new Set);const n=P.get(i),r=null!=(A=t.object)?A:t.index;n.has(r)||(n.add(r),S.push(t))}return S}_drawAndSample(e,t){let{layers:i,views:n,viewports:o,onViewportActive:s,deviceRect:r,cullRect:a,effects:l,pass:c}=e;void 0===t&&(t=!1);const d=t?this.depthFBO:this.pickingFBO,u={layers:i,layerFilter:this.layerFilter,views:n,viewports:o,onViewportActive:s,pickingFBO:d,deviceRect:r,cullRect:a,effects:l,pass:c,pickZ:t,preRenderStats:{},isPicking:!0};for(const y of l)y.useInPicking&&(u.preRenderStats[y.id]=y.preRender(u));const{decodePickingColor:p}=this.pickLayersPass.render(u),{x:h,y:g,width:f,height:m}=r,v=new(t?Float32Array:Uint8Array)(f*m*4);return this.device.readPixelsToArrayWebGL(d,{sourceX:h,sourceY:g,sourceWidth:f,sourceHeight:m,target:v}),{pickedColors:v,decodePickingColor:p}}_getPickingRect(e){let{deviceX:t,deviceY:i,deviceRadius:n,deviceWidth:o,deviceHeight:s}=e;const r=Math.max(0,t-n),a=Math.max(0,i-n),l=Math.min(o,t+n+1)-r,c=Math.min(s,i+n+1)-a;return l<=0||c<=0?null:{x:r,y:a,width:l,height:c}}}var F=i(8961);const D={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},V="top-left",N="__root";class U{constructor(e){let{deck:t,parentElement:i}=e;this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=t,this.parentElement=i}getWidgets(){return this.resolvedWidgets}setProps(e){e.widgets&&!(0,b.b)(e.widgets,this.widgets,1)&&this._setWidgets(e.widgets)}finalize(){for(const e of this.getWidgets())this._remove(e);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(const e in this.containers)this.containers[e].remove()}addDefault(e){this.defaultWidgets.find((t=>t.id===e.id))||(this._add(e),this.defaultWidgets.push(e),this._setWidgets(this.widgets))}_setWidgets(e){const t={};for(const i of this.resolvedWidgets)t[i.id]=i;this.resolvedWidgets.length=0;for(const i of this.defaultWidgets)t[i.id]=null,this.resolvedWidgets.push(i);for(let i of e){const e=t[i.id];e?e.viewId!==i.viewId||e.placement!==i.placement?(this._remove(e),this._add(i)):i!==e&&(e.setProps(i.props),i=e):this._add(i),t[i.id]=null,this.resolvedWidgets.push(i)}for(const i in t){const e=t[i];e&&this._remove(e)}this.widgets=e}_add(e){const{viewId:t=null,placement:i=V}=e,n=e.onAdd({deck:this.deck,viewId:t});n&&this._getContainer(t,i).append(n),e._element=n}_remove(e){null==e.onRemove||e.onRemove(),e._element&&e._element.remove(),e._element=void 0}_getContainer(e,t){const i=e||N;let n=this.containers[i];var o;n||(n=document.createElement("div"),n.style.pointerEvents="none",n.style.position="absolute",n.style.overflow="hidden",null==(o=this.parentElement)||o.append(n),this.containers[i]=n);let s=n.querySelector("."+t);return s||(s=document.createElement("div"),s.className=t,s.style.position="absolute",s.style.zIndex="2",Object.assign(s.style,D[t]),n.append(s)),s}_updateContainers(){const e=this.deck.width,t=this.deck.height;for(const i in this.containers){const n=this.lastViewports[i]||null,o=i===N||n,s=this.containers[i];o?(s.style.display="block",s.style.left=(n?n.x:0)+"px",s.style.top=(n?n.y:0)+"px",s.style.width=(n?n.width:e)+"px",s.style.height=(n?n.height:t)+"px"):s.style.display="none"}}onRedraw(e){let{viewports:t,layers:i}=e;const n=t.reduce(((e,t)=>(e[t.id]=t,e)),{});for(const o of this.getWidgets()){const{viewId:e}=o;if(e){const t=n[e];t&&(o.onViewportChange&&o.onViewportChange(t),null==o.onRedraw||o.onRedraw({viewports:[t],layers:i}))}else{if(o.onViewportChange)for(const e of t)o.onViewportChange(e);null==o.onRedraw||o.onRedraw({viewports:t,layers:i})}}this.lastViewports=n,this._updateContainers()}onHover(e,t){for(const n of this.getWidgets()){var i;const{viewId:o}=n;o&&o!==(null==(i=e.viewport)?void 0:i.id)||null==n.onHover||n.onHover(e,t)}}onEvent(e,t){const i=F.tg[t.type];if(i)for(const s of this.getWidgets()){var n;const{viewId:r}=s;var o;if(!r||r===(null==(n=e.viewport)?void 0:n.id))null==(o=s[i])||o.call(s,e,t)}}}const B={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class W{constructor(){this.id="default-tooltip",this.placement="fill",this.props={},this.isVisible=!1}onAdd(e){let{deck:t}=e;const i=document.createElement("div");return i.className="deck-tooltip",Object.assign(i.style,B),this.deck=t,this.element=i,i}onRemove(){this.deck=void 0,this.element=void 0}setProps(){}onViewportChange(e){var t;this.isVisible&&e.id===(null==(t=this.lastViewport)?void 0:t.id)&&e!==this.lastViewport&&this.setTooltip(null)}onHover(e){const{deck:t}=this,i=t&&t.props.getTooltip;if(!i)return;const n=i(e);this.lastViewport=e.viewport,this.setTooltip(n,e.x,e.y)}setTooltip(e,t,i){const n=this.element;if(n){if("string"==typeof e)n.innerText=e;else{if(!e)return this.isVisible=!1,void(n.style.display="none");e.text&&(n.innerText=e.text),e.html&&(n.innerHTML=e.html),e.className&&(n.className=e.className)}this.isVisible=!0,n.style.display="block",n.style.transform="translate("+t+"px, "+i+"px)",e&&"object"==typeof e&&"style"in e&&Object.assign(n.style,e.style)}}}var G=i(81052),H=i(5223),Z=i(8045);const q={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(e){const t=e[0],i=e[e.length-1];return"{"===t&&"}"===i||"["===t&&"]"===i},parseTextSync:JSON.parse};const K=function(){const e="9.1.14",t=globalThis.deck&&globalThis.deck.VERSION;if(t&&t!==e)throw new Error("deck.gl - multiple versions detected: "+t+" vs "+e);return t||(p.A.log(1,"deck.gl "+e)(),globalThis.deck=Object.assign({},globalThis.deck,{VERSION:e,version:e,log:p.A,_registerLoggers:h.k}),(0,H.mk)([q,[Z.$,{imagebitmap:{premultiplyAlpha:"none"}}]])),e}();var J=i(95850),Y=i(40472),X=i(59658),Q=i(7853),$=i(95238);function ee(){}const te={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{},gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:ee,onWebGLInitialized:ee,onResize:ee,onViewStateChange:ee,onInteractionStateChange:ee,onBeforeRender:ee,onAfterRender:ee,onLoad:ee,onError:e=>p.A.error(e.message,e.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:e=>{let{isDragging:t}=e;return t?"grabbing":"grab"},getTooltip:null,debug:!1,drawPickingColors:!1};class ie{constructor(e){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new f.A({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=e=>{const{_pickRequest:t}=this;if("pointerleave"===e.type)t.x=-1,t.y=-1,t.radius=0;else{if(e.leftButton||e.rightButton)return;{const i=e.offsetCenter;if(!i)return;t.x=i.x,t.y=i.y,t.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:t.x,y:t.y}),t.event=e},this._onEvent=e=>{const t=F.tg[e.type],i=e.offsetCenter;if(!t||!i||!this.layerManager)return;const n=this.layerManager.getLayers(),o=this.deckPicker.getLastPickedObject({x:i.x,y:i.y,layers:n,viewports:this.getViewports(i)},this._lastPointerDownInfo),{layer:s}=o,r=s&&(s[t]||s.props[t]),a=this.props[t];let l=!1;r&&(l=r.call(s,o,e)),l||(null==a||a(o,e),this.widgetManager.onEvent(o,e))},this._onPointerDown=e=>{var t;if("webgpu"===(null==(t=this.device)?void 0:t.type))return;const i=e.offsetCenter,n=this._pick("pickObject","pickObject Time",{x:i.x,y:i.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=n.result[0]||n.emptyInfo},this.props=Object.assign({},te,e),(e=this.props).viewState&&e.initialViewState&&p.A.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,e.device&&(this.device=e.device);let t=this.device;!t&&e.gl&&(e.gl instanceof WebGLRenderingContext&&p.A.error("WebGL1 context not supported.")(),t=Y.l.attach(e.gl)),t||(t=J.a.createDevice(Object.assign({type:"best-available",_reuseDevices:!0,adapters:[Y.l]},e.deviceProps,{createCanvasContext:{canvas:this._createCanvas(e),useDevicePixels:this.props.useDevicePixels,autoResize:!1}}))),this.animationLoop=this._createAnimationLoop(t,e),this.setProps(e),e._typedArrayManagerProps&&G.A.setOptions(e._typedArrayManagerProps),this.animationLoop.start()}finalize(){var e,t,i,n,o,s,r,a,l,c;(null==(e=this.animationLoop)||e.stop(),null==(t=this.animationLoop)||t.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,null==(i=this.layerManager)||i.finalize(),this.layerManager=null,null==(n=this.viewManager)||n.finalize(),this.viewManager=null,null==(o=this.effectManager)||o.finalize(),this.effectManager=null,null==(s=this.deckRenderer)||s.finalize(),this.deckRenderer=null,null==(r=this.deckPicker)||r.finalize(),this.deckPicker=null,null==(a=this.eventManager)||a.destroy(),this.eventManager=null,null==(l=this.widgetManager)||l.finalize(),this.widgetManager=null,this.props.canvas||this.props.device||this.props.gl||!this.canvas)||(null==(c=this.canvas.parentElement)||c.removeChild(this.canvas),this.canvas=null)}setProps(e){var t;this.stats.get("setProps Time").timeStart(),"onLayerHover"in e&&p.A.removed("onLayerHover","onHover")(),"onLayerClick"in e&&p.A.removed("onLayerClick","onClick")(),e.initialViewState&&!(0,b.b)(this.props.initialViewState,e.initialViewState,3)&&(this.viewState=e.initialViewState),Object.assign(this.props,e),this._setCanvasSize(this.props);const i=Object.create(this.props);Object.assign(i,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),null==(t=this.animationLoop)||t.setProps(i),this.layerManager&&(this.viewManager.setProps(i),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(i),this.effectManager.setProps(i),this.deckRenderer.setProps(i),this.deckPicker.setProps(i),this.widgetManager.setProps(i)),this.stats.get("setProps Time").timeEnd()}needsRedraw(e){if(void 0===e&&(e={clearRedrawFlags:!1}),!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);const i=this.viewManager.needsRedraw(e),n=this.layerManager.needsRedraw(e),o=this.effectManager.needsRedraw(e),s=this.deckRenderer.needsRedraw(e);return t=t||i||n||o||s,t}redraw(e){if(!this.layerManager)return;let t=this.needsRedraw({clearRedrawFlags:!0});t=e||t,t&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(t):this._drawLayers(t))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,$.A)(this.viewManager),this.viewManager.views}getViewports(e){return(0,$.A)(this.viewManager),this.viewManager.getViewports(e)}getCanvas(){return this.canvas}pickObject(e){const t=this._pick("pickObject","pickObject Time",e).result;return t.length?t[0]:null}pickMultipleObjects(e){return e.depth=e.depth||10,this._pick("pickObject","pickMultipleObjects Time",e).result}pickObjects(e){return this._pick("pickObjects","pickObjects Time",e)}_addResources(e,t){void 0===t&&(t=!1);for(const i in e)this.layerManager.resourceManager.add({resourceId:i,data:e[i],forceUpdate:t})}_removeResources(e){for(const t of e)this.layerManager.resourceManager.remove(t)}_addDefaultEffect(e){this.effectManager.addDefaultEffect(e)}_addDefaultShaderModule(e){this.layerManager.addDefaultShaderModule(e)}_removeDefaultShaderModule(e){var t;null==(t=this.layerManager)||t.removeDefaultShaderModule(e)}_pick(e,t,i){(0,$.A)(this.deckPicker);const{stats:n}=this;n.get("Pick Count").incrementCount(),n.get(t).timeStart();const o=this.deckPicker[e](Object.assign({layers:this.layerManager.getLayers(i),views:this.viewManager.getViews(),viewports:this.getViewports(i),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects()},i));return n.get(t).timeEnd(),o}_createCanvas(e){let t=e.canvas;if("string"==typeof t&&(t=document.getElementById(t),(0,$.A)(t)),!t){t=document.createElement("canvas"),t.id=e.id||"deckgl-overlay";(e.parent||document.body).appendChild(t)}return Object.assign(t.style,e.style),t}_setCanvasSize(e){if(!this.canvas)return;const{width:t,height:i}=e;if(t||0===t){const e=Number.isFinite(t)?t+"px":t;this.canvas.style.width=e}if(i||0===i){var n;const t=Number.isFinite(i)?i+"px":i;this.canvas.style.position=(null==(n=e.style)?void 0:n.position)||"absolute",this.canvas.style.height=t}}_updateCanvasSize(){var e,t;const{canvas:i}=this;if(!i)return;const n=null!=(e=i.clientWidth)?e:i.width,o=null!=(t=i.clientHeight)?t:i.height;var s,r;n===this.width&&o===this.height||(this.width=n,this.height=o,null==(s=this.viewManager)||s.setProps({width:n,height:o}),null==(r=this.layerManager)||r.activateViewport(this.getViewports()[0]),this.props.onResize({width:n,height:o}))}_createAnimationLoop(e,t){const{gl:i,onError:n,useDevicePixels:o}=t;return new X.F({device:e,useDevicePixels:o,autoResizeDrawingBuffer:!i,autoResizeViewport:!1,onInitialize:e=>this._setDevice(e.device),onRender:this._onRenderFrame.bind(this),onError:n})}_getViewState(){return this.props.viewState||this.viewState}_getViews(){const{views:e}=this.props,t=Array.isArray(e)?e:e?[e]:[new P.A({id:"default-view"})];return t.length&&this.props.controller&&(t[0].props.controller=this.props.controller),t}_onContextLost(){const{onError:e}=this.props;this.animationLoop&&e&&e(new Error("WebGL context is lost"))}_pickAndCallback(){var e;if("webgpu"===(null==(e=this.device)?void 0:e.type))return;const{_pickRequest:t}=this;if(t.event){const{result:e,emptyInfo:s}=this._pick("pickObject","pickObject Time",t);this.cursorState.isHovering=e.length>0;let r=s,a=!1;for(const n of e){var i;r=n,a=(null==(i=n.layer)?void 0:i.onHover(n,t.event))||a}var n,o;if(!a)null==(n=(o=this.props).onHover)||n.call(o,r,t.event),this.widgetManager.onHover(r,t.event);t.event=null}}_updateCursor(){const e=this.props.parent||this.canvas;e&&(e.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(e){var t,i;if(this.device=e,!this.animationLoop)return;this.canvas||(this.canvas=null==(i=this.device.canvasContext)?void 0:i.canvas);"webgl"===this.device.type&&this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),"webgl"===this.device.type&&this.props.onWebGLInitialized(this.device.gl);const o=new n.K;o.play(),this.animationLoop.attachTimeline(o),this.eventManager=new Q.EU(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizers:Object.keys(F.We).map((e=>{var t;const[i,n,o,s]=F.We[e],r=null==(t=this.props.eventRecognizerOptions)?void 0:t[e];return{recognizer:new i(Object.assign({},n,r,{event:e})),recognizeWith:o,requestFailure:s}})),events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const n in F.tg)this.eventManager.on(n,this._onEvent);this.viewManager=new w({timeline:o,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const s=this.viewManager.getViewports()[0];this.layerManager=new _(this.device,{deck:this,stats:this.stats,viewport:s,timeline:o}),this.effectManager=new A({deck:this,device:this.device}),this.deckRenderer=new O(this.device),this.deckPicker=new k(this.device),this.widgetManager=new U({deck:this,parentElement:null==(t=this.canvas)?void 0:t.parentElement}),this.widgetManager.addDefault(new W),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(e,t){var i;const{device:n,gl:o}=this.layerManager.context;this.props.onBeforeRender({device:n,gl:o});const s=Object.assign({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects()},t);null==(i=this.deckRenderer)||i.renderLayers(s),"screen"===s.pass&&this.widgetManager.onRedraw({viewports:s.viewports,layers:s.layers}),this.props.onAfterRender({device:n,gl:o})}_onRenderFrame(){var e;this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),p.A.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),"webgpu"!==(null==(e=this.device)?void 0:e.type)&&this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(e){const t=this.props.onViewStateChange(e)||e.viewState;this.viewState&&(this.viewState=Object.assign({},this.viewState,{[e.viewId]:t}),this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(e){this.cursorState.isDragging=e.isDragging||!1,this.props.onInteractionStateChange(e)}_getFrameStats(){const{stats:e}=this;e.get("frameRate").timeEnd(),e.get("frameRate").timeStart();const t=this.animationLoop.stats;e.get("GPU Time").addTime(t.get("GPU Time").lastTiming),e.get("CPU Time").addTime(t.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:e,stats:t}=this;e.fps=t.get("frameRate").getHz(),e.setPropsTime=t.get("setProps Time").time,e.updateAttributesTime=t.get("Update Attributes").time,e.framesRedrawn=t.get("Redraw Count").count,e.pickTime=t.get("pickObject Time").time+t.get("pickMultipleObjects Time").time+t.get("pickObjects Time").time,e.pickCount=t.get("Pick Count").count,e.gpuTime=t.get("GPU Time").time,e.cpuTime=t.get("CPU Time").time,e.gpuTimePerFrame=t.get("GPU Time").getAverageTime(),e.cpuTimePerFrame=t.get("CPU Time").getAverageTime();const i=J.a.stats.get("Memory Usage");e.bufferMemory=i.get("Buffer Memory").count,e.textureMemory=i.get("Texture Memory").count,e.renderbufferMemory=i.get("Renderbuffer Memory").count,e.gpuMemory=i.get("GPU Memory").count}}ie.defaultProps=te,ie.VERSION=K;const ne=ie},77813:(e,t,i)=>{"use strict";i.d(t,{A:()=>s});var n=i(50111);class o{static get componentName(){return Object.prototype.hasOwnProperty.call(this,"extensionName")?this.extensionName:""}constructor(e){e&&(this.opts=e)}equals(e){return this===e||this.constructor===e.constructor&&(0,n.b)(this.opts,e.opts,1)}getShaders(e){return null}getSubLayerProps(e){const{defaultProps:t}=e.constructor,i={updateTriggers:{}};for(const n in t)if(n in this.props){const e=t[n],o=this.props[n];i[n]=o,e&&"accessor"===e.type&&(i.updateTriggers[n]=this.props.updateTriggers[n],"function"==typeof o&&(i[n]=this.getSubLayerAccessor(o)))}return i}initializeState(e,t){}updateState(e,t){}onNeedsRedraw(e){}getNeedsPickingBuffer(e){return!1}draw(e,t){}finalizeState(e,t){}}o.defaultProps={},o.extensionName="LayerExtension";const s=o},3002:(e,t,i)=>{"use strict";i.d(t,{A:()=>ne});var n=i(26839),o=i(20698),s=i(8961),r=i(1570),a=i(39976),l=i(54901),c=i(50948);class d extends c.A{get value(){return this._value}_onUpdate(){const{time:e,settings:{fromValue:t,toValue:i,duration:n,easing:o}}=this,s=o(e/n);this._value=(0,l.Cc)(t,i,s)}}const u=1e-5;function p(e,t,i,n,o){const s=t-e;return(i-t)*o+-s*n+s+t}function h(e,t){if(Array.isArray(e)){let i=0;for(let n=0;n<e.length;n++){const o=e[n]-t[n];i+=o*o}return Math.sqrt(i)}return Math.abs(e-t)}class g extends c.A{get value(){return this._currValue}_onUpdate(){const{fromValue:e,toValue:t,damping:i,stiffness:n}=this.settings,{_prevValue:o=e,_currValue:s=e}=this;let r=function(e,t,i,n,o){if(Array.isArray(i)){const s=[];for(let r=0;r<i.length;r++)s[r]=p(e[r],t[r],i[r],n,o);return s}return p(e,t,i,n,o)}(o,s,t,i,n);const a=h(r,t),l=h(r,s);a<u&&l<u&&(r=t,this.end()),this._prevValue=s,this._currValue=r}}var f=i(18120);const m={interpolation:d,spring:g};class v{constructor(e){this.transitions=new Map,this.timeline=e}get active(){return this.transitions.size>0}add(e,t,i,n){const{transitions:o}=this;if(o.has(e)){const i=o.get(e),{value:n=i.settings.fromValue}=i;t=n,this.remove(e)}if(!(n=(0,a.K)(n)))return;const s=m[n.type];if(!s)return void f.A.error("unsupported transition type '"+n.type+"'")();const r=new s(this.timeline);r.start(Object.assign({},n,{fromValue:t,toValue:i})),o.set(e,r)}remove(e){const{transitions:t}=this;t.has(e)&&(t.get(e).cancel(),t.delete(e))}update(){const e={};for(const[t,i]of this.transitions)i.update(),e[t]=i.value,i.inProgress||this.remove(t);return e}clear(){for(const e of this.transitions.keys())this.remove(e)}}var y=i(9649),x=i(95958);function _(e){if(null===(t=e)||"object"!=typeof t)throw new Error("count(): argument not an object");var t;if("function"==typeof e.count)return e.count();if(Number.isFinite(e.size))return e.size;if(Number.isFinite(e.length))return e.length;if(function(e){return null!==e&&"object"==typeof e&&e.constructor===Object}(e))return Object.keys(e).length;throw new Error("count(): argument not a container")}var b=i(95656),w=i(95238),P=i(63190);function S(e,t){if(!t)return e;const i=Object.assign({},e,t);if("defines"in t&&(i.defines=Object.assign({},e.defines,t.defines)),"modules"in t&&(i.modules=(e.modules||[]).concat(t.modules),t.modules.some((e=>"project64"===e.name)))){const e=i.modules.findIndex((e=>"project32"===e.name));e>=0&&i.modules.splice(e,1)}if("inject"in t)if(e.inject){const n=Object.assign({},e.inject);for(const e in t.inject)n[e]=(n[e]||"")+t.inject[e];i.inject=n}else i.inject=t.inject;return i}var C=i(5600),A=i(81052),M=i(33698),T=i(80698);const L={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},O={};var I=i(50111);const E={boolean:{validate:(e,t)=>!0,equal:(e,t,i)=>Boolean(e)===Boolean(t)},number:{validate:(e,t)=>Number.isFinite(e)&&(!("max"in t)||e<=t.max)&&(!("min"in t)||e>=t.min)},color:{validate:(e,t)=>t.optional&&!e||j(e)&&(3===e.length||4===e.length),equal:(e,t,i)=>(0,I.b)(e,t,1)},accessor:{validate(e,t){const i=k(e);return"function"===i||i===k(t.value)},equal:(e,t,i)=>"function"==typeof t||(0,I.b)(e,t,1)},array:{validate:(e,t)=>t.optional&&!e||j(e),equal(e,t,i){const{compare:n}=i,o=Number.isInteger(n)?n:n?1:0;return n?(0,I.b)(e,t,o):e===t}},object:{equal(e,t,i){if(i.ignore)return!0;const{compare:n}=i,o=Number.isInteger(n)?n:n?1:0;return n?(0,I.b)(e,t,o):e===t}},function:{validate:(e,t)=>t.optional&&!e||"function"==typeof e,equal:(e,t,i)=>!i.compare&&!1!==i.ignore||e===t},data:{transform:(e,t,i)=>{if(!e)return e;const{dataTransform:n}=i.props;return n?n(e):"string"==typeof e.shape&&e.shape.endsWith("-table")&&Array.isArray(e.data)?e.data:e}},image:{transform:(e,t,i)=>{const n=i.context;return n&&n.device?function(e,t,i,n){if(i instanceof T.g)return i;i.constructor&&"Object"!==i.constructor.name&&(i={data:i});let o=null;i.compressed&&(o={minFilter:"linear",mipmapFilter:i.data.length>1?"nearest":"linear"});const s=t.createTexture(Object.assign({},i,{sampler:Object.assign({},L,o,n),mipmaps:!0}));return O[s.id]=e,s}(i.id,n.device,e,Object.assign({},t.parameters,i.props.textureParameters)):null},release:(e,t,i)=>{var n,o;n=i.id,(o=e)&&o instanceof T.g&&O[o.id]===n&&(o.delete(),delete O[o.id])}}};function R(e,t){switch(k(t)){case"object":return z(e,t);case"array":return z(e,{type:"array",value:t,compare:!1});case"boolean":return z(e,{type:"boolean",value:t});case"number":return z(e,{type:"number",value:t});case"function":return z(e,{type:"function",value:t,compare:!0});default:return{name:e,type:"unknown",value:t}}}function z(e,t){return"type"in t?Object.assign({name:e},E[t.type],t):"value"in t?Object.assign({name:e,type:k(t.value)},t):{name:e,type:"object",value:t}}function j(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function k(e){return j(e)?"array":null===e?"null":typeof e}const F="_mergedDefaultProps";function D(e,t){if(!(e instanceof G.constructor))return{};let i=F;if(t)for(const o of t){const e=o.constructor;e&&(i+=":"+(e.extensionName||e.name))}const n=U(e,i);return n||(e[i]=function(e,t){const i=e.prototype;if(!i)return null;const n=Object.getPrototypeOf(e),o=D(n),s=U(e,"defaultProps")||{},r=function(e){const t={},i={},n={};for(const[o,s]of Object.entries(e)){const e=null==s?void 0:s.deprecatedFor;if(e)n[o]=Array.isArray(e)?e:[e];else{const e=R(o,s);t[o]=e,i[o]=e.value}}return{propTypes:t,defaultProps:i,deprecatedProps:n}}(s),a=Object.assign(Object.create(null),o,r.defaultProps),l=Object.assign(Object.create(null),null==o?void 0:o[x.fW],r.propTypes),c=Object.assign(Object.create(null),null==o?void 0:o[x.uH],r.deprecatedProps);for(const d of t){const e=D(d.constructor);e&&(Object.assign(a,e),Object.assign(l,e[x.fW]),Object.assign(c,e[x.uH]))}(function(e,t){const i=function(e){const t=e.componentName;t||f.A.warn(e.name+".componentName not specified")();return t||e.name}(t);Object.defineProperties(e,{id:{writable:!0,value:i}})})(a,e),function(e,t){const i={},n={};for(const o in t){const e=t[o],{name:s,value:r}=e;e.async&&(i[s]=r,n[s]=V(s))}e[x.jA]=i,e[x.YN]={},Object.defineProperties(e,n)}(a,l),function(e,t){for(const i in t)Object.defineProperty(e,i,{enumerable:!1,set(e){const n=this.id+": "+i;for(const o of t[i])N(this,o)||(this[o]=e);f.A.deprecated(n,t[i].join("/"))()}})}(a,c),a[x.fW]=l,a[x.uH]=c,0!==t.length||N(e,"_propTypes")||(e._propTypes=l);return a}(e,t||[]))}function V(e){return{enumerable:!0,set(t){"string"==typeof t||t instanceof Promise||(0,M.Td)(t)?this[x.YN][e]=t:this[x.vf][e]=t},get(){if(this[x.vf]){if(e in this[x.vf]){return this[x.vf][e]||this[x.jA][e]}if(e in this[x.YN]){const t=this[x.r3]&&this[x.r3].internalState;if(t&&t.hasAsyncProp(e))return t.getAsyncProp(e)||this[x.jA][e]}}return this[x.jA][e]}}}function N(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function U(e,t){return N(e,t)&&e[t]}let B=0;class W{constructor(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.props=function(e,t){let i;for(let s=t.length-1;s>=0;s--){const e=t[s];"extensions"in e&&(i=e.extensions)}const n=D(e.constructor,i),o=Object.create(n);o[x.r3]=e,o[x.YN]={},o[x.vf]={};for(let s=0;s<t.length;++s){const e=t[s];for(const t in e)o[t]=e[t]}return Object.freeze(o),o}(this,t),this.id=this.props.id,this.count=B++}clone(e){const{props:t}=this,i={};for(const n in t[x.jA])n in t[x.vf]?i[n]=t[x.vf][n]:n in t[x.YN]&&(i[n]=t[x.YN][n]);return new this.constructor(Object.assign({},t,i,e))}}W.componentName="Component",W.defaultProps={};const G=W;var H=i(19495);const Z=Object.freeze({});class q{constructor(e){this.component=e,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const e in this.asyncProps){const t=this.asyncProps[e];t&&t.type&&t.type.release&&t.type.release(t.resolvedValue,t.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||Z}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(e){return e in this.asyncProps}getAsyncProp(e){const t=this.asyncProps[e];return t&&t.resolvedValue}isAsyncPropLoading(e){if(e){const t=this.asyncProps[e];return Boolean(t&&t.pendingLoadCount>0&&t.pendingLoadCount!==t.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(e,t){this._watchPromise(e,Promise.resolve(t))}setAsyncProps(e){this.component=e[x.r3]||this.component;const t=e[x.vf]||{},i=e[x.YN]||e,n=e[x.jA]||{};for(const o in t){const e=t[o];this._createAsyncPropData(o,n[o]),this._updateAsyncProp(o,e),t[o]=this.getAsyncProp(o)}for(const o in i){const e=i[o];this._createAsyncPropData(o,n[o]),this._updateAsyncProp(o,e)}}_fetch(e,t){return null}_onResolve(e,t){}_onError(e,t){}_updateAsyncProp(e,t){this._didAsyncInputValueChange(e,t)&&("string"==typeof t&&(t=this._fetch(e,t)),t instanceof Promise?this._watchPromise(e,t):(0,M.Td)(t)?this._resolveAsyncIterable(e,t):this._setPropValue(e,t))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const e in this.asyncProps)Object.defineProperty(this.oldAsyncProps,e,{enumerable:!0,value:this.oldProps[e]})}}_didAsyncInputValueChange(e,t){const i=this.asyncProps[e];return t!==i.resolvedValue&&t!==i.lastValue&&(i.lastValue=t,!0)}_setPropValue(e,t){this._freezeAsyncOldProps();const i=this.asyncProps[e];i&&(t=this._postProcessValue(i,t),i.resolvedValue=t,i.pendingLoadCount++,i.resolvedLoadCount=i.pendingLoadCount)}_setAsyncPropValue(e,t,i){const n=this.asyncProps[e];n&&i>=n.resolvedLoadCount&&void 0!==t&&(this._freezeAsyncOldProps(),n.resolvedValue=t,n.resolvedLoadCount=i,this.onAsyncPropUpdated(e,t))}_watchPromise(e,t){const i=this.asyncProps[e];if(i){i.pendingLoadCount++;const n=i.pendingLoadCount;t.then((t=>{this.component&&(t=this._postProcessValue(i,t),this._setAsyncPropValue(e,t,n),this._onResolve(e,t))})).catch((t=>{this._onError(e,t)}))}}async _resolveAsyncIterable(e,t){if("data"!==e)return void this._setPropValue(e,t);const i=this.asyncProps[e];if(!i)return;i.pendingLoadCount++;const n=i.pendingLoadCount;let o=[],s=0;var r,a=!1,l=!1;try{for(var c,d=(0,H.A)(t);a=!(c=await d.next()).done;a=!1){const t=c.value;{if(!this.component)return;const{dataTransform:i}=this.component.props;o=i?i(t,o):o.concat(t),Object.defineProperty(o,"__diff",{enumerable:!1,value:[{startRow:s,endRow:o.length}]}),s=o.length,this._setAsyncPropValue(e,o,n)}}}catch(u){l=!0,r=u}finally{try{a&&null!=d.return&&await d.return()}finally{if(l)throw r}}this._onResolve(e,o)}_postProcessValue(e,t){const i=e.type;return i&&this.component&&(i.release&&i.release(e.resolvedValue,i,this.component),i.transform)?i.transform(t,i,this.component):t}_createAsyncPropData(e,t){if(!this.asyncProps[e]){const i=this.component&&this.component.props[x.fW];this.asyncProps[e]={type:i&&i[e],lastValue:null,resolvedValue:t,pendingLoadCount:0,resolvedLoadCount:0}}}}class K extends q{constructor(e){let{attributeManager:t,layer:i}=e;super(i),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(e,t){const i=this.layer,n=null==i?void 0:i.props.fetch;return n?n(t,{propName:e,layer:i}):super._fetch(e,t)}_onResolve(e,t){const i=this.layer;if(i){const n=i.props.onDataLoad;"data"===e&&n&&n(t,{propName:e,layer:i})}}_onError(e,t){const i=this.layer;i&&i.raiseError(t,"loading "+e+" of "+this.layer)}}var J=i(24697),Y=i(327);const X=2**24-1,Q=Object.freeze([]),$=(0,P.A)((e=>{let{oldViewport:t,viewport:i}=e;return t.equals(i)}));let ee=new Uint8ClampedArray(0);const te={data:{type:"data",value:Q,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:e=>e&&e.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(e,t)=>{let{propName:i,layer:n,loaders:o,loadOptions:s,signal:r}=t;const{resourceManager:a}=n.context;var l;(s=s||n.getLoadOptions(),o=o||n.props.loaders,r)&&(s=Object.assign({},s,{fetch:Object.assign({},null==(l=s)?void 0:l.fetch,{signal:r})}));let c=a.contains(e);return c||s||(a.add({resourceId:e,data:(0,Y.H)(e,o),persistent:!1}),c=!0),c?a.subscribe({resourceId:e,onChange:e=>{var t;return null==(t=n.internalState)?void 0:t.reloadAsyncProp(i,e)},consumerId:n.id,requestId:i}):(0,Y.H)(e,o,s)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:s.rf.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:e=>{let{layerIndex:t}=e;return[0,100*-t]}},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class ie extends G{constructor(){super(...arguments),this.internalState=null,this.lifecycle=x.VD.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let e=this;for(;e.parent;)e=e.parent;return e}toString(){return(this.constructor.layerName||this.constructor.name)+"({id: '"+this.props.id+"'})"}project(e){(0,w.A)(this.internalState);const t=this.internalState.viewport||this.context.viewport,i=(0,C.w)(e,{viewport:t,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[n,o,s]=(0,J.VJ)(i,t.pixelProjectionMatrix);return 2===e.length?[n,o]:[n,o,s]}unproject(e){(0,w.A)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(e)}projectPosition(e,t){(0,w.A)(this.internalState);const i=this.internalState.viewport||this.context.viewport;return(0,C.R)(e,Object.assign({viewport:i,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem},t))}get isComposite(){return!1}get isDrawable(){return!0}setState(e){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,e),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const e=this.state;return e&&(e.models||e.model&&[e.model])||[]}setShaderModuleProps(){for(const e of this.getModels())e.shaderInputs.setProps(...arguments)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:e}=this.props;return e===s.rf.DEFAULT||e===s.rf.LNGLAT||e===s.rf.CARTESIAN}onHover(e,t){return this.props.onHover&&this.props.onHover(e,t)||!1}onClick(e,t){return this.props.onClick&&this.props.onClick(e,t)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(e,t){return void 0===t&&(t=[]),t[0]=e+1&255,t[1]=e+1>>8&255,t[2]=e+1>>8>>8&255,t}decodePickingColor(e){(0,w.A)(e instanceof Uint8Array);const[t,i,n]=e;return t+256*i+65536*n-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:_(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["positions","instancePositions"])}getShaders(e){e=S(e,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const t of this.props.extensions)e=S(e,t.getShaders.call(this,t));return e}shouldUpdateState(e){return e.changeFlags.propsOrDataChanged}updateState(e){const t=this.getAttributeManager(),{dataChanged:i}=e.changeFlags;if(i&&t)if(Array.isArray(i))for(const n of i)t.invalidateAll(n);else t.invalidateAll();if(t){const{props:i}=e,n=this.internalState.hasPickingBuffer,o=Number.isInteger(i.highlightedObjectIndex)||i.pickable||i.extensions.some((e=>e.getNeedsPickingBuffer.call(this,e)));if(n!==o){this.internalState.hasPickingBuffer=o;const{pickingColors:e,instancePickingColors:i}=t.attributes,n=e||i;n&&(o&&n.constant&&(n.constant=!1,t.invalidate(n.id)),n.value||o||(n.constant=!0,n.value=[0,0,0]))}}}finalizeState(e){for(const i of this.getModels())i.destroy();const t=this.getAttributeManager();t&&t.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(e){for(const t of this.getModels())t.draw(e.renderPass)}getPickingInfo(e){let{info:t,mode:i,sourceLayer:n}=e;const{index:o}=t;return o>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[o]),t}raiseError(e,t){var i,n,o;(t&&(e=new Error(t+": "+e.message,{cause:e})),null!=(i=(n=this.props).onError)&&i.call(n,e))||(null==(o=this.context)||null==o.onError||o.onError(e,this))}getNeedsRedraw(e){return void 0===e&&(e={clearRedrawFlags:!1}),this._getNeedsRedraw(e)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var e;return(null==(e=this.internalState)?void 0:e.uniformTransitions.active)||!1}activateViewport(e){if(!this.internalState)return;const t=this.internalState.viewport;this.internalState.viewport=e,t&&$({oldViewport:t,viewport:e})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(e){void 0===e&&(e="all");const t=this.getAttributeManager();t&&("all"===e?t.invalidateAll():t.invalidate(e))}updateAttributes(e){let t=!1;for(const i in e)e[i].layoutChanged()&&(t=!0);for(const i of this.getModels())this._setModelAttributes(i,e,t)}_updateAttributes(){const e=this.getAttributeManager();if(!e)return;const t=this.props,i=this.getNumInstances(),n=this.getStartIndices();e.update({data:t.data,numInstances:i,startIndices:n,props:t,transitions:t.transitions,buffers:t.data.attributes,context:this});const o=e.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(o)}_updateAttributeTransition(){const e=this.getAttributeManager();e&&e.updateTransition()}_updateUniformTransition(){const{uniformTransitions:e}=this.internalState;if(e.active){const t=e.update(),i=Object.create(this.props);for(const e in t)Object.defineProperty(i,e,{value:t[e]});return i}return this.props}calculateInstancePickingColors(e,t){let{numInstances:i}=t;if(e.constant)return;const n=Math.floor(ee.length/4);if(this.internalState.usesPickingColorCache=!0,n<i){i>X&&f.A.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),ee=A.A.allocate(ee,i,{size:4,copy:!0,maxCount:Math.max(i,X)});const e=Math.floor(ee.length/4),t=[0,0,0];for(let i=n;i<e;i++)this.encodePickingColor(i,t),ee[4*i+0]=t[0],ee[4*i+1]=t[1],ee[4*i+2]=t[2],ee[4*i+3]=0}e.value=ee.subarray(0,4*i)}_setModelAttributes(e,t,i){var o;if(void 0===i&&(i=!1),!Object.keys(t).length)return;if(i){const i=this.getAttributeManager();e.setBufferLayout(i.getBufferLayouts(e)),t=i.getAttributes()}const s=(null==(o=e.userData)?void 0:o.excludeAttributes)||{},r={},a={};for(const l in t){if(s[l])continue;const i=t[l].getValue();for(const o in i){const s=i[o];s instanceof n.h?t[l].settings.isIndexed?e.setIndexBuffer(s):r[o]=s:s&&(a[o]=s)}}e.setAttributes(r),e.setConstantAttributes(a)}disablePickingIndex(e){const t=this.props.data;if(!("attributes"in t))return void this._disablePickingIndex(e);const{pickingColors:i,instancePickingColors:n}=this.getAttributeManager().attributes,o=i||n,s=o&&t.attributes&&t.attributes[o.id];if(s&&s.value){const i=s.value,n=this.encodePickingColor(e);for(let e=0;e<t.length;e++){const t=o.getVertexOffset(e);i[t]===n[0]&&i[t+1]===n[1]&&i[t+2]===n[2]&&this._disablePickingIndex(e)}}else this._disablePickingIndex(e)}_disablePickingIndex(e){const{pickingColors:t,instancePickingColors:i}=this.getAttributeManager().attributes,n=t||i;if(!n)return;const o=n.getVertexOffset(e),s=n.getVertexOffset(e+1);n.buffer.write(new Uint8Array(s-o),o)}restorePickingColors(){const{pickingColors:e,instancePickingColors:t}=this.getAttributeManager().attributes,i=e||t;i&&(this.internalState.usesPickingColorCache&&i.value.buffer!==ee.buffer&&(i.value=ee.subarray(0,i.value.length)),i.updateSubBuffer({startOffset:0}))}_initialize(){(0,w.A)(!this.internalState),(0,w.A)(Number.isFinite(this.props.coordinateSystem)),(0,b.A)("layer.initialize",this);const e=this._getAttributeManager();e&&e.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new K({attributeManager:e,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(f.A.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),e)}),this.internalState.uniformTransitions=new v(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(e){(0,b.A)("layer.matched",this,this===e);const{state:t,internalState:i}=e;this!==e&&(this.internalState=i,this.state=t,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const e=this.needsUpdate();if((0,b.A)("layer.update",this,e),!e)return;const t=this.props,i=this.context,n=this.internalState,o=i.viewport,s=this._updateUniformTransition();n.propsInTransition=s,i.viewport=n.viewport||o,this.props=s;try{const e=this._getUpdateParams(),t=this.getModels();if(i.device)this.updateState(e);else try{this.updateState(e)}catch(r){}for(const i of this.props.extensions)i.updateState.call(this,e,i);this.setNeedsRedraw(),this._updateAttributes();const n=this.getModels()[0]!==t[0];this._postUpdate(e,n)}finally{i.viewport=o,this.props=t,this._clearChangeFlags(),n.needsUpdate=!1,n.resetOldProps()}}_finalize(){(0,b.A)("layer.finalize",this),this.finalizeState(this.context);for(const e of this.props.extensions)e.finalizeState.call(this,this.context,e)}_drawLayer(e){let{renderPass:t,shaderModuleProps:i=null,uniforms:n={},parameters:s={}}=e;this._updateAttributeTransition();const r=this.props,a=this.context;this.props=this.internalState.propsInTransition||r;try{i&&this.setShaderModuleProps(i);const{getPolygonOffset:e}=this.props,r=e&&e(n)||[0,0];a.device instanceof o.e&&a.device.setParametersWebGL({polygonOffset:r});for(const t of this.getModels())"webgpu"===t.device.type?t.setParameters(Object.assign({},t.parameters,s)):t.setParameters(s);if(a.device instanceof o.e)a.device.withParametersWebGL(s,(()=>{const e={renderPass:t,shaderModuleProps:i,uniforms:n,parameters:s,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}));else{const e={renderPass:t,shaderModuleProps:i,uniforms:n,parameters:s,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}}finally{this.props=r}}getChangeFlags(){var e;return null==(e=this.internalState)?void 0:e.changeFlags}setChangeFlags(e){if(!this.internalState)return;const{changeFlags:t}=this.internalState;for(const n in e)if(e[n]){let i=!1;if("dataChanged"===n){const o=e[n],s=t[n];o&&Array.isArray(s)&&(t.dataChanged=Array.isArray(o)?s.concat(o):o,i=!0)}t[n]||(t[n]=e[n],i=!0),i&&(0,b.A)("layer.changeFlag",this,n,e)}const i=Boolean(t.dataChanged||t.updateTriggersChanged||t.propsChanged||t.extensionsChanged);t.propsOrDataChanged=i,t.somethingChanged=i||t.viewportChanged||t.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(e,t){const i=(0,y.mg)(e,t);if(i.updateTriggersChanged)for(const o in i.updateTriggersChanged)i.updateTriggersChanged[o]&&this.invalidateAttribute(o);if(i.transitionsChanged)for(const o in i.transitionsChanged){var n;this.internalState.uniformTransitions.add(o,t[o],e[o],null==(n=e.transitions)?void 0:n[o])}return this.setChangeFlags(i)}validateProps(){(0,y.zo)(this.props)}updateAutoHighlight(e){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(e)}_updateAutoHighlight(e){const t={highlightedObjectColor:e.picked?e.color:null},{highlightColor:i}=this.props;e.picked&&"function"==typeof i&&(t.highlightColor=i(e)),this.setShaderModuleProps({picking:t}),this.setNeedsRedraw()}_getAttributeManager(){const e=this.context;return new r.A(e.device,{id:this.props.id,stats:e.stats,timeline:e.timeline})}_postUpdate(e,t){const{props:i,oldProps:n}=e,o=this.state.model;null!=o&&o.isInstanced&&o.setInstanceCount(this.getNumInstances());const{autoHighlight:s,highlightedObjectIndex:r,highlightColor:a}=i;if(t||n.autoHighlight!==s||n.highlightedObjectIndex!==r||n.highlightColor!==a){const e={};Array.isArray(a)&&(e.highlightColor=a),(t||n.autoHighlight!==s||r!==n.highlightedObjectIndex)&&(e.highlightedObjectColor=Number.isFinite(r)&&r>=0?this.encodePickingColor(r):null),this.setShaderModuleProps({picking:e})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(e){if(!this.internalState)return!1;let t=!1;t=t||this.internalState.needsRedraw&&this.id;const i=this.getAttributeManager(),n=!!i&&i.getNeedsRedraw(e);if(t=t||n,t)for(const o of this.props.extensions)o.onNeedsRedraw.call(this,o);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!e.clearRedrawFlags,t}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}ie.defaultProps=te,ie.layerName="Layer";const ne=ie},95958:(e,t,i)=>{"use strict";i.d(t,{VD:()=>n,YN:()=>l,fW:()=>s,jA:()=>a,r3:()=>o,uH:()=>r,vf:()=>c});const n={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},o=Symbol.for("component"),s=Symbol.for("propTypes"),r=Symbol.for("deprecatedProps"),a=Symbol.for("asyncPropDefaults"),l=Symbol.for("asyncPropOriginal"),c=Symbol.for("asyncPropResolved")},9649:(e,t,i)=>{"use strict";i.d(t,{Me:()=>a,mg:()=>s,zo:()=>o});var n=i(95958);function o(e){const t=e[n.fW];for(const i in t){const n=t[i],{validate:o}=n;if(o&&!o(e[i],n))throw new Error("Invalid prop "+i+": "+e[i])}}function s(e,t){const i=a({newProps:e,oldProps:t,propTypes:e[n.fW],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),o=function(e,t){if(null===t)return"oldProps is null, initial diff";let i=!1;const{dataComparator:n,_dataDiff:o}=e;n?n(e.data,t.data)||(i="Data comparator detected a change"):e.data!==t.data&&(i="A new data container was supplied");i&&o&&(i=o(e.data,t.data)||i);return i}(e,t);let s=!1;return o||(s=function(e,t){if(null===t)return{all:!0};if("all"in e.updateTriggers){if(d(e,t,"all"))return{all:!0}}const i={};let n=!1;for(const o in e.updateTriggers)if("all"!==o){d(e,t,o)&&(i[o]=!0,n=!0)}return!!n&&i}(e,t)),{dataChanged:o,propsChanged:i,updateTriggersChanged:s,extensionsChanged:c(e,t),transitionsChanged:r(e,t)}}function r(e,t){if(!e.transitions)return!1;const i={},o=e[n.fW];let s=!1;for(const n in e.transitions){const r=o[n],a=r&&r.type;("number"===a||"color"===a||"array"===a)&&l(e[n],t[n],r)&&(i[n]=!0,s=!0)}return!!s&&i}function a(e){let{newProps:t,oldProps:i,ignoreProps:n={},propTypes:o={},triggerName:s="props"}=e;if(i===t)return!1;if("object"!=typeof t||null===t)return s+" changed shallowly";if("object"!=typeof i||null===i)return s+" changed shallowly";for(const r of Object.keys(t))if(!(r in n)){if(!(r in i))return s+"."+r+" added";const e=l(t[r],i[r],o[r]);if(e)return s+"."+r+" "+e}for(const r of Object.keys(i))if(!(r in n)){if(!(r in t))return s+"."+r+" dropped";if(!Object.hasOwnProperty.call(t,r)){const e=l(t[r],i[r],o[r]);if(e)return s+"."+r+" "+e}}return!1}function l(e,t,i){let n=i&&i.equal;return n&&!n(e,t,i)?"changed deeply":n||(n=e&&t&&e.equals,!n||n.call(e,t))?n||t===e?null:"changed shallowly":"changed deeply"}function c(e,t){if(null===t)return!0;const i=t.extensions,{extensions:n}=e;if(n===i)return!1;if(!i||!n)return!0;if(n.length!==i.length)return!0;for(let o=0;o<n.length;o++)if(!n[o].equals(i[o]))return!0;return!1}function d(e,t,i){let n=e.updateTriggers[i];n=null==n?{}:n;let o=t.updateTriggers[i];o=null==o?{}:o;return a({oldProps:o,newProps:n,triggerName:i})}},44584:(e,t,i)=>{"use strict";i.d(t,{A:()=>o});var n=i(39883);class o extends n.A{constructor(){super(...arguments),this._lastRenderIndex=-1}render(e){var t,i,n;const[o,s]=this.device.canvasContext.getDrawingBufferSize(),r=null==(t=e.clearCanvas)||t,a=null!=(i=e.clearColor)?i:!!r&&[0,0,0,0],l=!!r&&1,c=!!r&&0,d=null!=(n=e.colorMask)?n:15,u={viewport:[0,0,o,s]};e.colorMask&&(u.colorMask=d),e.scissorRect&&(u.scissorRect=e.scissorRect);const p=this.device.beginRenderPass({framebuffer:e.target,parameters:u,clearColor:a,clearDepth:l,clearStencil:c});try{return this._drawLayers(p,e)}finally{p.end(),this.device.submit()}}_drawLayers(e,t){const{target:i,shaderModuleProps:n,viewports:o,views:s,onViewportActive:r,clearStack:a=!0}=t;t.pass=t.pass||"unknown",a&&(this._lastRenderIndex=-1);const l=[];for(const c of o){const o=s&&s[c.id];null==r||r(c);const a=this._getDrawLayerParams(c,t),d=c.subViewports||[c];for(const s of d){const r=this._drawLayersInViewport(e,{target:i,shaderModuleProps:n,viewport:s,view:o,pass:t.pass,layers:t.layers},a);l.push(r)}}return l}_getDrawLayerParams(e,t,i){let{layers:n,pass:o,isPicking:r=!1,layerFilter:a,cullRect:l,effects:c,shaderModuleProps:d}=t;void 0===i&&(i=!1);const u=[],p=s(this._lastRenderIndex+1),h={layer:n[0],viewport:e,isPicking:r,renderPass:o,cullRect:l},g={};for(let s=0;s<n.length;s++){const t=n[s],r=this._shouldDrawLayer(t,h,a,g),l={shouldDrawLayer:r};var f;if(r&&!i)l.shouldDrawLayer=!0,l.layerRenderIndex=p(t,r),l.shaderModuleProps=this._getShaderModuleProps(t,c,o,d),l.layerParameters=Object.assign({},null==(f=t.context.deck)?void 0:f.props.parameters,this.getLayerParameters(t,s,e));u[s]=l}return u}_drawLayersInViewport(e,t,i){let{layers:n,shaderModuleProps:o,pass:s,target:r,viewport:a,view:l}=t;const c=function(e,t){var i,n;let{shaderModuleProps:o,target:s,viewport:r}=t;const a=null!=(i=null==o||null==(n=o.project)?void 0:n.devicePixelRatio)?i:e.canvasContext.cssToDeviceRatio(),[,l]=e.canvasContext.getDrawingBufferSize(),c=s?s.height:l,d=r;return[d.x*a,c-(d.y+d.height)*a,d.width*a,d.height*a]}(this.device,{shaderModuleProps:o,target:r,viewport:a});if(l&&l.props.clear){const e=!0===l.props.clear?{color:!0,depth:!0}:l.props.clear;this.device.beginRenderPass({framebuffer:r,parameters:{viewport:c,scissorRect:c},clearColor:!!e.color&&[0,0,0,0],clearDepth:!!e.depth&&1}).end()}const d={totalCount:n.length,visibleCount:0,compositeCount:0,pickableCount:0};e.setParameters({viewport:c});for(let p=0;p<n.length;p++){const t=n[p],o=i[p],{shouldDrawLayer:r}=o;if(r&&t.props.pickable&&d.pickableCount++,t.isComposite&&d.compositeCount++,t.isDrawable&&o.shouldDrawLayer){const{layerRenderIndex:i,shaderModuleProps:n,layerParameters:r}=o;d.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,i),n.project&&(n.project.viewport=a),t.context.renderPass=e;try{t._drawLayer({renderPass:e,shaderModuleProps:n,uniforms:{layerIndex:i},parameters:r})}catch(u){t.raiseError(u,"drawing "+t+" to "+s)}}}return d}shouldDrawLayer(e){return!0}getShaderModuleProps(e,t,i){return null}getLayerParameters(e,t,i){return e.props.parameters}_shouldDrawLayer(e,t,i,n){if(!(e.props.visible&&this.shouldDrawLayer(e)))return!1;t.layer=e;let o=e.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(t))return!1;t.layer=o,o=o.parent}if(i){const e=t.layer.id;if(e in n||(n[e]=i(t)),!n[e])return!1}return e.activateViewport(t.viewport),!0}_getShaderModuleProps(e,t,i,n){var o;const s=this.device.canvasContext.cssToDeviceRatio(),a=(null==(o=e.internalState)?void 0:o.propsInTransition)||e.props,l={layer:a,picking:{isActive:!1},project:{viewport:e.context.viewport,devicePixelRatio:s,modelMatrix:a.modelMatrix,coordinateSystem:a.coordinateSystem,coordinateOrigin:a.coordinateOrigin,autoWrapLongitude:e.wrapLongitude}};if(t)for(const c of t)r(l,null==c.getShaderModuleProps?void 0:c.getShaderModuleProps(e,l));return r(l,this.getShaderModuleProps(e,t,l),n)}}function s(e,t){void 0===e&&(e=0),void 0===t&&(t={});const i={},n=(o,r)=>{const a=o.props._offset,l=o.id,c=o.parent&&o.parent.id;let d;if(c&&!(c in t)&&n(o.parent,!1),c in i){const e=i[c]=i[c]||s(t[c],t);d=e(o,r),i[l]=e}else Number.isFinite(a)?(d=a+(t[c]||0),i[l]=null):d=e;return r&&d>=e&&(e=d+1),t[l]=d,d};return n}function r(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(const o of i)if(o)for(const t in o)e[t]?Object.assign(e[t],o[t]):e[t]=o[t];return e}},39883:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});class n{constructor(e,t){void 0===t&&(t={id:"pass"});const{id:i}=t;this.id=i,this.device=e,this.props=Object.assign({},t)}setProps(e){Object.assign(this.props,e)}render(e){}cleanup(){}}},78218:(e,t,i)=>{"use strict";i.d(t,{A:()=>r});var n=i(44584),o=i(18120);const s={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant-alpha",blendAlphaDstFactor:"zero"};class r extends n.A{constructor(){super(...arguments),this._colorEncoderState=null}render(e){return"pickingFBO"in e?this._drawPickingBuffer(e):super.render(e)}_drawPickingBuffer(e){let{layers:t,layerFilter:i,views:n,viewports:o,onViewportActive:s,pickingFBO:r,deviceRect:{x:l,y:c,width:d,height:u},cullRect:p,effects:h,pass:g="picking",pickZ:f,shaderModuleProps:m}=e;this.pickZ=f;const v=this._resetColorEncoder(f),y=[l,c,d,u],x=super.render({target:r,layers:t,layerFilter:i,views:n,viewports:o,onViewportActive:s,cullRect:p,effects:null==h?void 0:h.filter((e=>e.useInPicking)),pass:g,isPicking:!0,shaderModuleProps:m,clearColor:[0,0,0,0],colorMask:15,scissorRect:y});this._colorEncoderState=null;return{decodePickingColor:v&&a.bind(null,v),stats:x}}shouldDrawLayer(e){const{pickable:t,operation:i}=e.props;return t&&i.includes("draw")||i.includes("terrain")||i.includes("mask")}getShaderModuleProps(e,t,i){return{picking:{isActive:1,isAttribute:this.pickZ},lighting:{enabled:!1}}}getLayerParameters(e,t,i){const n=Object.assign({},e.props.parameters),{pickable:r,operation:a}=e.props;return!this._colorEncoderState||a.includes("terrain")?n.blend=!1:r&&a.includes("draw")&&(Object.assign(n,s),n.blend=!0,n.blendColor=function(e,t,i){const{byLayer:n,byAlpha:s}=e;let r,a=n.get(t);a?(a.viewports.push(i),r=a.a):(r=n.size+1,r<=255?(a={a:r,layer:t,viewports:[i]},n.set(t,a),s[r]=a):(o.A.warn("Too many pickable layers, only picking the first 255")(),r=0));return[0,0,0,r/255]}(this._colorEncoderState,e,i)),n}_resetColorEncoder(e){return this._colorEncoderState=e?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function a(e,t){const i=e.byAlpha[t[3]];return i&&{pickedLayer:i.layer,pickedViewports:i.viewports,pickedObjectIndex:i.layer.decodePickingColor(t)}}},64458:(e,t,i)=>{"use strict";i.d(t,{A:()=>o});const n="#define SMOOTH_EDGE_RADIUS 0.5",o={name:"geometry",source:"const SMOOTH_EDGE_RADIUS: f32 = 0.5;\n\nstruct VertexGeometry {\n  position: vec4<f32>,\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  normal: vec3<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\nvar<private> geometry_: VertexGeometry = VertexGeometry(\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec2<f32>(0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0)\n);\n\nstruct FragmentGeometry {\n  uv: vec2<f32>,\n};\n\nvar<private> fragmentGeometry: FragmentGeometry;\n\nfn smoothedge(edge: f32, x: f32) -> f32 {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n",vs:n+"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",fs:n+"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"}},28756:(e,t,i)=>{"use strict";i.d(t,{A:()=>o});var n=i(49042);const o=Object.assign({},n.q,{defaultUniforms:Object.assign({},n.q.defaultUniforms,{useFloatColors:!1}),inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}}})},5600:(e,t,i)=>{"use strict";i.d(t,{R:()=>p,w:()=>u});var n=i(8961),o=i(28593),s=i(59073),r=i(39426),a=i(82859),l=i(24697);const c=[0,0,0];function d(e,t,i){void 0===i&&(i=!1);const n=t.projectPosition(e);if(i&&t instanceof s.A){const[i,o,s=0]=e,r=t.getDistanceScales([i,o]);n[2]=s*r.unitsPerMeter[2]}return n}function u(e,t){let{viewport:i,modelMatrix:o,coordinateSystem:s,coordinateOrigin:a,offsetMode:c}=t,[u,p,h=0]=e;switch(o&&([u,p,h]=r.Z0([],[u,p,h,1],o)),s){case n.rf.LNGLAT:return d([u,p,h],i,c);case n.rf.LNGLAT_OFFSETS:return d([u+a[0],p+a[1],h+(a[2]||0)],i,c);case n.rf.METER_OFFSETS:return d((0,l.dT)(a,[u,p,h]),i,c);case n.rf.CARTESIAN:default:return i.isGeospatial?[u+a[0],p+a[1],h+a[2]]:i.projectPosition([u,p,h])}}function p(e,t){const{viewport:i,coordinateSystem:s,coordinateOrigin:r,modelMatrix:l,fromCoordinateSystem:d,fromCoordinateOrigin:p}=function(e){const{viewport:t,modelMatrix:i,coordinateOrigin:o}=e;let{coordinateSystem:s,fromCoordinateSystem:r,fromCoordinateOrigin:a}=e;return s===n.rf.DEFAULT&&(s=t.isGeospatial?n.rf.LNGLAT:n.rf.CARTESIAN),void 0===r&&(r=s),void 0===a&&(a=o),{viewport:t,coordinateSystem:s,coordinateOrigin:o,modelMatrix:i,fromCoordinateSystem:r,fromCoordinateOrigin:a}}(t),{autoOffset:h=!0}=t,{geospatialOrigin:g=c,shaderCoordinateOrigin:f=c,offsetMode:m=!1}=h?(0,o.o)(i,s,r):{},v=u(e,{viewport:i,modelMatrix:l,coordinateSystem:d,coordinateOrigin:p,offsetMode:m});if(m){const e=i.projectPosition(g||f);a.jb(v,v,e)}return v}},40281:(e,t,i)=>{"use strict";i.d(t,{A:()=>d});var n=i(34938),o=i(64458),s=i(28593),r=i(8961);const a=Object.keys(r.rf).map((e=>"const COORDINATE_SYSTEM_"+e+": i32 = "+r.rf[e]+";")).join("")+"\n"+Object.keys(r.Kx).map((e=>"const PROJECTION_MODE_"+e+": i32 = "+r.Kx[e]+";")).join("")+"\n"+Object.keys(r.p5).map((e=>"const UNIT_"+e.toUpperCase()+": i32 = "+r.p5[e]+";")).join("")+'\n\nconst TILE_SIZE: f32 = 512.0;\nconst PI: f32 = 3.1415926536;\nconst WORLD_SCALE: f32 = TILE_SIZE / (PI * 2.0);\nconst ZERO_64_LOW: vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);\nconst EARTH_RADIUS: f32 = 6370972.0; // meters\nconst GLOBE_RADIUS: f32 = 256.0;\n\n// -----------------------------------------------------------------------------\n// Uniform block (converted from GLSL uniform block)\n// -----------------------------------------------------------------------------\nstruct ProjectUniforms {\n  wrapLongitude: i32,\n  coordinateSystem: i32,\n  commonUnitsPerMeter: vec3<f32>,\n  projectionMode: i32,\n  scale: f32,\n  commonUnitsPerWorldUnit: vec3<f32>,\n  commonUnitsPerWorldUnit2: vec3<f32>,\n  center: vec4<f32>,\n  modelMatrix: mat4x4<f32>,\n  viewProjectionMatrix: mat4x4<f32>,\n  viewportSize: vec2<f32>,\n  devicePixelRatio: f32,\n  focalDistance: f32,\n  cameraPosition: vec3<f32>,\n  coordinateOrigin: vec3<f32>,\n  commonOrigin: vec3<f32>,\n  pseudoMeters: i32,\n};\n\n@group(0) @binding(0)\nvar<uniform> project: ProjectUniforms;\n\n// -----------------------------------------------------------------------------\n// Geometry data\n// (In your GLSL code, "geometry" was assumed to be available globally. In WGSL,\n// you might supply this via vertex attributes or a uniform. Here we define a\n// uniform struct for demonstration.)\n// -----------------------------------------------------------------------------\n\n// Structure to carry additional geometry data used by deck.gl filters.\nstruct Geometry {\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  position: vec4<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\n// @group(0) @binding(1)\nvar<private> geometry: Geometry;\n'+'\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n// Returns an adjustment factor for commonUnitsPerMeter\nfn _project_size_at_latitude(lat: f32) -> f32 {\n  let y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\n// Overloaded version: scales a value in meters at a given latitude.\nfn _project_size_at_latitude_m(meters: f32, lat: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * _project_size_at_latitude(lat);\n}\n\n// Computes a non-linear scale factor based on geometry.\n// (Note: This function relies on "geometry" being provided.)\nfn project_size() -> f32 {\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n      project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n      project.pseudoMeters == 0) {\n    if (geometry.position.w == 0.0) {\n      return _project_size_at_latitude(geometry.worldPosition.y);\n    }\n    let y: f32 = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    let y2 = y * y;\n    let y4 = y2 * y2;\n    let y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\n// Overloads to scale offsets (meters to world units)\nfn project_size_float(meters: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * project_size();\n}\n\nfn project_size_vec2(meters: vec2<f32>) -> vec2<f32> {\n  return meters * project.commonUnitsPerMeter.xy * project_size();\n}\n\nfn project_size_vec3(meters: vec3<f32>) -> vec3<f32> {\n  return meters * project.commonUnitsPerMeter * project_size();\n}\n\nfn project_size_vec4(meters: vec4<f32>) -> vec4<f32> {\n  return vec4<f32>(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\n\n// Returns a rotation matrix aligning the z\u2011axis with the given up vector.\nfn project_get_orientation_matrix(up: vec3<f32>) -> mat3x3<f32> {\n  let uz = normalize(up);\n  let ux = select(\n    vec3<f32>(1.0, 0.0, 0.0),\n    normalize(vec3<f32>(uz.y, -uz.x, 0.0)),\n    abs(uz.z) == 1.0\n  );\n  let uy = cross(uz, ux);\n  return mat3x3<f32>(ux, uy, uz);\n}\n\n// Since WGSL does not support "out" parameters, we return a struct.\nstruct RotationResult {\n  needsRotation: bool,\n  transform: mat3x3<f32>,\n};\n\nfn project_needs_rotation(commonPosition: vec3<f32>) -> RotationResult {\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    return RotationResult(true, project_get_orientation_matrix(commonPosition));\n  } else {\n    return RotationResult(false, mat3x3<f32>());  // identity alternative if needed\n  };\n}\n\n// Projects a normal vector from the current coordinate system to world space.\nfn project_normal(vector: vec3<f32>) -> vec3<f32> {\n  let normal_modelspace = project.modelMatrix * vec4<f32>(vector, 0.0);\n  var n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\n  let rotResult = project_needs_rotation(geometry.position.xyz);\n  if (rotResult.needsRotation) {\n    n = rotResult.transform * n;\n  }\n  return n;\n}\n\n// Applies a scale offset based on y-offset (dy)\nfn project_offset_(offset: vec4<f32>) -> vec4<f32> {\n  let dy: f32 = offset.y;\n  let commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\n  return vec4<f32>(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n// Projects lng/lat coordinates to a unit tile [0,1]\nfn project_mercator_(lnglat: vec2<f32>) -> vec2<f32> {\n  var x = lnglat.x;\n  if (project.wrapLongitude != 0) {\n    x = ((x + 180.0) % 360.0) - 180.0;\n  }\n  let y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2<f32>(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// Projects lng/lat/z coordinates for a globe projection.\nfn project_globe_(lnglatz: vec3<f32>) -> vec3<f32> {\n  let lambda = radians(lnglatz.x);\n  let phi = radians(lnglatz.y);\n  let cosPhi = cos(phi);\n  let D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n  return vec3<f32>(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n// Projects positions (with an optional 64-bit low part) from the input\n// coordinate system to the common space.\nfn project_position_vec4_f64(position: vec4<f32>, position64Low: vec3<f32>) -> vec4<f32> {\n  var position_world = project.modelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug:\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_mercator_(position_world.xy),\n        _project_size_at_latitude_m(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world = vec4f(position_world.xyz + project.coordinateOrigin, position_world.w);\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\n        return vec4<f32>(\n          project_mercator_(position_world.xy) - project.commonOrigin.xy,\n          project_size_float(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n      (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n       (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n        project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world = vec4f(position_world.xyz - project.coordinateOrigin, position_world.w);\n  }\n\n  return project_offset_(position_world) +\n         project_offset_(project.modelMatrix * vec4<f32>(position64Low, 0.0));\n}\n\n// Overloaded versions for different input types.\nfn project_position_vec4_f32(position: vec4<f32>) -> vec4<f32> {\n  return project_position_vec4_f64(position, ZERO_64_LOW);\n}\n\nfn project_position_vec3_f64(position: vec3<f32>, position64Low: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nfn project_position_vec3_f32(position: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nfn project_position_vec2_f32(position: vec2<f32>) -> vec2<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\n// Transforms a common space position to clip space.\nfn project_common_position_to_clipspace_with_projection(position: vec4<f32>, viewProjectionMatrix: mat4x4<f32>, center: vec4<f32>) -> vec4<f32> {\n  return viewProjectionMatrix * position + center;\n}\n\n// Uses the project viewProjectionMatrix and center.\nfn project_common_position_to_clipspace(position: vec4<f32>) -> vec4<f32> {\n  return project_common_position_to_clipspace_with_projection(position, project.viewProjectionMatrix, project.center);\n}\n\n// Returns a clip space offset corresponding to a given number of screen pixels.\nfn project_pixel_size_to_clipspace(pixels: vec2<f32>) -> vec2<f32> {\n  let offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\n  return offset * project.focalDistance;\n}\n\nfn project_meter_size_to_pixel(meters: f32) -> f32 {\n  return project_size_float(meters) * project.scale;\n}\n\nfn project_unit_size_to_pixel(size: f32, unit: i32) -> f32 {\n  if (unit == UNIT_METERS) {\n    return project_meter_size_to_pixel(size);\n  } else if (unit == UNIT_COMMON) {\n    return size * project.scale;\n  }\n  // UNIT_PIXELS: no scaling applied.\n  return size;\n}\n\nfn project_pixel_size_float(pixels: f32) -> f32 {\n  return pixels / project.scale;\n}\n\nfn project_pixel_size_vec2(pixels: vec2<f32>) -> vec2<f32> {\n  return pixels / project.scale;\n}\n',l=Object.keys(r.rf).map((e=>"const int COORDINATE_SYSTEM_"+e+" = "+r.rf[e]+";")).join("")+"\n"+Object.keys(r.Kx).map((e=>"const int PROJECTION_MODE_"+e+" = "+r.Kx[e]+";")).join("")+"\n"+Object.keys(r.p5).map((e=>"const int UNIT_"+e.toUpperCase()+" = "+r.p5[e]+";")).join("")+"\nuniform projectUniforms {\nbool wrapLongitude;\nint coordinateSystem;\nvec3 commonUnitsPerMeter;\nint projectionMode;\nfloat scale;\nvec3 commonUnitsPerWorldUnit;\nvec3 commonUnitsPerWorldUnit2;\nvec4 center;\nmat4 modelMatrix;\nmat4 viewProjectionMatrix;\nvec2 viewportSize;\nfloat devicePixelRatio;\nfloat focalDistance;\nvec3 cameraPosition;\nvec3 coordinateOrigin;\nvec3 commonOrigin;\nbool pseudoMeters;\n} project;\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\nfloat y = clamp(lat, -89.9, 89.9);\nreturn 1.0 / cos(radians(y));\n}\nfloat project_size() {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\nproject.pseudoMeters == false) {\nif (geometry.position.w == 0.0) {\nreturn project_size_at_latitude(geometry.worldPosition.y);\n}\nfloat y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\nfloat y2 = y * y;\nfloat y4 = y2 * y2;\nfloat y6 = y4 * y2;\nreturn 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n}\nreturn 1.0;\n}\nfloat project_size_at_latitude(float meters, float lat) {\nreturn meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\nreturn meters * project.commonUnitsPerMeter.z * project_size();\n}\nvec2 project_size(vec2 meters) {\nreturn meters * project.commonUnitsPerMeter.xy * project_size();\n}\nvec3 project_size(vec3 meters) {\nreturn meters * project.commonUnitsPerMeter * project_size();\n}\nvec4 project_size(vec4 meters) {\nreturn vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\nvec3 uz = normalize(up);\nvec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\nvec3 uy = cross(uz, ux);\nreturn mat3(ux, uy, uz);\n}\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\ntransform = project_get_orientation_matrix(commonPosition);\nreturn true;\n}\nreturn false;\n}\nvec3 project_normal(vec3 vector) {\nvec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);\nvec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\nmat3 rotation;\nif (project_needs_rotation(geometry.position.xyz, rotation)) {\nn = rotation * n;\n}\nreturn n;\n}\nvec4 project_offset_(vec4 offset) {\nfloat dy = offset.y;\nvec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\nreturn vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\nfloat x = lnglat.x;\nif (project.wrapLongitude) {\nx = mod(x + 180., 360.0) - 180.;\n}\nfloat y = clamp(lnglat.y, -89.9, 89.9);\nreturn vec2(\nradians(x) + PI,\nPI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n) * WORLD_SCALE;\n}\nvec3 project_globe_(vec3 lnglatz) {\nfloat lambda = radians(lnglatz.x);\nfloat phi = radians(lnglatz.y);\nfloat cosPhi = cos(phi);\nfloat D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\nreturn vec3(\nsin(lambda) * cosPhi,\n-cos(lambda) * cosPhi,\nsin(phi)\n) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\nvec4 position_world = project.modelMatrix * position;\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_mercator_(position_world.xy),\nproject_size_at_latitude(position_world.z, position_world.y),\nposition_world.w\n);\n}\nif (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\nposition_world.xyz += project.coordinateOrigin;\n}\n}\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_globe_(position_world.xyz),\nposition_world.w\n);\n}\n}\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nif (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\nreturn vec4(\nproject_mercator_(position_world.xy) - project.commonOrigin.xy,\nproject_size(position_world.z),\nposition_world.w\n);\n}\n}\n}\nif (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n(project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n(project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\nposition_world.xyz -= project.coordinateOrigin;\n}\nreturn project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));\n}\nvec4 project_position(vec4 position) {\nreturn project_position(position, ZERO_64_LOW);\n}\nvec3 project_position(vec3 position, vec3 position64Low) {\nvec4 projected_position = project_position(vec4(position, 1.0), position64Low);\nreturn projected_position.xyz;\n}\nvec3 project_position(vec3 position) {\nvec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\nreturn projected_position.xyz;\n}\nvec2 project_position(vec2 position) {\nvec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\nreturn projected_position.xy;\n}\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\nreturn viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\nreturn project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\nvec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\nreturn offset * project.focalDistance;\n}\nfloat project_size_to_pixel(float meters) {\nreturn project_size(meters) * project.scale;\n}\nfloat project_size_to_pixel(float size, int unit) {\nif (unit == UNIT_METERS) return project_size_to_pixel(size);\nif (unit == UNIT_COMMON) return size * project.scale;\nreturn size;\n}\nfloat project_pixel_size(float pixels) {\nreturn pixels / project.scale;\n}\nvec2 project_pixel_size(vec2 pixels) {\nreturn pixels / project.scale;\n}\n",c={};const d={name:"project",dependencies:[n.i,o.A],source:a,vs:l,getUniforms:function(e){return void 0===e&&(e=c),"viewport"in e?(0,s.a)(e):{}},uniformTypes:{wrapLongitude:"f32",coordinateSystem:"i32",commonUnitsPerMeter:"vec3<f32>",projectionMode:"i32",scale:"f32",commonUnitsPerWorldUnit:"vec3<f32>",commonUnitsPerWorldUnit2:"vec3<f32>",center:"vec4<f32>",modelMatrix:"mat4x4<f32>",viewProjectionMatrix:"mat4x4<f32>",viewportSize:"vec2<f32>",devicePixelRatio:"f32",focalDistance:"f32",cameraPosition:"vec3<f32>",coordinateOrigin:"vec3<f32>",commonOrigin:"vec3<f32>",pseudoMeters:"f32"}}},28593:(e,t,i)=>{"use strict";i.d(t,{a:()=>g,o:()=>h});var n=i(39426),o=i(90218),s=i(8961),r=i(63190);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],u=[0,0,0],p=(0,r.A)((function(e){let{viewport:t,devicePixelRatio:i,coordinateSystem:r,coordinateOrigin:u}=e;const{projectionCenter:p,viewProjectionMatrix:g,originCommon:f,cameraPosCommon:m,shaderCoordinateOrigin:v,geospatialOrigin:y}=function(e,t,i){const{viewMatrixUncentered:s,projectionMatrix:r}=e;let{viewMatrix:c,viewProjectionMatrix:d}=e,u=a,p=a,g=e.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:v}=h(e,t,i);v&&(p=e.projectPosition(f||m),g=[g[0]-p[0],g[1]-p[1],g[2]-p[2]],p[3]=1,u=n.Z0([],p,d),c=s||c,d=o.lw([],r,c),d=o.lw([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:u,originCommon:p,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(t,r,u),x=t.getDistanceScales(),_=[t.width*i,t.height*i],b=n.Z0([],[0,0,-t.focalDistance,1],t.projectionMatrix)[3]||1,w={coordinateSystem:r,projectionMode:t.projectionMode,coordinateOrigin:v,commonOrigin:f.slice(0,3),center:p,pseudoMeters:Boolean(t._pseudoMeters),viewportSize:_,devicePixelRatio:i,focalDistance:b,commonUnitsPerMeter:x.unitsPerMeter,commonUnitsPerWorldUnit:x.unitsPerMeter,commonUnitsPerWorldUnit2:d,scale:t.scale,wrapLongitude:!1,viewProjectionMatrix:g,modelMatrix:c,cameraPosition:m};if(y){const e=t.getDistanceScales(y);switch(r){case s.rf.METER_OFFSETS:w.commonUnitsPerWorldUnit=e.unitsPerMeter,w.commonUnitsPerWorldUnit2=e.unitsPerMeter2;break;case s.rf.LNGLAT:case s.rf.LNGLAT_OFFSETS:t._pseudoMeters||(w.commonUnitsPerMeter=e.unitsPerMeter),w.commonUnitsPerWorldUnit=e.unitsPerDegree,w.commonUnitsPerWorldUnit2=e.unitsPerDegree2;break;case s.rf.CARTESIAN:w.commonUnitsPerWorldUnit=[1,1,e.unitsPerMeter[2]],w.commonUnitsPerWorldUnit2=[0,0,e.unitsPerMeter2[2]]}}return w}));function h(e,t,i){void 0===i&&(i=u),i.length<3&&(i=[i[0],i[1],0]);let n,o=i,r=!0;switch(n=t===s.rf.LNGLAT_OFFSETS||t===s.rf.METER_OFFSETS?i:e.isGeospatial?[Math.fround(e.longitude),Math.fround(e.latitude),0]:null,e.projectionMode){case s.Kx.WEB_MERCATOR:t!==s.rf.LNGLAT&&t!==s.rf.CARTESIAN||(n=[0,0,0],r=!1);break;case s.Kx.WEB_MERCATOR_AUTO_OFFSET:t===s.rf.LNGLAT?o=n:t===s.rf.CARTESIAN&&(o=[Math.fround(e.center[0]),Math.fround(e.center[1]),0],n=e.unprojectPosition(o),o[0]-=i[0],o[1]-=i[1],o[2]-=i[2]);break;case s.Kx.IDENTITY:o=e.position.map(Math.fround),o[2]=o[2]||0;break;case s.Kx.GLOBE:r=!1,n=null;break;default:r=!1}return{geospatialOrigin:n,shaderCoordinateOrigin:o,offsetMode:r}}function g(e){let{viewport:t,devicePixelRatio:i=1,modelMatrix:n=null,coordinateSystem:o=s.rf.DEFAULT,coordinateOrigin:r=u,autoWrapLongitude:a=!1}=e;o===s.rf.DEFAULT&&(o=t.isGeospatial?s.rf.LNGLAT:s.rf.CARTESIAN);const l=p({viewport:t,devicePixelRatio:i,coordinateSystem:o,coordinateOrigin:r});return l.wrapLongitude=a,l.modelMatrix=n||c,l}},30428:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});const n={name:"project32",dependencies:[i(40281).A],source:"// Define a structure to hold both the clip-space position and the common position.\nstruct ProjectResult {\n  clipPosition: vec4<f32>,\n  commonPosition: vec4<f32>,\n};\n\n// This function mimics the GLSL version with the 'out' parameter by returning both values.\nfn project_position_to_clipspace_and_commonspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> ProjectResult {\n  // Compute the projected position.\n  let projectedPosition: vec3<f32> = project_position_vec3_f64(position, position64Low);\n\n  // Start with the provided offset.\n  var finalOffset: vec3<f32> = offset;\n\n  // Get whether a rotation is needed and the rotation matrix.\n  let rotationResult = project_needs_rotation(projectedPosition);\n\n  // If rotation is needed, update the offset.\n  if (rotationResult.needsRotation) {\n    finalOffset = rotationResult.transform * offset;\n  }\n\n  // Compute the common position.\n  let commonPosition: vec4<f32> = vec4<f32>(projectedPosition + finalOffset, 1.0);\n\n  // Convert to clip-space.\n  let clipPosition: vec4<f32> = project_common_position_to_clipspace(commonPosition);\n\n  return ProjectResult(clipPosition, commonPosition);\n}\n\n// A convenience overload that returns only the clip-space position.\nfn project_position_to_clipspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> vec4<f32> {\n  return project_position_to_clipspace_and_commonspace(position, position64Low, offset).clipPosition;\n}\n",vs:"vec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},97394:(e,t,i)=>{"use strict";i.d(t,{A:()=>l});var n=i(51020),o=i(54901),s=i(24697);const r={bearing:0,pitch:0,position:[0,0,0]},a={speed:1.2,curve:1.414};class l extends n.A{constructor(e){void 0===e&&(e={}),super({compare:["longitude","latitude","zoom","bearing","pitch","position"],extract:["width","height","longitude","latitude","zoom","bearing","pitch","position"],required:["width","height","latitude","longitude","zoom"]}),this.opts=Object.assign({},a,e)}interpolateProps(e,t,i){const n=(0,s.rj)(e,t,i,this.opts);for(const s in r)n[s]=(0,o.Cc)(e[s]||r[s],t[s]||r[s],i);return n}getDuration(e,t){let{transitionDuration:i}=t;return"auto"===i&&(i=(0,s.v7)(e,t,this.opts)),i}}},58662:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(51020),o=i(54901);const s=["longitude","latitude","zoom","bearing","pitch"],r=["longitude","latitude","zoom"];class a extends n.A{constructor(e){void 0===e&&(e={});const t=Array.isArray(e)?e:e.transitionProps,i=Array.isArray(e)?{}:e;i.transitionProps=Array.isArray(t)?{compare:t,required:t}:t||{compare:s,required:r},super(i.transitionProps),this.opts=i}initializeProps(e,t){const i=super.initializeProps(e,t),{makeViewport:n,around:o}=this.opts;if(n&&o){const s=n(e),r=n(t),a=s.unproject(o);i.start.around=o,Object.assign(i.end,{around:r.project(a),aroundPosition:a,width:t.width,height:t.height})}return i}interpolateProps(e,t,i){const n={};for(const s of this._propsToExtract)n[s]=(0,o.Cc)(e[s]||0,t[s]||0,i);if(t.aroundPosition&&this.opts.makeViewport){const s=this.opts.makeViewport(Object.assign({},t,n));Object.assign(n,s.panByPosition(t.aroundPosition,(0,o.Cc)(e.around,t.around,i)))}return n}}},51020:(e,t,i)=>{"use strict";i.d(t,{A:()=>s});var n=i(54901),o=i(95238);class s{constructor(e){const{compare:t,extract:i,required:n}=e;this._propsToCompare=t,this._propsToExtract=i||t,this._requiredProps=n}arePropsEqual(e,t){for(const i of this._propsToCompare)if(!(i in e)||!(i in t)||!(0,n.aI)(e[i],t[i]))return!1;return!0}initializeProps(e,t){const i={},n={};for(const o of this._propsToExtract)(o in e||o in t)&&(i[o]=e[o],n[o]=t[o]);return this._checkRequiredProps(i),this._checkRequiredProps(n),{start:i,end:n}}getDuration(e,t){return t.transitionDuration}_checkRequiredProps(e){this._requiredProps&&this._requiredProps.forEach((t=>{const i=e[t];(0,o.A)(Number.isFinite(i)||Array.isArray(i),t+" is required for transition")}))}}},50948:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});class n{constructor(e){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=e}get inProgress(){return this._inProgress}start(e){var t,i;this.cancel(),this.settings=e,this._inProgress=!0,null==(t=(i=this.settings).onStart)||t.call(i,this)}end(){var e,t;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null==(e=(t=this.settings).onEnd)||e.call(t,this))}cancel(){var e,t;this._inProgress&&(null==(e=(t=this.settings).onInterrupt)||e.call(t,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var e,t;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:e,settings:t}=this;this._handle=e.addChannel({delay:e.getTime(),duration:t.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null==(e=(t=this.settings).onUpdate)||e.call(t,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},91013:(e,t,i)=>{"use strict";function n(e,t){t&&Object.entries(t).map((t=>{let[i,n]=t;i.startsWith("--")?e.style.setProperty(i,n):e.style[i]=n}))}function o(e,t){t&&Object.keys(t).map((t=>{t.startsWith("--")?e.style.removeProperty(t):e.style[t]=""}))}i.d(t,{Z:()=>n,h:()=>o})},95238:(e,t,i)=>{"use strict";function n(e,t){if(!e)throw new Error(t||"deck.gl: assertion failed.")}i.d(t,{A:()=>n})},50111:(e,t,i)=>{"use strict";function n(e,t,i){if(e===t)return!0;if(!i||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let o=0;o<e.length;o++)if(!n(e[o],t[o],i-1))return!1;return!0}if(Array.isArray(t))return!1;if("object"==typeof e&&"object"==typeof t){const o=Object.keys(e),s=Object.keys(t);if(o.length!==s.length)return!1;for(const r of o){if(!t.hasOwnProperty(r))return!1;if(!n(e[r],t[r],i-1))return!1}return!0}return!1}i.d(t,{b:()=>n})},13696:(e,t,i)=>{"use strict";function n(e,t){return void 0===t&&(t=()=>!0),Array.isArray(e)?o(e,t,[]):t(e)?[e]:[]}function o(e,t,i){let n=-1;for(;++n<e.length;){const s=e[n];Array.isArray(s)?o(s,t,i):t(s)&&i.push(s)}return i}function s(e){let{target:t,source:i,start:n=0,count:o=1}=e;const s=i.length,r=o*s;let a=0;for(let l=n;a<s;a++)t[l++]=i[a];for(;a<r;)a<r-a?(t.copyWithin(n+a,n,n+a),a*=2):(t.copyWithin(n+a,n,n+r-a),a=r);return t}i.d(t,{B:()=>n,R:()=>s})},33698:(e,t,i)=>{"use strict";i.d(t,{I:()=>a,Td:()=>r,X:()=>s});const n=[],o=[];function s(e,t,i){void 0===t&&(t=0),void 0===i&&(i=1/0);let s=n;const r={index:-1,data:e,target:[]};return e?"function"==typeof e[Symbol.iterator]?s=e:e.length>0&&(o.length=e.length,s=o):s=n,(t>0||Number.isFinite(i))&&(s=(Array.isArray(s)?s:Array.from(s)).slice(t,i),r.index=t-1),{iterable:s,objectInfo:r}}function r(e){return e&&e[Symbol.asyncIterator]}function a(e,t){const{size:i,stride:n,offset:o,startIndices:s,nested:r}=t,a=e.BYTES_PER_ELEMENT,l=n?n/a:i,c=o?o/a:0,d=Math.floor((e.length-c)/l);return(t,n)=>{let{index:o,target:a}=n;if(!s){const t=o*l+c;for(let n=0;n<i;n++)a[n]=e[t+n];return a}const u=s[o],p=s[o+1]||d;let h;if(r){h=new Array(p-u);for(let t=u;t<p;t++){const n=t*l+c;a=new Array(i);for(let t=0;t<i;t++)a[t]=e[n+t];h[t-u]=a}}else if(l===i)h=e.subarray(u*i+c,p*i+c);else{h=new e.constructor((p-u)*i);let t=0;for(let n=u;n<p;n++){const o=n*l+c;for(let n=0;n<i;n++)h[t++]=e[o+n]}}return h}}},18120:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});const n=new(i(85335).t)({id:"deck"})},87350:(e,t,i)=>{"use strict";i.d(t,{$M:()=>s,Vl:()=>a,_Z:()=>h,cT:()=>p,on:()=>l,zi:()=>r});var n=i(81052),o=i(87597);function s(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function r(e,t){const i=e%t;return i<0?t+i:i}function a(e){return[e[12],e[13],e[14]]}function l(e){return{left:d(e[3]+e[0],e[7]+e[4],e[11]+e[8],e[15]+e[12]),right:d(e[3]-e[0],e[7]-e[4],e[11]-e[8],e[15]-e[12]),bottom:d(e[3]+e[1],e[7]+e[5],e[11]+e[9],e[15]+e[13]),top:d(e[3]-e[1],e[7]-e[5],e[11]-e[9],e[15]-e[13]),near:d(e[3]+e[2],e[7]+e[6],e[11]+e[10],e[15]+e[14]),far:d(e[3]-e[2],e[7]-e[6],e[11]-e[10],e[15]-e[14])}}const c=new o.P;function d(e,t,i,n){c.set(e,t,i);const s=c.len();return{distance:n/s,normal:new o.P(-e/s,-t/s,-i/s)}}let u;function p(e,t){const{size:i=1,startIndex:o=0}=t,s=void 0!==t.endIndex?t.endIndex:e.length,r=(s-o)/i;u=n.A.allocate(u,r,{type:Float32Array,size:2*i});let a=o,l=0;for(;a<s;){for(let t=0;t<i;t++){const n=e[a++];u[l+t]=n,u[l+t+i]=(c=n)-Math.fround(c)}l+=2*i}var c;return u.subarray(0,r*i*2)}function h(e){let t=null,i=!1;for(const n of e)n&&(t?(i||(t=[[t[0][0],t[0][1]],[t[1][0],t[1][1]]],i=!0),t[0][0]=Math.min(t[0][0],n[0][0]),t[0][1]=Math.min(t[0][1],n[0][1]),t[1][0]=Math.max(t[1][0],n[1][0]),t[1][1]=Math.max(t[1][1],n[1][1])):t=n);return t}},63190:(e,t,i)=>{"use strict";function n(e,t){if(e===t)return!0;if(Array.isArray(e)){const i=e.length;if(!t||t.length!==i)return!1;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}return!1}function o(e){let t,i={};return o=>{for(const s in o)if(!n(o[s],i[s])){t=e(o),i=o;break}return t}}i.d(t,{A:()=>o})},50364:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(33698),o=i(81052),s=i(95238),r=i(26839);class a{constructor(e){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:t={}}=e;this.typedArrayManager=o.A,this.attributes={},this._attributeDefs=t,this.opts=e,this.updateGeometry(e)}updateGeometry(e){Object.assign(this.opts,e);const{data:t,buffers:i={},getGeometry:n,geometryBuffer:o,positionFormat:r,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=t,this.getGeometry=n,this.positionSize=o&&o.size||("XY"===r?2:3),this.buffers=i,this.normalize=l,o&&((0,s.A)(t.startIndices),this.getGeometry=this.getGeometryFromBuffer(o),l||(i.vertexPositions=o)),this.geometryBuffer=i.vertexPositions,Array.isArray(a))for(const s of a)this._rebuildGeometry(s);else this._rebuildGeometry()}updatePartialGeometry(e){let{startRow:t,endRow:i}=e;this._rebuildGeometry({startRow:t,endRow:i})}getGeometryFromBuffer(e){const t=e.value||e;return ArrayBuffer.isView(t)?(0,n.I)(t,{size:this.positionSize,offset:e.offset,stride:e.stride,startIndices:this.data.startIndices}):null}_allocate(e,t){const{attributes:i,buffers:n,_attributeDefs:o,typedArrayManager:s}=this;for(const r in o)if(r in n)s.release(i[r]),i[r]=null;else{const n=o[r];n.copy=t,i[r]=s.allocate(i[r],e,n)}}_forEachGeometry(e,t,i){const{data:o,getGeometry:s}=this,{iterable:r,objectInfo:a}=(0,n.X)(o,t,i);for(const n of r){a.index++;e(s?s(n,a):null,a.index)}}_rebuildGeometry(e){if(!this.data)return;let{indexStarts:t,vertexStarts:i,instanceCount:n}=this;const{data:o,geometryBuffer:s}=this,{startRow:a=0,endRow:l=1/0}=e||{},c={};if(e||(t=[0],i=[0]),this.normalize||!s)this._forEachGeometry(((e,t)=>{const n=e&&this.normalizeGeometry(e);c[t]=n,i[t+1]=i[t]+(n?this.getGeometrySize(n):0)}),a,l),n=i[i.length-1];else if(i=o.startIndices,n=i[o.length]||0,ArrayBuffer.isView(s))n=n||s.length/this.positionSize;else if(s instanceof r.h){const e=4*this.positionSize;n=n||s.byteLength/e}else if(s.buffer){const e=s.stride||4*this.positionSize;n=n||s.buffer.byteLength/e}else if(s.value){const e=s.value,t=s.stride/e.BYTES_PER_ELEMENT||this.positionSize;n=n||e.length/t}this._allocate(n,Boolean(e)),this.indexStarts=t,this.vertexStarts=i,this.instanceCount=n;const d={};this._forEachGeometry(((e,o)=>{const s=c[o]||e;d.vertexStart=i[o],d.indexStart=t[o];const r=o<i.length-1?i[o+1]:n;d.geometrySize=r-i[o],d.geometryIndex=o,this.updateGeometryAttributes(s,d)}),a,l),this.vertexCount=t[t.length-1]}}},81052:(e,t,i)=>{"use strict";i.d(t,{A:()=>n});const n=new class{constructor(e){void 0===e&&(e={}),this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(e)}setOptions(e){Object.assign(this.opts,e)}allocate(e,t,i){let{size:n=1,type:o,padding:s=0,copy:r=!1,initialize:a=!1,maxCount:l}=i;const c=o||e&&e.constructor||Float32Array,d=t*n+s;if(ArrayBuffer.isView(e)){if(d<=e.length)return e;if(d*e.BYTES_PER_ELEMENT<=e.buffer.byteLength)return new c(e.buffer,0,d)}let u=1/0;l&&(u=l*n+s);const p=this._allocate(c,d,a,u);return e&&r?p.set(e):a||p.fill(0,0,4),this._release(e),p}release(e){this._release(e)}_allocate(e,t,i,n){let o=Math.max(Math.ceil(t*this.opts.overAlloc),1);o>n&&(o=n);const s=this._pool,r=e.BYTES_PER_ELEMENT*o,a=s.findIndex((e=>e.byteLength>=r));if(a>=0){const t=new e(s.splice(a,1)[0],0,o);return i&&t.fill(0),t}return new e(o)}_release(e){if(!ArrayBuffer.isView(e))return;const t=this._pool,{buffer:i}=e,{byteLength:n}=i,o=t.findIndex((e=>e.byteLength>=n));o<0?t.push(i):(o>0||t.length<this.opts.poolSize)&&t.splice(o,0,i),t.length>this.opts.poolSize&&t.shift()}}},64792:(e,t,i)=>{"use strict";i.d(t,{A:()=>g});var n=i(31886),o=i(43976),s=i(8961),r=i(24697),a=i(82859),l=i(39426);const c=Math.PI/180,d=180/Math.PI,u=6370972,p=256;function h(){const e=4018225162502676e-20,t=Math.PI/180*p;return{unitsPerMeter:[e,e,e],unitsPerMeter2:[0,0,0],metersPerUnit:[24886.609375,24886.609375,24886.609375],unitsPerDegree:[t,t,e],unitsPerDegree2:[0,0,0],degreesPerUnit:[1/t,1/t,24886.609375]}}class g extends o.A{constructor(e){var t,i;void 0===e&&(e={});const{longitude:o=0,zoom:s=0,nearZMultiplier:a=.5,farZMultiplier:l=1,resolution:d=10}=e;let{latitude:u=0,height:p,altitude:g=1.5,fovy:f}=e;u=Math.max(Math.min(u,r.aH),-r.aH),p=p||1,f?g=(0,r.wZ)(f):f=(0,r.Os)(g);const m=1/Math.PI/Math.cos(u*Math.PI/180),v=Math.pow(2,s)*m,y=null!=(t=e.nearZ)?t:a,x=null!=(i=e.farZ)?i:(g+512*v/p)*l,_=(new n.k).lookAt({eye:[0,-g,0],up:[0,0,1]});_.rotateX(u*c),_.rotateZ(-o*c),_.scale(v/p),super(Object.assign({},e,{height:p,viewMatrix:_,longitude:o,latitude:u,zoom:s,distanceScales:h(),fovy:f,focalDistance:g,near:y,far:x})),this.scale=v,this.latitude=u,this.longitude=o,this.resolution=d}get projectionMode(){return s.Kx.GLOBE}getDistanceScales(){return this.distanceScales}getBounds(e){void 0===e&&(e={});const t={targetZ:e.z||0},i=this.unproject([0,this.height/2],t),n=this.unproject([this.width/2,0],t),o=this.unproject([this.width,this.height/2],t),s=this.unproject([this.width/2,this.height],t);return o[0]<this.longitude&&(o[0]+=360),i[0]>this.longitude&&(i[0]-=360),[Math.min(i[0],o[0],n[0],s[0]),Math.min(i[1],o[1],n[1],s[1]),Math.max(i[0],o[0],n[0],s[0]),Math.max(i[1],o[1],n[1],s[1])]}unproject(e,t){let{topLeft:i=!0,targetZ:n}=void 0===t?{}:t;const[o,s,r]=e,l=i?s:this.height-s,{pixelUnprojectionMatrix:c}=this;let d;if(Number.isFinite(r))d=f(c,[o,l,r,1]);else{const e=f(c,[o,l,-1,1]),t=f(c,[o,l,1,1]),i=((n||0)/u+1)*p,s=a.uE(a.jb([],e,t)),r=a.uE(e),h=a.uE(t),g=4*((4*r*h-(s-r-h)**2)/16)/s,m=(Math.sqrt(r-g)-Math.sqrt(Math.max(0,i*i-g)))/Math.sqrt(s);d=a.Cc([],e,t,m)}const[h,g,m]=this.unprojectPosition(d);return Number.isFinite(r)?[h,g,m]:Number.isFinite(n)?[h,g,n]:[h,g]}projectPosition(e){const[t,i,n=0]=e,o=t*c,s=i*c,r=Math.cos(s),a=(n/u+1)*p;return[Math.sin(o)*r*a,-Math.cos(o)*r*a,Math.sin(s)*a]}unprojectPosition(e){const[t,i,n]=e,o=a.Il(e),s=Math.asin(n/o);return[Math.atan2(t,-i)*d,s*d,(o/p-1)*u]}projectFlat(e){return e}unprojectFlat(e){return e}panByPosition(e,t){const i=this.unproject(t);return{longitude:e[0]-i[0]+this.longitude,latitude:e[1]-i[1]+this.latitude}}}function f(e,t){const i=l.Z0([],t,e);return l.hs(i,i,1/i[3]),i}},29467:(e,t,i)=>{"use strict";i.d(t,{A:()=>d});var n=i(43976),o=i(31886),s=i(54901),r=i(83588),a=i(24697);const l=(new o.k).lookAt({eye:[0,0,1]});function c(e){let{width:t,height:i,near:n,far:r,padding:a}=e,l=-t/2,c=t/2,d=-i/2,u=i/2;if(a){const{left:e=0,right:n=0,top:o=0,bottom:r=0}=a,p=(0,s.qE)((e+t-n)/2,0,t)-t/2,h=(0,s.qE)((o+i-r)/2,0,i)-i/2;l-=p,c-=p,d+=h,u+=h}return(new o.k).ortho({left:l,right:c,bottom:d,top:u,near:n,far:r})}class d extends n.A{constructor(e){const{width:t,height:i,near:n=.1,far:o=1e3,zoom:s=0,target:r=[0,0,0],padding:a=null,flipY:d=!0}=e,u=Array.isArray(s)?s[0]:s,p=Array.isArray(s)?s[1]:s,h=Math.min(u,p),g=Math.pow(2,h);let f;if(u!==p){const e=Math.pow(2,u),t=Math.pow(2,p);f={unitsPerMeter:[e/g,t/g,1],metersPerUnit:[g/e,g/t,1]}}super(Object.assign({},e,{longitude:void 0,position:r,viewMatrix:l.clone().scale([g,g*(d?-1:1),g]),projectionMatrix:c({width:t||1,height:i||1,padding:a,near:n,far:o}),zoom:h,distanceScales:f}))}projectFlat(e){let[t,i]=e;const{unitsPerMeter:n}=this.distanceScales;return[t*n[0],i*n[1]]}unprojectFlat(e){let[t,i]=e;const{metersPerUnit:n}=this.distanceScales;return[t*n[0],i*n[1]]}panByPosition(e,t){const i=(0,a.xJ)(t,this.pixelUnprojectionMatrix),n=this.projectFlat(e),o=r.WQ([],n,r.ze([],i)),s=r.WQ([],this.center,o);return{target:this.unprojectFlat(s)}}}},43976:(e,t,i)=>{"use strict";i.d(t,{A:()=>m});var n=i(18120),o=i(87350),s=i(31886),r=i(54901),a=i(87597),l=i(90218),c=i(24697),d=i(8961);const u=Math.PI/180,p=(0,o.$M)(),h=[0,0,0],g={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class f{constructor(e){void 0===e&&(e={}),this._frustumPlanes={},this.id=e.id||this.constructor.displayName||"viewport",this.x=e.x||0,this.y=e.y||0,this.width=e.width||1,this.height=e.height||1,this.zoom=e.zoom||0,this.padding=e.padding,this.distanceScales=e.distanceScales||g,this.focalDistance=e.focalDistance||1,this.position=e.position||h,this.modelMatrix=e.modelMatrix||null;const{longitude:t,latitude:i}=e;this.isGeospatial=Number.isFinite(i)&&Number.isFinite(t),this._initProps(e),this._initMatrices(e),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?d.Kx.WEB_MERCATOR:d.Kx.WEB_MERCATOR_AUTO_OFFSET:d.Kx.IDENTITY}equals(e){return e instanceof f&&(this===e||e.width===this.width&&e.height===this.height&&e.scale===this.scale&&(0,r.aI)(e.projectionMatrix,this.projectionMatrix)&&(0,r.aI)(e.viewMatrix,this.viewMatrix))}project(e,t){let{topLeft:i=!0}=void 0===t?{}:t;const n=this.projectPosition(e),o=(0,c.VJ)(n,this.pixelProjectionMatrix),[s,r]=o,a=i?r:this.height-r;return 2===e.length?[s,a]:[s,a,o[2]]}unproject(e,t){let{topLeft:i=!0,targetZ:n}=void 0===t?{}:t;const[o,s,r]=e,a=i?s:this.height-s,l=n&&n*this.distanceScales.unitsPerMeter[2],d=(0,c.xJ)([o,a,r],this.pixelUnprojectionMatrix,l),[u,p,h]=this.unprojectPosition(d);return Number.isFinite(r)?[u,p,h]:Number.isFinite(n)?[u,p,n]:[u,p]}projectPosition(e){const[t,i]=this.projectFlat(e);return[t,i,(e[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(e){const[t,i]=this.unprojectFlat(e);return[t,i,(e[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(e){if(this.isGeospatial){const t=(0,c.Gw)(e);return t[1]=(0,r.qE)(t[1],-318,830),t}return e}unprojectFlat(e){return this.isGeospatial?(0,c.iV)(e):e}getBounds(e){void 0===e&&(e={});const t={targetZ:e.z||0},i=this.unproject([0,0],t),n=this.unproject([this.width,0],t),o=this.unproject([0,this.height],t),s=this.unproject([this.width,this.height],t);return[Math.min(i[0],n[0],o[0],s[0]),Math.min(i[1],n[1],o[1],s[1]),Math.max(i[0],n[0],o[0],s[0]),Math.max(i[1],n[1],o[1],s[1])]}getDistanceScales(e){return e&&this.isGeospatial?(0,c.nI)({longitude:e[0],latitude:e[1],highPrecision:!0}):this.distanceScales}containsPixel(e){let{x:t,y:i,width:n=1,height:o=1}=e;return t<this.x+this.width&&this.x<t+n&&i<this.y+this.height&&this.y<i+o}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,o.on)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(e,t){return null}_initProps(e){const t=e.longitude,i=e.latitude;this.isGeospatial&&(Number.isFinite(e.zoom)||(this.zoom=(0,c.fO)({latitude:i})+Math.log2(this.focalDistance)),this.distanceScales=e.distanceScales||(0,c.nI)({latitude:i,longitude:t}));const n=Math.pow(2,this.zoom);this.scale=n;const{position:o,modelMatrix:r}=e;let l=h;if(o&&(l=r?new s.k(r).transformAsVector(o,[]):o),this.isGeospatial){const e=this.projectPosition([t,i,0]);this.center=new a.P(l).scale(this.distanceScales.unitsPerMeter).add(e)}else this.center=this.projectPosition(l)}_initMatrices(e){const{viewMatrix:t=p,projectionMatrix:i=null,orthographic:c=!1,fovyRadians:d,fovy:h=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:v=1}=e;this.viewMatrixUncentered=t,this.viewMatrix=(new s.k).multiplyRight(t).translate(new a.P(this.center).negate()),this.projectionMatrix=i||function(e){let{width:t,height:i,orthographic:n,fovyRadians:o,focalDistance:a,padding:l,near:c,far:d}=e;const u=t/i,p=n?(new s.k).orthographic({fovy:o,aspect:u,focalDistance:a,near:c,far:d}):(new s.k).perspective({fovy:o,aspect:u,near:c,far:d});if(l){const{left:e=0,right:n=0,top:o=0,bottom:s=0}=l,a=(0,r.qE)((e+t-n)/2,0,t)-t/2,c=(0,r.qE)((o+i-s)/2,0,i)-i/2;p[8]-=2*a/t,p[9]+=2*c/i}return p}({width:this.width,height:this.height,orthographic:c,fovyRadians:d||h*u,focalDistance:v,padding:m,near:g,far:f});const y=(0,o.$M)();l.lw(y,y,this.projectionMatrix),l.lw(y,y,this.viewMatrix),this.viewProjectionMatrix=y,this.viewMatrixInverse=l.B8([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,o.Vl)(this.viewMatrixInverse);const x=(0,o.$M)(),_=(0,o.$M)();l.hs(x,x,[this.width/2,-this.height/2,1]),l.Tl(x,x,[1,-1,0]),l.lw(_,x,this.viewProjectionMatrix),this.pixelProjectionMatrix=_,this.pixelUnprojectionMatrix=l.B8((0,o.$M)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||n.A.warn("Pixel project matrix not invertible")()}}f.displayName="Viewport";const m=f},59073:(e,t,i)=>{"use strict";i.d(t,{A:()=>c});var n=i(43976),o=i(24697),s=i(54901),r=i(31886),a=i(83588);class l extends n.A{constructor(e){void 0===e&&(e={});const{latitude:t=0,longitude:i=0,zoom:n=0,pitch:a=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,nearZ:u,farZ:p,orthographic:h=!1,projectionMatrix:g,repeat:f=!1,worldOffset:m=0,position:v,padding:y,legacyMeterSizes:x=!1}=e;let{width:_,height:b,altitude:w=1.5}=e;const P=Math.pow(2,n);let S;_=_||1,b=b||1;let C=null;if(g)w=g[5]/2,S=(0,o.Os)(w);else{let i;if(e.fovy?(S=e.fovy,w=(0,o.wZ)(S)):S=(0,o.Os)(w),y){const{top:e=0,bottom:t=0}=y;i=[0,(0,s.qE)((e+b-t)/2,0,b)-b/2]}C=(0,o.om)({width:_,height:b,scale:P,center:v&&[0,0,v[2]*(0,o.mY)(t)],offset:i,pitch:a,fovy:S,nearZMultiplier:c,farZMultiplier:d}),Number.isFinite(u)&&(C.near=u),Number.isFinite(p)&&(C.far=p)}let A=(0,o.rY)({height:b,pitch:a,bearing:l,scale:P,altitude:w});if(m){A=(new r.k).translate([512*m,0,0]).multiplyLeft(A)}super(Object.assign({},e,{width:_,height:b,viewMatrix:A,longitude:i,latitude:t,zoom:n},C,{fovy:S,focalDistance:w})),this.latitude=t,this.longitude=i,this.zoom=n,this.pitch=a,this.bearing=l,this.altitude=w,this.fovy=S,this.orthographic=h,this._subViewports=f?[]:null,this._pseudoMeters=x,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const e=this.getBounds(),t=Math.floor((e[0]+180)/360),i=Math.ceil((e[2]-180)/360);for(let n=t;n<=i;n++){const e=n?new l(Object.assign({},this,{worldOffset:n})):this;this._subViewports.push(e)}}return this._subViewports}projectPosition(e){if(this._pseudoMeters)return super.projectPosition(e);const[t,i]=this.projectFlat(e);return[t,i,(e[2]||0)*(0,o.mY)(e[1])]}unprojectPosition(e){if(this._pseudoMeters)return super.unprojectPosition(e);const[t,i]=this.unprojectFlat(e);return[t,i,(e[2]||0)/(0,o.mY)(i)]}addMetersToLngLat(e,t){return(0,o.dT)(e,t)}panByPosition(e,t){const i=(0,o.xJ)(t,this.pixelUnprojectionMatrix),n=this.projectFlat(e),s=a.WQ([],n,a.ze([],i)),r=a.WQ([],this.center,s),[l,c]=this.unprojectFlat(r);return{longitude:l,latitude:c}}getBounds(e){void 0===e&&(e={});const t=(0,o.gW)(this,e.z||0);return[Math.min(t[0][0],t[1][0],t[2][0],t[3][0]),Math.min(t[0][1],t[1][1],t[2][1],t[3][1]),Math.max(t[0][0],t[1][0],t[2][0],t[3][0]),Math.max(t[0][1],t[1][1],t[2][1],t[3][1])]}fitBounds(e,t){void 0===t&&(t={});const{width:i,height:n}=this,{longitude:s,latitude:r,zoom:a}=(0,o.Fe)(Object.assign({width:i,height:n,bounds:e},t));return new l({width:i,height:n,longitude:s,latitude:r,zoom:a})}}l.displayName="WebMercatorViewport";const c=l},40604:(e,t,i)=>{"use strict";i.d(t,{A:()=>x});var n=i(49398),o=i(43976),s=i(24697),r=i(5160),a=i(31886);class l extends o.A{constructor(e){const{longitude:t,latitude:i,modelMatrix:n,bearing:o=0,pitch:l=0,up:c=[0,0,1]}=e,d=new r.v({bearing:o,pitch:-90===l?1e-4:90+l}).toVector3().normalize(),u=n?new a.k(n).transformAsVector(d):d,p=Number.isFinite(i)?(0,s.fO)({latitude:i}):0,h=Math.pow(2,p),g=(new a.k).lookAt({eye:[0,0,0],center:u,up:c}).scale(h);super(Object.assign({},e,{zoom:p,viewMatrix:g})),this.latitude=i,this.longitude=t}}var c=i(27962),d=i(43221),u=i(87350),p=i(58662),h=i(87597),g=i(54901);const f=20;class m extends d.A{constructor(e){const{width:t,height:i,position:n=[0,0,0],bearing:o=0,pitch:s=0,longitude:r=null,latitude:a=null,maxPitch:l=90,minPitch:c=-90,startRotatePos:d,startBearing:u,startPitch:p,startZoomPosition:h,startPanPos:g,startPanPosition:f}=e;super({width:t,height:i,position:n,bearing:o,pitch:s,longitude:r,latitude:a,maxPitch:l,minPitch:c},{startRotatePos:d,startBearing:u,startPitch:p,startZoomPosition:h,startPanPos:g,startPanPosition:f}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;const{position:i}=this.getViewportProps();return this._getUpdatedState({startPanPos:t,startPanPosition:i})}pan(e){let{pos:t}=e;if(!t)return this;const{startPanPos:i=[0,0],startPanPosition:n=[0,0]}=this.getState(),{width:o,height:s,bearing:a,pitch:l}=this.getViewportProps(),c=500*(t[0]-i[0])/o,d=500*(t[1]-i[1])/s,u=new r.v({bearing:a,pitch:l}),p=new r.v({bearing:a,pitch:-90}),g=u.toVector3().normalize(),f=p.toVector3().cross(g).normalize();return this._getUpdatedState({position:new h.P(n).add(f.scale(c)).add(g.scale(d))})}panEnd(){return this._getUpdatedState({startPanPos:null,startPanPosition:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(e){let{pos:t,deltaAngleX:i=0,deltaAngleY:n=0}=e;const{startRotatePos:o,startBearing:s,startPitch:r}=this.getState(),{width:a,height:l}=this.getViewportProps();if(!o||void 0===s||void 0===r)return this;let c;if(t){c={bearing:s-180*((t[0]-o[0])/a),pitch:r-90*((t[1]-o[1])/l)}}else c={bearing:s-i,pitch:r-n};return this._getUpdatedState(c)}rotateEnd(){return this._getUpdatedState({startRotatePos:null,startBearing:null,startPitch:null})}zoomStart(){return this._getUpdatedState({startZoomPosition:this.getViewportProps().position})}zoom(e){let{pos:t,scale:i}=e;const n=this.getViewportProps(),o=this.getState().startZoomPosition||n.position,s=this.makeViewport(n),{projectionMatrix:r,width:a}=s,l=2*Math.atan(1/r[0])*(t[0]/a-.5),c=this.getDirection(!0);return this._move(c.rotateZ({radians:-l}),Math.log2(i)*f,o)}zoomEnd(){return this._getUpdatedState({startZoomPosition:null})}moveLeft(e){void 0===e&&(e=f);const t=this.getDirection(!0);return this._move(t.rotateZ({radians:Math.PI/2}),e)}moveRight(e){void 0===e&&(e=f);const t=this.getDirection(!0);return this._move(t.rotateZ({radians:-Math.PI/2}),e)}moveUp(e){void 0===e&&(e=f);const t=this.getDirection(!0);return this._move(t,e)}moveDown(e){void 0===e&&(e=f);const t=this.getDirection(!0);return this._move(t.negate(),e)}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-e})}zoomIn(e){return void 0===e&&(e=f),this._move(new h.P(0,0,1),e)}zoomOut(e){return void 0===e&&(e=f),this._move(new h.P(0,0,-1),e)}shortestPathFrom(e){const t=e.getViewportProps(),i=Object.assign({},this.getViewportProps()),{bearing:n,longitude:o}=i;return Math.abs(n-t.bearing)>180&&(i.bearing=n<0?n+360:n-360),null!==o&&null!==t.longitude&&Math.abs(o-t.longitude)>180&&(i.longitude=o<0?o+360:o-360),i}_move(e,t,i){void 0===i&&(i=this.getViewportProps().position);const n=e.scale(t);return this._getUpdatedState({position:new h.P(i).add(n)})}getDirection(e){void 0===e&&(e=!1);return new r.v({bearing:this.getViewportProps().bearing,pitch:e?90:90+this.getViewportProps().pitch}).toVector3().normalize()}_getUpdatedState(e){return new m(Object.assign({makeViewport:this.makeViewport},this.getViewportProps(),this.getState(),e))}applyConstraints(e){const{pitch:t,maxPitch:i,minPitch:n,longitude:o,bearing:s}=e;return e.pitch=(0,g.qE)(t,n,i),null!==o&&(o<-180||o>180)&&(e.longitude=(0,u.zi)(o+180,360)-180),(s<-180||s>180)&&(e.bearing=(0,u.zi)(s+180,360)-180),e}}class v extends c.A{constructor(){super(...arguments),this.ControllerState=m,this.transition={transitionDuration:300,transitionInterpolator:new p.A(["position","pitch","bearing"])}}}class y extends n.A{constructor(e){void 0===e&&(e={}),super(e)}getViewportType(){return l}get ControllerType(){return v}}y.displayName="FirstPersonView";const x=y},63201:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(49398),o=i(59073),s=i(67797);class r extends n.A{constructor(e){void 0===e&&(e={}),super(e)}getViewportType(){return o.A}get ControllerType(){return s.A}}r.displayName="MapView";const a=r},36876:(e,t,i)=>{"use strict";i.d(t,{A:()=>p});var n=i(49398),o=i(43976),s=i(31886),r=i(24697);const a=Math.PI/180;function l(e){let{height:t,focalDistance:i,orbitAxis:n,rotationX:o,rotationOrbit:r,zoom:l}=e;const c="Z"===n?[0,0,1]:[0,1,0],d="Z"===n?[0,-i,0]:[0,0,i],u=(new s.k).lookAt({eye:d,up:c});u.rotateX(o*a),"Z"===n?u.rotateZ(r*a):u.rotateY(r*a);const p=Math.pow(2,l)/t;return u.scale(p),u}class c extends o.A{constructor(e){const{height:t,projectionMatrix:i,fovy:n=50,orbitAxis:o="Z",target:s=[0,0,0],rotationX:a=0,rotationOrbit:c=0,zoom:d=0}=e,u=i?i[5]/2:(0,r.wZ)(n);super(Object.assign({},e,{longitude:void 0,viewMatrix:l({height:t||1,focalDistance:u,orbitAxis:o,rotationX:a,rotationOrbit:c,zoom:d}),fovy:n,focalDistance:u,position:s,zoom:d})),this.projectedCenter=this.project(this.center)}unproject(e,t){let{topLeft:i=!0}=void 0===t?{}:t;const[n,o,s=this.projectedCenter[2]]=e,a=i?o:this.height-o,[l,c,d]=(0,r.xJ)([n,a,s],this.pixelUnprojectionMatrix);return[l,c,d]}panByPosition(e,t){const i=this.project(e),n=[this.width/2+i[0]-t[0],this.height/2+i[1]-t[1],this.projectedCenter[2]];return{target:this.unproject(n)}}}var d=i(78703);class u extends n.A{constructor(e){void 0===e&&(e={}),super(e),this.props.orbitAxis=e.orbitAxis||"Z"}getViewportType(){return c}get ControllerType(){return d.A}}u.displayName="OrbitView";const p=u},83617:(e,t,i)=>{"use strict";i.d(t,{A:()=>p});var n=i(49398),o=i(29467),s=i(54901),r=i(27962),a=i(78703),l=i(58662);class c extends a.c{constructor(e){super(e),this.zoomAxis=e.zoomAxis||"all"}_calculateNewZoom(e){let{scale:t,startZoom:i}=e;const{maxZoom:n,minZoom:o}=this.getViewportProps();void 0===i&&(i=this.getViewportProps().zoom);let r=Math.log2(t);if(Array.isArray(i)){let[e,t]=i;switch(this.zoomAxis){case"X":e=(0,s.qE)(e+r,o,n);break;case"Y":t=(0,s.qE)(t+r,o,n);break;default:let i=Math.min(e+r,t+r);i<o&&(r+=o-i),i=Math.max(e+r,t+r),i>n&&(r+=n-i),e+=r,t+=r}return[e,t]}return(0,s.qE)(i+r,o,n)}}class d extends r.A{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.A(["target","zoom"])},this.dragMode="pan"}_onPanRotate(){return!1}}class u extends n.A{constructor(e){void 0===e&&(e={}),super(e)}getViewportType(){return o.A}get ControllerType(){return d}}u.displayName="OrthographicView";const p=u},49398:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});const n=/([0-9]+\.?[0-9]*)(%|px)/;function o(e){switch(typeof e){case"number":return{position:e,relative:!1};case"string":const t=n.exec(e);if(t&&t.length>=3){const e="%"===t[2],i=parseFloat(t[1]);return{position:e?i/100:i,relative:e}}default:throw new Error("Could not parse position string "+e)}}function s(e,t){return e.relative?Math.round(e.position*t):e.position}var r=i(50111);class a{constructor(e){const{id:t,x:i=0,y:n=0,width:s="100%",height:r="100%",padding:a=null}=e;this.id=t||this.constructor.displayName||"view",this.props=Object.assign({},e,{id:this.id}),this._x=o(i),this._y=o(n),this._width=o(s),this._height=o(r),this._padding=a&&{left:o(a.left||0),right:o(a.right||0),top:o(a.top||0),bottom:o(a.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(e){return this===e||this.constructor===e.constructor&&(0,r.b)(this.props,e.props,2)}makeViewport(e){let{width:t,height:i,viewState:n}=e;n=this.filterViewState(n);const o=this.getDimensions({width:t,height:i});if(!o.height||!o.width)return null;return new(this.getViewportType(n))(Object.assign({},n,this.props,o))}getViewStateId(){const{viewState:e}=this.props;return"string"==typeof e?e:(null==e?void 0:e.id)||this.id}filterViewState(e){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const t=Object.assign({},e);for(const e in this.props.viewState)"id"!==e&&(t[e]=this.props.viewState[e]);return t}return e}getDimensions(e){let{width:t,height:i}=e;const n={x:s(this._x,t),y:s(this._y,i),width:s(this._width,t),height:s(this._height,i)};return this._padding&&(n.padding={left:s(this._padding.left,t),top:s(this._padding.top,i),right:s(this._padding.right,t),bottom:s(this._padding.bottom,i)}),n}get controller(){const e=this.props.controller;return e?!0===e?{type:this.ControllerType}:"function"==typeof e?{type:e}:Object.assign({type:this.ControllerType},e):null}}},68062:(e,t,i)=>{"use strict";i.d(t,{A:()=>u});var n=i(77813);const o={clipBounds:[0,0,1,1],clipByInstance:void 0},s="\nuniform clipUniforms {\n  vec4 bounds;\n} clip;\n\nbool clip_isInBounds(vec2 position) {\n  return position.x >= clip.bounds[0] && position.y >= clip.bounds[1] && position.x < clip.bounds[2] && position.y < clip.bounds[3];\n}\n",r={name:"clip",vs:s,uniformTypes:{bounds:"vec4<f32>"}},a={"vs:#decl":"\nout float clip_isVisible;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_isVisible = float(clip_isInBounds(geometry.worldPosition.xy));\n","fs:#decl":"\nin float clip_isVisible;\n","fs:DECKGL_FILTER_COLOR":"\n  if (clip_isVisible < 0.5) discard;\n"},l={name:"clip",fs:s,uniformTypes:{bounds:"vec4<f32>"}},c={"vs:#decl":"\nout vec2 clip_commonPosition;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  clip_commonPosition = geometry.position.xy;\n","fs:#decl":"\nin vec2 clip_commonPosition;\n","fs:DECKGL_FILTER_COLOR":"\n  if (!clip_isInBounds(clip_commonPosition)) discard;\n"};class d extends n.A{getShaders(){let e="instancePositions"in this.getAttributeManager().attributes;return void 0!==this.props.clipByInstance&&(e=Boolean(this.props.clipByInstance)),this.state.clipByInstance=e,e?{modules:[r],inject:a}:{modules:[l],inject:c}}draw(){const{clipBounds:e}=this.props,t={};if(this.state.clipByInstance)t.bounds=e;else{const i=this.projectPosition([e[0],e[1],0]),n=this.projectPosition([e[2],e[3],0]);t.bounds=[Math.min(i[0],n[0]),Math.min(i[1],n[1]),Math.max(i[0],n[0]),Math.max(i[1],n[1])]}this.setShaderModuleProps({clip:t})}}d.defaultProps=o,d.extensionName="ClipExtension";const u=d},39373:(e,t,i)=>{"use strict";i.d(t,{A:()=>u});var n=i(77813);const o={name:"collision",dependencies:[i(40281).A],vs:"\nin float collisionPriorities;\n\nuniform sampler2D collision_texture;\n\nuniform collisionUniforms {\n  bool sort;\n  bool enabled;\n} collision;\n\nvec2 collision_getCoords(vec4 position) {\n  vec4 collision_clipspace = project_common_position_to_clipspace(position);\n  return (1.0 + collision_clipspace.xy / collision_clipspace.w) / 2.0;\n}\n\nfloat collision_match(vec2 tex, vec3 pickingColor) {\n  vec4 collision_pickingColor = texture(collision_texture, tex);\n  float delta = dot(abs(collision_pickingColor.rgb - pickingColor), vec3(1.0));\n  float e = 0.001;\n  return step(delta, e);\n}\n\nfloat collision_isVisible(vec2 texCoords, vec3 pickingColor) {\n  if (!collision.enabled) {\n    return 1.0;\n  }\n\n  // Visibility test, sample area of 5x5 pixels in order to fade in/out.\n  // Due to the locality, the lookups will be cached\n  // This reduces the flicker present when objects are shown/hidden\n  const int N = 2;\n  float accumulator = 0.0;\n  vec2 step = vec2(1.0 / project.viewportSize);\n\n  const float floatN = float(N);\n  vec2 delta = -floatN * step;\n  for(int i = -N; i <= N; i++) {\n    delta.x = -step.x * floatN;\n    for(int j = -N; j <= N; j++) {\n      accumulator += collision_match(texCoords + delta, pickingColor);\n      delta.x += step.x;\n    }\n    delta.y += step.y;\n  }\n\n  float W = 2.0 * floatN + 1.0;\n  return pow(accumulator / (W * W), 2.2);\n}\n",inject:{"vs:#decl":"\n  float collision_fade = 1.0;\n","vs:DECKGL_FILTER_GL_POSITION":"\n  if (collision.sort) {\n    float collisionPriority = collisionPriorities;\n    position.z = -0.001 * collisionPriority * position.w; // Support range -1000 -> 1000\n  }\n\n  if (collision.enabled) {\n    vec4 collision_common_position = project_position(vec4(geometry.worldPosition, 1.0));\n    vec2 collision_texCoords = collision_getCoords(collision_common_position);\n    collision_fade = collision_isVisible(collision_texCoords, geometry.pickingColor / 255.0);\n    if (collision_fade < 0.0001) {\n      // Position outside clip space bounds to discard\n      position = vec4(0.0, 0.0, 2.0, 1.0);\n    }\n  }\n  ","vs:DECKGL_FILTER_COLOR":"\n  color.a *= collision_fade;\n  "},getUniforms:e=>{if(!e||!("dummyCollisionMap"in e))return{};const{enabled:t,collisionFBO:i,drawToCollisionMap:n,dummyCollisionMap:o}=e;return{enabled:t&&!n,sort:Boolean(n),collision_texture:!n&&i?i.colorAttachments[0]:o}},uniformTypes:{sort:"i32",enabled:"i32"}};var s=i(54901),r=i(50111),a=i(44584);class l extends a.A{renderCollisionMap(e,t){const i=[1,1,e.width-2,e.height-2];this.render(Object.assign({},t,{clearColor:[0,0,0,0],scissorRect:i,target:e,pass:"collision"}))}getLayerParameters(e,t,i){return Object.assign({},e.props.parameters,{blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"})}getShaderModuleProps(){return{collision:{drawToCollisionMap:!0},picking:{isActive:1,isAttribute:!1},lighting:{enabled:!1}}}}class c{constructor(){this.id="collision-filter-effect",this.props=null,this.useInPicking=!0,this.order=1,this.channels={},this.collisionFBOs={}}setup(e){this.context=e;const{device:t}=e;this.dummyCollisionMap=t.createTexture({width:1,height:1}),this.collisionFilterPass=new l(t,{id:"default-collision-filter"})}preRender(e){var t;let{effects:i,layers:n,layerFilter:o,viewports:s,onViewportActive:r,views:a,isPicking:l,preRenderStats:c={}}=e;const{device:d}=this.context;if(l)return;const u=n.filter((e=>{let{props:{visible:t,collisionEnabled:i}}=e;return t&&i}));if(0===u.length)return void(this.channels={});const p=null==i?void 0:i.filter((e=>e.useInPicking&&c[e.id])),h=null==(t=c["mask-effect"])?void 0:t.didRender,g=this._groupByCollisionGroup(d,u),f=s[0],m=!this.lastViewport||!this.lastViewport.equals(f)||h;for(const v in g){const e=this.collisionFBOs[v],t=g[v],[i,n]=d.canvasContext.getPixelSize();e.resize({width:i/2,height:n/2}),this._render(t,{effects:p,layerFilter:o,onViewportActive:r,views:a,viewport:f,viewportChanged:m})}}_render(e,t){let{effects:i,layerFilter:n,onViewportActive:o,views:a,viewport:l,viewportChanged:c}=t;const{collisionGroup:d}=e,u=this.channels[d];if(!u)return;const p=c||e===u||!(0,r.b)(u.layers,e.layers,1)||e.layerBounds.some(((e,t)=>!(0,s.aI)(e,u.layerBounds[t])))||e.allLayersLoaded!==u.allLayersLoaded||e.layers.some((e=>e.props.transitions));if(this.channels[d]=e,p){this.lastViewport=l;const t=this.collisionFBOs[d];this.collisionFilterPass.renderCollisionMap(t,{pass:"collision-filter",isPicking:!0,layers:e.layers,effects:i,layerFilter:n,viewports:l?[l]:[],onViewportActive:o,views:a,shaderModuleProps:{collision:{enabled:!0,dummyCollisionMap:this.dummyCollisionMap},project:{devicePixelRatio:t.device.canvasContext.getDevicePixelRatio()/2}}})}}_groupByCollisionGroup(e,t){const i={};for(const n of t){const e=n.props.collisionGroup;let t=i[e];t||(t={collisionGroup:e,layers:[],layerBounds:[],allLayersLoaded:!0},i[e]=t),t.layers.push(n),t.layerBounds.push(n.getBounds()),n.isLoaded||(t.allLayersLoaded=!1)}for(const n of Object.keys(i))this.collisionFBOs[n]||this.createFBO(e,n),this.channels[n]||(this.channels[n]=i[n]);for(const n of Object.keys(this.collisionFBOs))i[n]||this.destroyFBO(n);return i}getShaderModuleProps(e){const{collisionGroup:t,collisionEnabled:i}=e.props,{collisionFBOs:n,dummyCollisionMap:o}=this,s=n[t];return{collision:{enabled:i&&Boolean(s),collisionFBO:s,dummyCollisionMap:o}}}cleanup(){this.dummyCollisionMap&&(this.dummyCollisionMap.delete(),this.dummyCollisionMap=void 0),this.channels={};for(const e of Object.keys(this.collisionFBOs))this.destroyFBO(e);this.collisionFBOs={},this.lastViewport=void 0}createFBO(e,t){const{width:i,height:n}=e.gl.canvas,o=e.createTexture({format:"rgba8unorm",width:i,height:n,sampler:{minFilter:"nearest",magFilter:"nearest",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),s=e.createTexture({format:"depth16unorm",width:i,height:n,mipmaps:!1});this.collisionFBOs[t]=e.createFramebuffer({id:"collision-"+t,width:i,height:n,colorAttachments:[o],depthStencilAttachment:s})}destroyFBO(e){var t,i;const n=this.collisionFBOs[e];null==(t=n.colorAttachments[0])||t.destroy(),null==(i=n.depthStencilAttachment)||i.destroy(),n.destroy(),delete this.collisionFBOs[e]}}class d extends n.A{getShaders(){return{modules:[o]}}draw(e){var t;let{shaderModuleProps:i}=e;null!=(t=i.collision)&&t.drawToCollisionMap&&(this.props=this.clone(this.props.collisionTestProps).props)}initializeState(e,t){var i;if(null===this.getAttributeManager())return;null==(i=this.context.deck)||i._addDefaultEffect(new c);this.getAttributeManager().add({collisionPriorities:{size:1,stepMode:"dynamic",accessor:"getCollisionPriority"}})}getNeedsPickingBuffer(){return this.props.collisionEnabled}}d.defaultProps={getCollisionPriority:{type:"accessor",value:0},collisionEnabled:!0,collisionGroup:{type:"string",value:"default"},collisionTestProps:{}},d.extensionName="CollisionFilterExtension";const u=d},17752:(e,t,i)=>{"use strict";i.d(t,{A:()=>c});var n=i(98587),o=i(33847),s=i(10800);const r=["updateTriggers"],a=Object.assign({},s.A.defaultProps);class l extends o.A{indexToBounds(){return null}renderLayers(){const{elevationScale:e,extruded:t,wireframe:i,filled:o,stroked:a,lineWidthUnits:l,lineWidthScale:c,lineWidthMinPixels:d,lineWidthMaxPixels:u,lineJointRounded:p,lineMiterLimit:h,lineDashJustified:g,getElevation:f,getFillColor:m,getLineColor:v,getLineWidth:y}=this.props,{updateTriggers:x,material:_,transitions:b}=this.props,w=this.getSubLayerClass("cell",s.A),P=this.indexToBounds()||{},{updateTriggers:S}=P,C=(0,n.A)(P,r);return new w({filled:o,wireframe:i,extruded:t,elevationScale:e,stroked:a,lineWidthUnits:l,lineWidthScale:c,lineWidthMinPixels:d,lineWidthMaxPixels:u,lineJointRounded:p,lineMiterLimit:h,lineDashJustified:g,material:_,transitions:b,getElevation:f,getFillColor:m,getLineColor:v,getLineWidth:y},this.getSubLayerProps({id:"cell",updateTriggers:x&&Object.assign({},S,{getElevation:x.getElevation,getFillColor:x.getFillColor,getLineColor:x.getLineColor,getLineWidth:x.getLineWidth})}),C)}}l.layerName="GeoCellLayer",l.defaultProps=a;const c=l},12882:(e,t,i)=>{"use strict";i.d(t,{A:()=>l});var n=i(17752);const o="0123456789bcdefghjkmnpqrstuvwxyz",s={};for(let c=0;c<32;c++)s[o.charAt(c)]=c;function r(e){const[t,i,n,o]=function(e){let t,i=!0,n=90,o=-90,r=180,a=-180,l=0;for(let c=0,d=e.length;c<d;c++){const d=e[c].toLowerCase();l=s[d];for(let e=4;e>=0;e--){const s=l>>e&1;i?(t=(r+a)/2,1===s?a=t:r=t):(t=(n+o)/2,1===s?o=t:n=t),i=!i}}return[o,a,n,r]}(e);return[o,n,o,t,i,t,i,n,o,n]}class a extends n.A{indexToBounds(){const{data:e,getGeohash:t}=this.props;return{data:e,_normalize:!1,positionFormat:"XY",getPolygon:(e,i)=>r(t(e,i))}}}a.layerName="GeohashLayer",a.defaultProps={getGeohash:{type:"accessor",value:e=>e.geohash}};const l=a},96538:(e,t,i)=>{"use strict";i.d(t,{A:()=>s});var n=i(3346);class o extends n.A{}o.layerName="GreatCircleLayer",o.defaultProps={getHeight:{type:"accessor",value:0},greatCircle:!0};const s=o},71490:(e,t,i)=>{"use strict";i.d(t,{A:()=>c});var n=i(62287),o=i(33698),s=i(65544),r=i(17752),a=i(533);class l extends r.A{initializeState(){s.A._checkH3Lib()}updateState(e){let{props:t,changeFlags:i}=e;if(i.dataChanged||i.updateTriggersChanged&&i.updateTriggersChanged.getHexagons){const{data:e,getHexagons:i}=t,s=[],{iterable:r,objectInfo:l}=(0,o.X)(e);for(const t of r){l.index++;const e=i(t,l),o=(0,n.Au)(e,!0);for(const i of o){for(const e of i)(0,a.yB)(e);s.push(this.getSubLayerRow({polygon:i},t,l.index))}}this.setState({polygons:s})}}indexToBounds(){const{getElevation:e,getFillColor:t,getLineColor:i,getLineWidth:n}=this.props;return{data:this.state.polygons,getPolygon:e=>e.polygon,getElevation:this.getSubLayerAccessor(e),getFillColor:this.getSubLayerAccessor(t),getLineColor:this.getSubLayerAccessor(i),getLineWidth:this.getSubLayerAccessor(n)}}}l.layerName="H3ClusterLayer",l.defaultProps={getHexagons:{type:"accessor",value:e=>e.hexagons}};const c=l},65544:(e,t,i)=>{"use strict";i.d(t,{A:()=>u});var n=i(62287),o=i(33847),s=i(33698),r=i(10800),a=i(34651),l=i(533);const c=Object.assign({},r.A.defaultProps,{highPrecision:"auto",coverage:{type:"number",min:0,max:1,value:1},centerHexagon:null,getHexagon:{type:"accessor",value:e=>e.hexagon},extruded:!0});class d extends o.A{initializeState(){d._checkH3Lib(),this.state={edgeLengthKM:0,resolution:-1}}shouldUpdateState(e){let{changeFlags:t}=e;return this._shouldUseHighPrecision()?t.propsOrDataChanged:t.somethingChanged}updateState(e){let{props:t,changeFlags:i}=e;if(!0!==t.highPrecision&&(i.dataChanged||i.updateTriggersChanged&&i.updateTriggersChanged.getHexagon)){const e=this._calculateH3DataProps();this.setState(e)}this._updateVertices(this.context.viewport)}_calculateH3DataProps(){let e=-1,t=!1,i=!1;const{iterable:o,objectInfo:r}=(0,s.X)(this.props.data);for(const s of o){r.index++;const o=this.props.getHexagon(s,r),a=(0,n.Hn)(o);if(e<0){if(e=a,!this.props.highPrecision)break}else if(e!==a){i=!0;break}if((0,n.PB)(o)){t=!0;break}}return{resolution:e,edgeLengthKM:e>=0?(0,n.a0)(e,"km"):0,hasMultipleRes:i,hasPentagon:t}}_shouldUseHighPrecision(){if("auto"===this.props.highPrecision){const{resolution:e,hasPentagon:t,hasMultipleRes:i}=this.state,{viewport:n}=this.context;return Boolean(null==n?void 0:n.resolution)||i||t||e>=0&&e<=5}return this.props.highPrecision}_updateVertices(e){if(this._shouldUseHighPrecision())return;const{resolution:t,edgeLengthKM:i,centerHex:o}=this.state;if(t<0)return;const s=this.props.centerHexagon||(0,n.Sg)(e.latitude,e.longitude,t);if(o===s)return;if(o)try{if((0,n.QO)(o,s)*i<10)return}catch(h){}const{unitsPerMeter:r}=e.distanceScales;let a=(0,l.Dn)(s);const[c,d]=(0,n._k)(s),[u,p]=e.projectFlat([d,c]);a=a.map((t=>{const i=e.projectFlat(t);return[(i[0]-u)/r[0],(i[1]-p)/r[1]]})),this.setState({centerHex:s,vertices:a})}renderLayers(){return this._shouldUseHighPrecision()?this._renderPolygonLayer():this._renderColumnLayer()}_getForwardProps(){const{elevationScale:e,material:t,coverage:i,extruded:n,wireframe:o,stroked:s,filled:r,lineWidthUnits:a,lineWidthScale:l,lineWidthMinPixels:c,lineWidthMaxPixels:d,getFillColor:u,getElevation:p,getLineColor:h,getLineWidth:g,transitions:f,updateTriggers:m}=this.props;return{elevationScale:e,extruded:n,coverage:i,wireframe:o,stroked:s,filled:r,lineWidthUnits:a,lineWidthScale:l,lineWidthMinPixels:c,lineWidthMaxPixels:d,material:t,getElevation:p,getFillColor:u,getLineColor:h,getLineWidth:g,transitions:f,updateTriggers:{getFillColor:m.getFillColor,getElevation:m.getElevation,getLineColor:m.getLineColor,getLineWidth:m.getLineWidth}}}_renderPolygonLayer(){const{data:e,getHexagon:t,updateTriggers:i,coverage:n}=this.props,o=this.getSubLayerClass("hexagon-cell-hifi",r.A),s=this._getForwardProps();return s.updateTriggers.getPolygon=function(e,t){let i;return i=null==e?t:"object"==typeof e?Object.assign({},e,{coverage:t}):{getHexagon:e,coverage:t},i}(i.getHexagon,n),new o(s,this.getSubLayerProps({id:"hexagon-cell-hifi",updateTriggers:s.updateTriggers}),{data:e,_normalize:!1,_windingOrder:"CCW",positionFormat:"XY",getPolygon:(e,i)=>{const o=t(e,i);return(0,l.jT)((0,l.Dn)(o,n))}})}_renderColumnLayer(){const{data:e,getHexagon:t,updateTriggers:i}=this.props,n=this.getSubLayerClass("hexagon-cell",a.A),o=this._getForwardProps();return o.updateTriggers.getPosition=i.getHexagon,new n(o,this.getSubLayerProps({id:"hexagon-cell",flatShading:!0,updateTriggers:o.updateTriggers}),{data:e,diskResolution:6,radius:1,vertices:this.state.vertices,getPosition:l.tk.bind(null,t)})}}d.defaultProps=c,d.layerName="H3HexagonLayer",d._checkH3Lib=()=>{};const u=d},533:(e,t,i)=>{"use strict";i.d(t,{Dn:()=>a,jT:()=>l,tk:()=>r,yB:()=>s});var n=i(62287),o=i(54901);function s(e,t){t=void 0===t?e[0][0]:t;for(const i of e){const e=i[0]-t;e>180?i[0]-=360:e<-180&&(i[0]+=360)}}function r(e,t,i){const o=e(t,i),[s,r]=(0,n._k)(o);return[r,s]}function a(e,t){void 0===t&&(t=1);const i=(0,n.u$)(e,!0);return 1!==t?function(e,t,i){const[r,a]=(0,n._k)(e),l=t.length;s(t,a);const c=t[0]===t[l-1]?l-1:l;for(let n=0;n<c;n++)t[n][0]=(0,o.Cc)(a,t[n][0],i),t[n][1]=(0,o.Cc)(r,t[n][1],i)}(e,i,t):s(i),i}function l(e){const t=new Float64Array(2*e.length);let i=0;for(const n of e)t[i++]=n[0],t[i++]=n[1];return t}},33003:(e,t,i)=>{"use strict";i.d(t,{A:()=>P});var n=i(8961),o=i(18120),s=i(84962),r=i(68062),a=i(31886),l=i(18709),c=i(55189),d=i(54901);const u={Point:p,MultiPoint:function(e,t,i){return h(e,t,i)},LineString:g,MultiLineString:function(e,t,i){return e.map((e=>g(e,t,i)))},Polygon:f,MultiPolygon:function(e,t,i){return e.map((e=>f(e,t,i)))}};function p(e,t,i){let[n,o]=e,[s,r]=t;const a=(0,d.Cc)(s[0],r[0],n),l=(0,d.Cc)(s[1],r[1],o);return i.unprojectFlat([a,l])}function h(e,t,i){return e.map((e=>p(e,t,i)))}function g(e,t,i){return h(e,t,i)}function f(e,t,i){return e.map((e=>h(e,t,i)))}const m=["points","lines","polygons"];function v(e,t,i,n){const o=e.featureIds.value;if(!o.length)return-1;let s=0,r=o[o.length-1]+1;if(n){const t=function(e,t){if(!e.__layers){const t={},{properties:i}=e;for(let e=0;e<i.length;e++){const{layerName:n}=i[e];n&&(t[n]?t[n][1]=e:t[n]=[e,e])}e.__layers=t}return e.__layers[t]}(e,n);if(!t)return-1;s=t[0],r=t[1]+1}let a=-1;if(t in e.numericProps){const n=e.numericProps[t].value.findIndex(((e,t)=>e===i&&o[t]>=s&&o[t]<r));return n>=0?e.globalFeatureIds.value[n]:-1}return t?a=y(e.properties,(e=>e[t]===i),s,r):e.fields&&(a=y(e.fields,(e=>e.id===i),s,r)),a>=0?function(e,t){if(!e.__ids){const t=[],i=e.featureIds.value,n=e.globalFeatureIds.value;for(let e=0;e<i.length;e++)t[i[e]]=n[e];e.__ids=t}return e.__ids[t]}(e,a):-1}function y(e,t,i,n){for(let o=i;o<n;o++)if(t(e[o],o))return o;return-1}var x=i(2966),_=i(79338);const b=Object.assign({},s.A.defaultProps,{data:_.cS,onDataLoad:{type:"function",value:null,optional:!0,compare:!1},uniqueIdProperty:"",highlightedFeatureId:null,loaders:[l.f],binary:!0});class w extends x.A{initializeState(){super.initializeState();const e=void 0===this.context.viewport.resolution&&this.props.binary;this.setState({binary:e,data:null,tileJSON:null,hoveredFeatureId:null,hoveredFeatureLayerName:null})}get isLoaded(){var e;return Boolean((null==(e=this.state)?void 0:e.data)&&super.isLoaded)}updateState(e){var t;let{props:i,oldProps:n,context:o,changeFlags:s}=e;s.dataChanged&&this._updateTileData(),null!=(t=this.state)&&t.data&&(super.updateState({props:i,oldProps:n,context:o,changeFlags:s}),this._setWGS84PropertyForTiles());const{highlightColor:r}=i;r!==n.highlightColor&&Array.isArray(r)&&this.setState({highlightColor:r})}async _updateTileData(){let e=this.props.data,t=null;if("string"!=typeof e||(0,_.Ar)(e))e&&"object"==typeof e&&"tilejson"in e&&(t=e);else{const{onDataLoad:n,fetch:o}=this.props;this.setState({data:null,tileJSON:null});try{t=await o(e,{propName:"data",layer:this,loaders:[]})}catch(i){this.raiseError(i,"loading TileJSON"),e=null}n&&n(t,{propName:"data",layer:this})}t&&(e=t.tiles),this.setState({data:e,tileJSON:t})}_getTilesetOptions(){const e=super._getTilesetOptions(),t=this.state.tileJSON,{minZoom:i,maxZoom:n}=this.props;return t&&(Number.isFinite(t.minzoom)&&t.minzoom>i&&(e.minZoom=t.minzoom),Number.isFinite(t.maxzoom)&&(!Number.isFinite(n)||t.maxzoom<n)&&(e.maxZoom=t.maxzoom)),e}renderLayers(){var e;return null!=(e=this.state)&&e.data?super.renderLayers():null}getTileData(e){var t;const{data:i,binary:n}=this.state,{index:o,signal:s}=e,r=(0,_.g8)(i,e);if(!r)return Promise.reject("Invalid URL");let a=this.getLoadOptions();const{fetch:l}=this.props;return a=Object.assign({},a,{mimeType:"application/x-protobuf",mvt:Object.assign({},null==(t=a)?void 0:t.mvt,{coordinates:this.context.viewport.resolution?"wgs84":"local",tileIndex:o}),gis:n?{format:"binary"}:{}}),l(r,{propName:"data",layer:this,loadOptions:a,signal:s})}renderSubLayers(e){const{x:t,y:i,z:l}=e.tile.index,c=Math.pow(2,l),d=512/c,u=-d,p=512*t/c,h=512*(1-i/c),g=(new a.k).scale([d,u,1]);e.autoHighlight=!1,this.context.viewport.resolution||(e.modelMatrix=g,e.coordinateOrigin=[p,h,0],e.coordinateSystem=n.rf.CARTESIAN,e.extensions=[...e.extensions||[],new r.A]);const f=super.renderSubLayers(e);return!this.state.binary||f instanceof s.A||o.A.warn("renderSubLayers() must return GeoJsonLayer when using binary:true")(),f}_updateAutoHighlight(e){const{uniqueIdProperty:t}=this.props,{hoveredFeatureId:i,hoveredFeatureLayerName:n}=this.state,o=e.object;let s=null,r=null;o&&(s=S(o,t),r=C(o));let{highlightColor:a}=this.props;"function"==typeof a&&(a=a(e)),i===s&&n===r||this.setState({highlightColor:a,hoveredFeatureId:s,hoveredFeatureLayerName:r})}_isWGS84(){return Boolean(this.context.viewport.resolution)}getPickingInfo(e){const t=super.getPickingInfo(e);if(this.state.binary&&-1!==t.index){const{data:i}=e.sourceLayer.props;t.object=(0,c.K)(i,{globalFeatureId:t.index})}return t.object&&!this._isWGS84()&&(t.object=M(t.object,t.tile.bbox,this.context.viewport)),t}getSubLayerPropsByTile(e){return{highlightedObjectIndex:this.getHighlightedObjectIndex(e),highlightColor:this.state.highlightColor}}getHighlightedObjectIndex(e){const{hoveredFeatureId:t,hoveredFeatureLayerName:i,binary:n}=this.state,{uniqueIdProperty:o,highlightedFeatureId:s}=this.props,r=e.content,a=A(s);if(!(A(t)||a))return-1;const l=a?s:t;return Array.isArray(r)?r.findIndex((e=>{const t=S(e,o)===l,n=a||C(e)===i;return t&&n})):r&&n?function(e,t,i,n){for(const o of m){const s=e[o]&&v(e[o],t,i,n);if(s>=0)return s}return-1}(r,o,l,a?"":i):-1}_pickObjects(e){const{deck:t,viewport:i}=this.context,n=i.width,o=i.height,s=i.x,r=i.y,a=[this.id];return t.pickObjects({x:s,y:r,width:n,height:o,layerIds:a,maxObjects:e})}getRenderedFeatures(e){void 0===e&&(e=null);const t=this._pickObjects(e),i=new Set,n=[];for(const o of t){const e=S(o.object,this.props.uniqueIdProperty);void 0===e?n.push(o.object):i.has(e)||(i.add(e),n.push(o.object))}return n}_setWGS84PropertyForTiles(){const e="dataInWGS84";this.state.tileset.selectedTiles.forEach((t=>{t.hasOwnProperty(e)||Object.defineProperty(t,e,{get:()=>{if(!t.content)return null;if(this.state.binary&&Array.isArray(t.content)&&!t.content.length)return[];const{bbox:e}=t;if(void 0===t._contentWGS84&&(0,_.NV)(e)){const i=this.state.binary?(0,c.K)(t.content):t.content;t._contentWGS84=i.map((t=>M(t,e,this.context.viewport)))}return t._contentWGS84}})}))}}w.layerName="MVTLayer",w.defaultProps=b;const P=w;function S(e,t){return e.properties&&t?e.properties[t]:"id"in e?e.id:void 0}function C(e){var t;return(null==(t=e.properties)?void 0:t.layerName)||null}function A(e){return null!=e&&""!==e}function M(e,t,i){const n=Object.assign({},e,{geometry:{type:e.geometry.type}});return Object.defineProperty(n.geometry,"coordinates",{get:()=>{const n=function(e,t,i){const n=[i.projectFlat([t.west,t.north]),i.projectFlat([t.east,t.south])];return Object.assign({},e,{coordinates:u[e.type](e.coordinates,n,i)})}(e.geometry,t,i);return n.coordinates}}),n}},37806:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(17752),o=i(24697);function s(e,t){void 0===t&&(t=1);const[i,n]=function(e,t){let i=0,n=0,o=1<<e.length;const s=o/512;for(let r=0;r<e.length;r++){o>>=1;const t=parseInt(e[r]);t%2&&(i|=o),t>1&&(n|=o)}return[[i/s,512-n/s],[(i+t)/s,512-(n+t)/s]]}(e,t),[s,r]=(0,o.iV)(i),[a,l]=(0,o.iV)(n);return[a,r,a,l,s,l,s,r,a,r]}class r extends n.A{indexToBounds(){const{data:e,extruded:t,getQuadkey:i}=this.props,n=t?.99:1;return{data:e,_normalize:!1,positionFormat:"XY",getPolygon:(e,t)=>s(i(e,t),n),updateTriggers:{getPolygon:n}}}}r.layerName="QuadkeyLayer",r.defaultProps={getQuadkey:{type:"accessor",value:e=>e.quadkey}};const a=r},65641:(e,t,i)=>{"use strict";i.d(t,{A:()=>f});var n=i(17752),o=i(81456);const s=180/Math.PI;function r(e,t,i){const n=1<<t;return[(e[0]+i[0])/n,(e[1]+i[1])/n]}function a(e){return e>=.5?1/3*(4*e*e-1):1/3*(1-4*(1-e)*(1-e))}function l(e){return[a(e[0]),a(e[1])]}function c(e,t){let[i,n]=t;switch(e){case 0:return[1,i,n];case 1:return[-i,1,n];case 2:return[-i,-n,1];case 3:return[-1,-n,-i];case 4:return[n,-1,-i];case 5:return[n,i,-1];default:throw new Error("Invalid face")}}function d(e){let[t,i,n]=e;const o=Math.atan2(n,Math.sqrt(t*t+i*i));return[Math.atan2(i,t)*s,o*s]}function u(e,t,i,n){if(0===n){1===i&&(t[0]=e-1-t[0],t[1]=e-1-t[1]);const n=t[0];t[0]=t[1],t[1]=n}}function p(e){if("string"==typeof e){if(e.indexOf("/")>0)return e;e=function(e){const t=e.padEnd(16,"0");return o.fromString(t,16)}(e)}return function(e){let t=o.fromString(e,!0,10).toString(2);for(;t.length<64;)t="0"+t;const i=t.lastIndexOf("1"),n=t.substring(0,3),s=t.substring(3,i),r=s.length/2,a=o.fromString(n,!0,2).toString(10);let l=o.fromString(s,!0,2).toString(4);for(;l.length<r;)l="0"+l;return a+"/"+l}(e.toString())}function h(e){return function(e){let{face:t,ij:i,level:n}=e;const o=[[0,0],[0,1],[1,1],[1,0],[0,0]],s=Math.max(1,Math.ceil(100*Math.pow(2,-n))),a=new Float64Array(4*s*2+2);let u=0,p=0;for(let h=0;h<4;h++){const e=o[h].slice(0),g=o[h+1],f=(g[0]-e[0])/s,m=(g[1]-e[1])/s;for(let o=0;o<s;o++){e[0]+=f,e[1]+=m;const o=d(c(t,l(r(i,n,e))));Math.abs(o[1])>89.999&&(o[0]=p);const s=o[0]-p;o[0]+=s>180?-360:s<-180?360:0,a[u++]=o[0],a[u++]=o[1],p=o[0]}}return a[u++]=a[0],a[u++]=a[1],a}(function(e){const t=e.split("/"),i=parseInt(t[0],10),n=t[1],o=n.length,s=[0,0];let r;for(let a=o-1;a>=0;a--){r=o-a;const e=n[a];let t=0,i=0;"1"===e?i=1:"2"===e?(t=1,i=1):"3"===e&&(t=1);const l=Math.pow(2,r-1);u(l,s,t,i),s[0]+=l*t,s[1]+=l*i}if(i%2==1){const e=s[0];s[0]=s[1],s[1]=e}return{face:i,ij:s,level:r}}(p(e)))}class g extends n.A{indexToBounds(){const{data:e,getS2Token:t}=this.props;return{data:e,_normalize:!1,positionFormat:"XY",getPolygon:(e,i)=>h(t(e,i))}}}g.layerName="S2Layer",g.defaultProps={getS2Token:{type:"accessor",value:e=>e.token}};const f=g},16828:(e,t,i)=>{"use strict";i.d(t,{A:()=>g});var n=i(33847),o=i(18120),s=i(20624),r=i(8961),a=i(15272),l=i(2966),c=i(79338);const d=[1],u=Object.assign({},l.A.defaultProps,{elevationData:c.cS,texture:Object.assign({},c.cS,{optional:!0}),meshMaxError:{type:"number",value:4},bounds:{type:"array",value:null,optional:!0,compare:!0},color:{type:"color",value:[255,255,255]},elevationDecoder:{type:"object",value:{rScaler:1,gScaler:0,bScaler:0,offset:0}},workerUrl:"",wireframe:!1,material:!0,loaders:[a.L]});function p(e){return Array.isArray(e)?e.join(";"):e||""}class h extends n.A{updateState(e){let{props:t,oldProps:i}=e;const n=t.elevationData!==i.elevationData;if(n){const{elevationData:e}=t,i=e&&(Array.isArray(e)||e.includes("{x}")&&e.includes("{y}"));this.setState({isTiled:i})}const s=n||t.meshMaxError!==i.meshMaxError||t.elevationDecoder!==i.elevationDecoder||t.bounds!==i.bounds;if(!this.state.isTiled&&s){const e=this.loadTerrain(t);this.setState({terrain:e})}t.workerUrl&&o.A.removed("workerUrl","loadOptions.terrain.workerUrl")()}loadTerrain(e){var t;let{elevationData:i,bounds:n,elevationDecoder:o,meshMaxError:s,signal:r}=e;if(!i)return null;let a=this.getLoadOptions();a=Object.assign({},a,{terrain:Object.assign({skirtHeight:this.state.isTiled?2*s:0},null==(t=a)?void 0:t.terrain,{bounds:n,meshMaxError:s,elevationDecoder:o})});const{fetch:l}=this.props;return l(i,{propName:"elevationData",layer:this,loadOptions:a,signal:r})}getTiledTerrainData(e){const{elevationData:t,fetch:i,texture:n,elevationDecoder:o,meshMaxError:s}=this.props,{viewport:r}=this.context,a=(0,c.g8)(t,e),l=n&&(0,c.g8)(n,e),{signal:d}=e;let u=[0,0],p=[0,0];if(r.isGeospatial){const t=e.bbox;u=r.projectFlat([t.west,t.south]),p=r.projectFlat([t.east,t.north])}else{const t=e.bbox;u=[t.left,t.bottom],p=[t.right,t.top]}const h=[u[0],u[1],p[0],p[1]],g=this.loadTerrain({elevationData:a,bounds:h,elevationDecoder:o,meshMaxError:s,signal:d}),f=l?i(l,{propName:"texture",layer:this,loaders:[],signal:d}).catch((e=>null)):Promise.resolve(null);return Promise.all([g,f])}renderSubLayers(e){const t=this.getSubLayerClass("mesh",s.A),{color:i,wireframe:n,material:o}=this.props,{data:a}=e;if(!a)return null;const[l,c]=a;return new t(e,{data:d,mesh:l,texture:c,_instanced:!1,coordinateSystem:r.rf.CARTESIAN,getPosition:e=>[0,0,0],getColor:i,wireframe:n,material:o})}onViewportLoad(e){if(!e)return;const{zRange:t}=this.state,i=e.map((e=>e.content)).filter(Boolean).map((e=>e[0].header.boundingBox.map((e=>e[2]))));if(0===i.length)return;const n=Math.min(...i.map((e=>e[0]))),o=Math.max(...i.map((e=>e[1])));(!t||n<t[0]||o>t[1])&&this.setState({zRange:[n,o]})}renderLayers(){const{color:e,material:t,elevationData:i,texture:n,wireframe:o,meshMaxError:r,elevationDecoder:a,tileSize:c,maxZoom:u,minZoom:h,extent:g,maxRequests:f,onTileLoad:m,onTileUnload:v,onTileError:y,maxCacheSize:x,maxCacheByteSize:_,refinementStrategy:b}=this.props;if(this.state.isTiled)return new l.A(this.getSubLayerProps({id:"tiles"}),{getTileData:this.getTiledTerrainData.bind(this),renderSubLayers:this.renderSubLayers.bind(this),updateTriggers:{getTileData:{elevationData:p(i),texture:p(n),meshMaxError:r,elevationDecoder:a}},onViewportLoad:this.onViewportLoad.bind(this),zRange:this.state.zRange||null,tileSize:c,maxZoom:u,minZoom:h,extent:g,maxRequests:f,onTileLoad:m,onTileUnload:v,onTileError:y,maxCacheSize:x,maxCacheByteSize:_,refinementStrategy:b});if(!i)return null;return new(this.getSubLayerClass("mesh",s.A))(this.getSubLayerProps({id:"mesh"}),{data:d,mesh:this.state.terrain,texture:n,_instanced:!1,getPosition:e=>[0,0,0],getColor:e,material:t,wireframe:o})}}h.defaultProps=u,h.layerName="TerrainLayer";const g=h},43594:(e,t,i)=>{"use strict";i.d(t,{A:()=>A});var n=i(25337),o=i(33847),s=i(18120),r=i(8961),a=i(84348),l=i(49954),c=i(98587),d=i(83420),u=i(23951),p=i(71904),h=i(20624);const g="uniform meshUniforms {\n  bool pickFeatureIds;\n} mesh;\n",f={name:"mesh",vs:g,fs:g,uniformTypes:{pickFeatureIds:"f32"}},m=["camera"];class v extends h.A{getShaders(){const e=super.getShaders();return e.modules.push(u.s,f),Object.assign({},e,{vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec4 uvRegions;\nin vec3 featureIdsPickingColors;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvec2 applyUVRegion(vec2 uv) {\n#ifdef HAS_UV_REGIONS\nreturn fract(uv) * (uvRegions.zw - uvRegions.xy) + uvRegions.xy;\n#else\nreturn uv;\n#endif\n}\nvoid main(void) {\nvec2 uv = applyUVRegion(texCoords);\ngeometry.uv = uv;\nif (mesh.pickFeatureIds) {\ngeometry.pickingColor = featureIdsPickingColors;\n} else {\ngeometry.pickingColor = instancePickingColors;\n}\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvTexCoord = uv;\ncameraPosition = project.cameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nvec3 pos = (instanceModelMatrix * positions) * simpleMesh.sizeScale;\nvec3 projectedPosition = project_position(positions);\nposition_commonspace = vec4(projectedPosition, 1.0);\ngl_Position = project_common_position_to_clipspace(position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef MODULE_PBRMATERIAL\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = uv;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform sampler2D sampler;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\n#ifdef MODULE_PBRMATERIAL\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\nfragColor.a *= layer.opacity;\n#else\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (simpleMesh.flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = simpleMesh.hasTexture ? texture(sampler, vTexCoord) : vColor;\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * layer.opacity);\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"})}initializeState(){const{featureIds:e}=this.props;super.initializeState();const t=this.getAttributeManager();e&&t.add({featureIdsPickingColors:{type:"uint8",size:3,noAlloc:!0,update:this.calculateFeatureIdsPickingColors}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e;t.pbrMaterial!==i.pbrMaterial&&this.updatePbrMaterialUniforms(t.pbrMaterial)}draw(e){const{featureIds:t}=this.props,{model:i}=this.state;if(!i)return;const n={pickFeatureIds:Boolean(t)},o={camera:i.uniforms.cameraPosition};i.shaderInputs.setProps({pbrProjection:o,mesh:n}),super.draw(e)}getModel(e){const{id:t}=this.props,i=this.parseMaterial(this.props.pbrMaterial,e);this.setState({parsedPBRMaterial:i});const n=this.getShaders();!function(e){const t=e.positions||e.POSITION,i=t.value.length/t.size;e.COLOR_0||e.colors||(e.colors={size:4,value:new Uint8Array(4*i).fill(255),normalized:!0})}(e.attributes);return new p.K(this.context.device,Object.assign({},this.getShaders(),{id:t,geometry:e,bufferLayout:this.getAttributeManager().getBufferLayouts(),defines:Object.assign({},n.defines,null==i?void 0:i.defines,{HAS_UV_REGIONS:e.attributes.uvRegions?1:0}),parameters:null==i?void 0:i.parameters,isInstanced:!0}))}updatePbrMaterialUniforms(e){const{model:t}=this.state;if(t){const{mesh:i}=this.props,n=this.parseMaterial(e,i);this.setState({parsedPBRMaterial:n});const{pbr_baseColorSampler:o}=n.bindings,{emptyTexture:s}=this.state,r={sampler:o||s,hasTexture:Boolean(o)},a=Object.assign({},n.bindings,n.uniforms),l=(0,c.A)(a,m);t.shaderInputs.setProps({simpleMesh:r,pbrMaterial:l})}}parseMaterial(e,t){const i=Boolean(e.pbrMetallicRoughness&&e.pbrMetallicRoughness.baseColorTexture);return(0,d.l)(this.context.device,Object.assign({unlit:i},e),{NORMAL:t.attributes.normals,TEXCOORD_0:t.attributes.texCoords},{pbrDebug:!1,lights:!0,useTangents:!1})}calculateFeatureIdsPickingColors(e){const t=this.props.featureIds,i=new Uint8ClampedArray(t.length*e.size),n=[];for(let o=0;o<t.length;o++)this.encodePickingColor(t[o],n),i[3*o]=n[0],i[3*o+1]=n[1],i[3*o+2]=n[2];e.value=i}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.parsedPBRMaterial)||t.generatedTextures.forEach((e=>e.destroy())),this.setState({parsedPBRMaterial:null})}}v.layerName="MeshLayer",v.defaultProps={pbrMaterial:{type:"object",value:null},featureIds:{type:"array",value:null,optional:!0}};const y=v;var x=i(327),_=i(67410),b=i(4999),w=i(20633);const P=[0],S={getPointColor:{type:"accessor",value:[0,0,0,255]},pointSize:1,data:"",loader:w.i,onTilesetLoad:{type:"function",value:e=>{}},onTileLoad:{type:"function",value:e=>{}},onTileUnload:{type:"function",value:e=>{}},onTileError:{type:"function",value:(e,t,i)=>{}},_getMeshColor:{type:"function",value:e=>[255,255,255]}};class C extends o.A{initializeState(){"onTileLoadFail"in this.props&&s.A.removed("onTileLoadFail","onTileError")(),this.state={layerMap:{},tileset3d:null,activeViewports:{},lastUpdatedViewports:null}}get isLoaded(){var e;return Boolean((null==(e=this.state)||null==(e=e.tileset3d)?void 0:e.isLoaded())&&super.isLoaded)}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){let{props:t,oldProps:i,changeFlags:n}=e;if(t.data&&t.data!==i.data&&this._loadTileset(t.data),n.viewportChanged){const{activeViewports:e}=this.state;Object.keys(e).length&&(this._updateTileset(e),this.state.lastUpdatedViewports=e,this.state.activeViewports={})}if(n.propsChanged){const{layerMap:e}=this.state;for(const t in e)e[t].needsUpdate=!0}}activateViewport(e){const{activeViewports:t,lastUpdatedViewports:i}=this.state;this.internalState.viewport=e,t[e.id]=e;const n=null==i?void 0:i[e.id];n&&e.equals(n)||(this.setChangeFlags({viewportChanged:!0}),this.setNeedsUpdate())}getPickingInfo(e){let{info:t,sourceLayer:i}=e;const n=i&&i.props.tile;return t.picked&&(t.object=n),t.sourceTile=n,t}filterSubLayer(e){let{layer:t,viewport:i}=e;const{tile:n}=t.props,{id:o}=i;return n.selected&&n.viewportIds.includes(o)}_updateAutoHighlight(e){const t=e.sourceTile,i=this.state.layerMap[null==t?void 0:t.id];i&&i.layer&&i.layer.updateAutoHighlight(e)}async _loadTileset(e){const{loadOptions:t={}}=this.props,i=this.props.loader||this.props.loaders,n=Array.isArray(i)?i[0]:i,o={loadOptions:Object.assign({},t)};let s=e;if(n.preload){const i=await n.preload(e,t);i.url&&(s=i.url),i.headers&&(o.loadOptions.fetch=Object.assign({},o.loadOptions.fetch,{headers:i.headers})),Object.assign(o,i)}const r=await(0,x.H)(s,n,o.loadOptions),a=new _.Q(r,Object.assign({onTileLoad:this._onTileLoad.bind(this),onTileUnload:this._onTileUnload.bind(this),onTileError:this.props.onTileError},o));this.setState({tileset3d:a,layerMap:{}}),this._updateTileset(this.state.activeViewports),this.props.onTilesetLoad(a)}_onTileLoad(e){const{lastUpdatedViewports:t}=this.state;this.props.onTileLoad(e),this._updateTileset(t),this.setNeedsUpdate()}_onTileUnload(e){delete this.state.layerMap[e.id],this.props.onTileUnload(e)}_updateTileset(e){if(!e)return;const{tileset3d:t}=this.state,{timeline:i}=this.context,n=Object.keys(e).length;i&&n&&t&&t.selectTiles(Object.values(e)).then((e=>{this.state.frameNumber!==e&&this.setState({frameNumber:e})}))}_getSubLayer(e,t){if(!e.content)return null;switch(e.type){case b.WH.POINTCLOUD:return this._makePointCloudLayer(e,t);case b.WH.SCENEGRAPH:return this._make3DModelLayer(e);case b.WH.MESH:return this._makeSimpleMeshLayer(e,t);default:throw new Error("Tile3DLayer: Failed to render layer of type "+e.content.type)}}_makePointCloudLayer(e,t){const{attributes:i,pointCount:n,constantRGBA:o,cartographicOrigin:s,modelMatrix:l}=e.content,{positions:c,normals:d,colors:u}=i;if(!c)return null;const p=t&&t.props.data||{header:{vertexCount:n},attributes:{POSITION:c,NORMAL:d,COLOR_0:u}},{pointSize:h,getPointColor:g}=this.props;return new(this.getSubLayerClass("pointcloud",a.A))({pointSize:h},this.getSubLayerProps({id:"pointcloud"}),{id:this.id+"-pointcloud-"+e.id,tile:e,data:p,coordinateSystem:r.rf.METER_OFFSETS,coordinateOrigin:s,modelMatrix:l,getColor:o||g,_offset:0})}_make3DModelLayer(e){const{gltf:t,instances:i,cartographicOrigin:n,modelMatrix:o}=e.content;return new(this.getSubLayerClass("scenegraph",l.A))({_lighting:"pbr"},this.getSubLayerProps({id:"scenegraph"}),{id:this.id+"-scenegraph-"+e.id,tile:e,data:i||P,scenegraph:t,coordinateSystem:r.rf.METER_OFFSETS,coordinateOrigin:n,modelMatrix:o,getTransformMatrix:e=>e.modelMatrix,getPosition:[0,0,0],_offset:0})}_makeSimpleMeshLayer(e,t){const i=e.content,{attributes:o,indices:s,modelMatrix:a,cartographicOrigin:l,coordinateSystem:c=r.rf.METER_OFFSETS,material:d,featureIds:u}=i,{_getMeshColor:p}=this.props,h=t&&t.props.mesh||new n.V({topology:"triangle-list",attributes:M(o),indices:s});return new(this.getSubLayerClass("mesh",y))(this.getSubLayerProps({id:"mesh"}),{id:this.id+"-mesh-"+e.id,tile:e,mesh:h,data:P,getColor:p(e),pbrMaterial:d,modelMatrix:a,coordinateOrigin:l,coordinateSystem:c,featureIds:u,_offset:0})}renderLayers(){const{tileset3d:e,layerMap:t}=this.state;return e?e.tiles.map((e=>{const i=t[e.id]=t[e.id]||{tile:e};let{layer:n}=i;return e.selected&&(n?i.needsUpdate&&(n=this._getSubLayer(e,n),i.needsUpdate=!1):n=this._getSubLayer(e)),i.layer=n,n})).filter(Boolean):null}}C.defaultProps=S,C.layerName="Tile3DLayer";const A=C;function M(e){const t={};return t.positions=Object.assign({},e.positions,{value:new Float32Array(e.positions.value)}),e.normals&&(t.normals=e.normals),e.texCoords&&(t.texCoords=e.texCoords),e.colors&&(t.colors=e.colors),e.uvRegions&&(t.uvRegions=e.uvRegions),t}},2966:(e,t,i)=>{"use strict";i.d(t,{A:()=>d});var n=i(33847),o=i(13696),s=i(84962),r=i(24460),a=i(79338);const l={TilesetClass:r.TL,data:{type:"data",value:[]},dataComparator:a.cS.equal,renderSubLayers:{type:"function",value:e=>new s.A(e)},getTileData:{type:"function",optional:!0,value:null},onViewportLoad:{type:"function",optional:!0,value:null},onTileLoad:{type:"function",value:e=>{}},onTileUnload:{type:"function",value:e=>{}},onTileError:{type:"function",value:e=>console.error(e)},extent:{type:"array",optional:!0,value:null,compare:!0},tileSize:512,maxZoom:null,minZoom:0,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:r.UK,zRange:null,maxRequests:6,debounceTime:0,zoomOffset:0};class c extends n.A{initializeState(){this.state={tileset:null,isLoaded:!1}}finalizeState(){var e;null==(e=this.state)||null==(e=e.tileset)||e.finalize()}get isLoaded(){var e;return Boolean(null==(e=this.state)||null==(e=e.tileset)||null==(e=e.selectedTiles)?void 0:e.every((e=>e.isLoaded&&e.layers&&e.layers.every((e=>e.isLoaded)))))}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){let{changeFlags:t}=e,{tileset:i}=this.state;const n=t.propsOrDataChanged||t.updateTriggersChanged,o=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getTileData);i?n&&(i.setOptions(this._getTilesetOptions()),o?i.reloadAll():i.tiles.forEach((e=>{e.layers=null}))):(i=new this.props.TilesetClass(this._getTilesetOptions()),this.setState({tileset:i})),this._updateTileset()}_getTilesetOptions(){const{tileSize:e,maxCacheSize:t,maxCacheByteSize:i,refinementStrategy:n,extent:o,maxZoom:s,minZoom:r,maxRequests:a,debounceTime:l,zoomOffset:c}=this.props;return{maxCacheSize:t,maxCacheByteSize:i,maxZoom:s,minZoom:r,tileSize:e,refinementStrategy:n,extent:o,maxRequests:a,debounceTime:l,zoomOffset:c,getTileData:this.getTileData.bind(this),onTileLoad:this._onTileLoad.bind(this),onTileError:this._onTileError.bind(this),onTileUnload:this._onTileUnload.bind(this)}}_updateTileset(){const e=this.state.tileset,{zRange:t,modelMatrix:i}=this.props,n=e.update(this.context.viewport,{zRange:t,modelMatrix:i}),{isLoaded:o}=e,s=this.state.isLoaded!==o,r=this.state.frameNumber!==n;o&&(s||r)&&this._onViewportLoad(),r&&this.setState({frameNumber:n}),this.state.isLoaded=o}_onViewportLoad(){const{tileset:e}=this.state,{onViewportLoad:t}=this.props;t&&t(e.selectedTiles)}_onTileLoad(e){this.props.onTileLoad(e),e.layers=null,this.setNeedsUpdate()}_onTileError(e,t){this.props.onTileError(e),t.layers=null,this.setNeedsUpdate()}_onTileUnload(e){this.props.onTileUnload(e)}getTileData(e){const{data:t,getTileData:i,fetch:n}=this.props,{signal:o}=e;return e.url="string"==typeof t||Array.isArray(t)?(0,a.g8)(t,e):null,i?i(e):n&&e.url?n(e.url,{propName:"data",layer:this,signal:o}):null}renderSubLayers(e){return this.props.renderSubLayers(e)}getSubLayerPropsByTile(e){return null}getPickingInfo(e){const t=e.sourceLayer,i=t.props.tile,n=e.info;return n.picked&&(n.tile=i),n.sourceTile=i,n.sourceTileSubLayer=t,n}_updateAutoHighlight(e){e.sourceTileSubLayer.updateAutoHighlight(e)}renderLayers(){return this.state.tileset.tiles.map((e=>{const t=this.getSubLayerPropsByTile(e);if(e.isLoaded||e.content)if(e.layers)t&&e.layers[0]&&Object.keys(t).some((i=>e.layers[0].props[i]!==t[i]))&&(e.layers=e.layers.map((e=>e.clone(t))));else{const i=this.renderSubLayers(Object.assign({},this.props,this.getSubLayerProps({id:e.id,updateTriggers:this.props.updateTriggers}),{data:e.content,_offset:0,tile:e}));e.layers=(0,o.B)(i,Boolean).map((i=>i.clone(Object.assign({tile:e},t))))}else;return e.layers}))}filterSubLayer(e){let{layer:t,cullRect:i}=e;const{tile:n}=t.props;return this.state.tileset.isTileVisible(n,i)}}c.defaultProps=l,c.layerName="TileLayer";const d=c},7576:(e,t,i)=>{"use strict";i.d(t,{I:()=>n});class n{constructor(e){this.index=e,this.isVisible=!1,this.isSelected=!1,this.parent=null,this.children=[],this.content=null,this._loader=void 0,this._abortController=null,this._loaderId=0,this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1}get bbox(){return this._bbox}set bbox(e){this._bbox||(this._bbox=e,this.boundingBox="west"in e?[[e.west,e.south],[e.east,e.north]]:[[e.left,e.top],[e.right,e.bottom]])}get data(){return this.isLoading&&this._loader?this._loader.then((()=>this.data)):this.content}get isLoaded(){return this._isLoaded&&!this._needsReload}get isLoading(){return Boolean(this._loader)&&!this._isCancelled}get needsReload(){return this._needsReload||this._isCancelled}get byteLength(){const e=this.content?this.content.byteLength:0;return Number.isFinite(e)||console.error("byteLength not defined in tile data"),e}async _loadData(e){let{getData:t,requestScheduler:i,onLoad:n,onError:o}=e;const{index:s,id:r,bbox:a,userData:l,zoom:c}=this,d=this._loaderId;this._abortController=new AbortController;const{signal:u}=this._abortController,p=await i.scheduleRequest(this,(e=>e.isSelected?1:-1));if(!p)return void(this._isCancelled=!0);if(this._isCancelled)return void p.done();let h,g=null;try{g=await t({index:s,id:r,bbox:a,userData:l,zoom:c,signal:u})}catch(f){h=f||!0}finally{p.done()}d===this._loaderId&&(this._loader=void 0,this.content=g,!this._isCancelled||g?(this._isLoaded=!0,this._isCancelled=!1,h?o(h,this):n(this)):this._isLoaded=!1)}loadData(e){return this._isLoaded=!1,this._isCancelled=!1,this._needsReload=!1,this._loaderId++,this._loader=this._loadData(e),this._loader}setNeedsReload(){this.isLoading&&(this.abort(),this._loader=void 0),this._needsReload=!0}abort(){var e;this.isLoaded||(this._isCancelled=!0,null==(e=this._abortController)||e.abort())}}},24460:(e,t,i)=>{"use strict";i.d(t,{UK:()=>u,TL:()=>g});var n=i(78331),o=i(31886),s=i(54901),r=i(7576),a=i(79338);function l(e,t){if(e===t)return!0;if(Array.isArray(e)){const i=e.length;if(!t||t.length!==i)return!1;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}return!1}const c="never",d="no-overlap",u="best-available",p={[u]:function(e){for(const t of e)t.state=0;for(const t of e)t.isSelected&&!f(t)&&m(t);for(const t of e)t.isVisible=Boolean(2&t.state)},[d]:function(e){for(const i of e)i.state=0;for(const i of e)i.isSelected&&f(i);const t=Array.from(e).sort(((e,t)=>e.zoom-t.zoom));for(const i of t)if(i.isVisible=Boolean(2&i.state),i.children&&(i.isVisible||1&i.state))for(const e of i.children)e.state=1;else i.isSelected&&m(i)},[c]:()=>{}},h={extent:null,tileSize:512,maxZoom:null,minZoom:null,maxCacheSize:null,maxCacheByteSize:null,refinementStrategy:"best-available",zRange:null,maxRequests:6,debounceTime:0,zoomOffset:0,onTileLoad:()=>{},onTileUnload:()=>{},onTileError:()=>{}};class g{constructor(e){this._getCullBounds=function(e){let t,i={};return n=>{for(const o in n)if(!l(n[o],i[o])){t=e(n),i=n;break}return t}}(a.ws),this.opts=Object.assign({},h,e),this.setOptions(this.opts),this.onTileLoad=e=>{var t,i;null==(t=(i=this.opts).onTileLoad)||t.call(i,e),null!==this.opts.maxCacheByteSize&&(this._cacheByteSize+=e.byteLength,this._resizeCache())},this._requestScheduler=new n.A({throttleRequests:this.opts.maxRequests>0||this.opts.debounceTime>0,maxRequests:this.opts.maxRequests,debounceTime:this.opts.debounceTime}),this._cache=new Map,this._tiles=[],this._dirty=!1,this._cacheByteSize=0,this._viewport=null,this._zRange=null,this._selectedTiles=null,this._frameNumber=0,this._modelMatrix=new o.k,this._modelMatrixInverse=new o.k}get tiles(){return this._tiles}get selectedTiles(){return this._selectedTiles}get isLoaded(){return null!==this._selectedTiles&&this._selectedTiles.every((e=>e.isLoaded))}get needsReload(){return null!==this._selectedTiles&&this._selectedTiles.some((e=>e.needsReload))}setOptions(e){Object.assign(this.opts,e),Number.isFinite(e.maxZoom)&&(this._maxZoom=Math.floor(e.maxZoom)),Number.isFinite(e.minZoom)&&(this._minZoom=Math.ceil(e.minZoom))}finalize(){for(const e of this._cache.values())e.isLoading&&e.abort();this._cache.clear(),this._tiles=[],this._selectedTiles=null}reloadAll(){for(const e of this._cache.keys()){const t=this._cache.get(e);this._selectedTiles&&this._selectedTiles.includes(t)?t.setNeedsReload():this._cache.delete(e)}}update(e,t){let{zRange:i,modelMatrix:n}=void 0===t?{zRange:null,modelMatrix:null}:t;const r=n?new o.k(n):new o.k,a=!r.equals(this._modelMatrix);if(this._viewport&&e.equals(this._viewport)&&(0,s.aI)(this._zRange,i)&&!a)this.needsReload&&(this._selectedTiles=this._selectedTiles.map((e=>this._getTile(e.index,!0))));else{a&&(this._modelMatrixInverse=r.clone().invert(),this._modelMatrix=r),this._viewport=e,this._zRange=i;const t=this.getTileIndices({viewport:e,maxZoom:this._maxZoom,minZoom:this._minZoom,zRange:i,modelMatrix:this._modelMatrix,modelMatrixInverse:this._modelMatrixInverse});this._selectedTiles=t.map((e=>this._getTile(e,!0))),this._dirty&&this._rebuildTree()}const l=this.updateTileStates();return this._pruneRequests(),this._dirty&&this._resizeCache(),l&&this._frameNumber++,this._frameNumber}isTileVisible(e,t){if(!e.isVisible)return!1;if(t&&this._viewport){const i=this._getCullBounds({viewport:this._viewport,z:this._zRange,cullRect:t}),{bbox:n}=e;for(const[e,t,o,s]of i){let i;if("west"in n)i=n.west<o&&n.east>e&&n.south<s&&n.north>t;else{const r=Math.min(n.top,n.bottom),a=Math.max(n.top,n.bottom);i=n.left<o&&n.right>e&&r<s&&a>t}if(i)return!0}return!1}return!0}getTileIndices(e){let{viewport:t,maxZoom:i,minZoom:n,zRange:o,modelMatrix:s,modelMatrixInverse:r}=e;const{tileSize:l,extent:c,zoomOffset:d}=this.opts;return(0,a.Om)({viewport:t,maxZoom:i,minZoom:n,zRange:o,tileSize:l,extent:c,modelMatrix:s,modelMatrixInverse:r,zoomOffset:d})}getTileId(e){return e.x+"-"+e.y+"-"+e.z}getTileZoom(e){return e.z}getTileMetadata(e){const{tileSize:t}=this.opts;return{bbox:(0,a.bR)(this._viewport,e.x,e.y,e.z,t)}}getParentIndex(e){return{x:Math.floor(e.x/2),y:Math.floor(e.y/2),z:e.z-1}}updateTileStates(){const e=this.opts.refinementStrategy||u,t=new Array(this._cache.size);let i=0;for(const n of this._cache.values())t[i++]=n.isVisible,n.isSelected=!1,n.isVisible=!1;for(const n of this._selectedTiles)n.isSelected=!0,n.isVisible=!0;("function"==typeof e?e:p[e])(Array.from(this._cache.values())),i=0;for(const n of this._cache.values())if(t[i++]!==n.isVisible)return!0;return!1}_pruneRequests(){const{maxRequests:e=0}=this.opts,t=[];let i=0;for(const n of this._cache.values())n.isLoading&&(i++,n.isSelected||n.isVisible||t.push(n));for(;e>0&&i>e&&t.length>0;){t.shift().abort(),i--}}_rebuildTree(){const{_cache:e}=this;for(const t of e.values())t.parent=null,t.children&&(t.children.length=0);for(const t of e.values()){const e=this._getNearestAncestor(t);t.parent=e,null!=e&&e.children&&e.children.push(t)}}_resizeCache(){var e,t;const{_cache:i,opts:n}=this,o=null!=(e=n.maxCacheSize)?e:null!==n.maxCacheByteSize?1/0:5*this.selectedTiles.length,s=null!=(t=n.maxCacheByteSize)?t:1/0;if(i.size>o||this._cacheByteSize>s){for(const[e,t]of i){var r,a;if(!t.isVisible&&!t.isSelected)this._cacheByteSize-=null!==n.maxCacheByteSize?t.byteLength:0,i.delete(e),null==(r=(a=this.opts).onTileUnload)||r.call(a,t);if(i.size<=o&&this._cacheByteSize<=s)break}this._rebuildTree(),this._dirty=!0}this._dirty&&(this._tiles=Array.from(this._cache.values()).sort(((e,t)=>e.zoom-t.zoom)),this._dirty=!1)}_getTile(e,t){const i=this.getTileId(e);let n=this._cache.get(i),o=!1;return!n&&t?(n=new r.I(e),Object.assign(n,this.getTileMetadata(n.index)),Object.assign(n,{id:i,zoom:this.getTileZoom(n.index)}),o=!0,this._cache.set(i,n),this._dirty=!0):n&&n.needsReload&&(o=!0),n&&o&&n.loadData({getData:this.opts.getTileData,requestScheduler:this._requestScheduler,onLoad:this.onTileLoad,onError:this.opts.onTileError}),n}_getNearestAncestor(e){const{_minZoom:t=0}=this;let i=e.index;for(;this.getTileZoom(i)>t;){i=this.getParentIndex(i);const e=this._getTile(i);if(e)return e}return null}}function f(e){let t=e;for(;t;){if(t.isLoaded||t.content)return t.state|=2,!0;t=t.parent}return!1}function m(e){for(const t of e.children)t.isLoaded||t.content?t.state|=2:m(t)}},79338:(e,t,i)=>{"use strict";i.d(t,{ws:()=>y,Om:()=>C,g8:()=>v,NV:()=>M,Ar:()=>A,uY:()=>b,bR:()=>P,cS:()=>f});var n=i(64792),o=i(59073),s=i(67733),r=i(24697);const a=512,l=3,c=[[.5,.5],[0,0],[0,1],[1,0],[1,1]],d=c.concat([[0,.5],[.5,0],[1,.5],[.5,1]]),u=d.concat([[.25,.5],[.75,.5]]);class p{constructor(e,t,i){this.x=e,this.y=t,this.z=i}get children(){if(!this._children){const e=2*this.x,t=2*this.y,i=this.z+1;this._children=[new p(e,t,i),new p(e,t+1,i),new p(e+1,t,i),new p(e+1,t+1,i)]}return this._children}update(e){const{viewport:t,cullingVolume:i,elevationBounds:n,minZ:o,maxZ:s,bounds:r,offset:a,project:l}=e,c=this.getBoundingVolume(n,a,l);if(r&&!this.insideBounds(r))return!1;if(i.computeVisibility(c)<0)return!1;if(!this.childVisible){let{z:e}=this;if(e<s&&e>=o){const i=c.distanceTo(t.cameraPosition)*t.scale/t.height;e+=Math.floor(Math.log2(i))}if(e>=s)return this.selected=!0,!0}this.selected=!1,this.childVisible=!0;for(const d of this.children)d.update(e);return!0}getSelected(e){if(void 0===e&&(e=[]),this.selected&&e.push(this),this._children)for(const t of this._children)t.getSelected(e);return e}insideBounds(e){let[t,i,n,o]=e;const s=Math.pow(2,this.z),r=a/s;return this.x*r<n&&this.y*r<o&&(this.x+1)*r>t&&(this.y+1)*r>i}getBoundingVolume(e,t,i){if(i){const t=this.z<1?u:this.z<2?d:c,n=[];for(const o of t){const t=b(this.x+o[0],this.y+o[1],this.z);t[2]=e[0],n.push(i(t)),e[0]!==e[1]&&(t[2]=e[1],n.push(i(t)))}return(0,s.ZZ)(n)}const n=Math.pow(2,this.z),o=a/n,r=this.x*o+t*a,l=a-(this.y+1)*o;return new s.dO([r,l,e[0]],[r+o,l+o,e[1]])}}const h=512,g=[-1/0,-1/0,1/0,1/0],f={type:"object",value:null,validate:(e,t)=>t.optional&&null===e||"string"==typeof e||Array.isArray(e)&&e.every((e=>"string"==typeof e)),equal:(e,t)=>{if(e===t)return!0;if(!Array.isArray(e)||!Array.isArray(t))return!1;const i=e.length;if(i!==t.length)return!1;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}};function m(e,t){const i=[t.transformAsPoint([e[0],e[1]]),t.transformAsPoint([e[2],e[1]]),t.transformAsPoint([e[0],e[3]]),t.transformAsPoint([e[2],e[3]])];return[Math.min(...i.map((e=>e[0]))),Math.min(...i.map((e=>e[1]))),Math.max(...i.map((e=>e[0]))),Math.max(...i.map((e=>e[1])))]}function v(e,t){if(!e||!e.length)return null;const{index:i,id:n}=t;if(Array.isArray(e)){e=e[(o=n,Math.abs(o.split("").reduce(((e,t)=>(e<<5)-e+t.charCodeAt(0)|0),0))%e.length)]}var o;let s=e;for(const r of Object.keys(i)){const e=new RegExp("{"+r+"}","g");s=s.replace(e,String(i[r]))}return Number.isInteger(i.y)&&Number.isInteger(i.z)&&(s=s.replace(/\{-y\}/g,String(Math.pow(2,i.z)-i.y-1))),s}function y(e){let{viewport:t,z:i,cullRect:n}=e;return(t.subViewports||[t]).map((e=>x(e,i||0,n)))}function x(e,t,i){if(!Array.isArray(t)){const n=i.x-e.x,o=i.y-e.y,{width:s,height:r}=i,a={targetZ:t},l=e.unproject([n,o],a),c=e.unproject([n+s,o],a),d=e.unproject([n,o+r],a),u=e.unproject([n+s,o+r],a);return[Math.min(l[0],c[0],d[0],u[0]),Math.min(l[1],c[1],d[1],u[1]),Math.max(l[0],c[0],d[0],u[0]),Math.max(l[1],c[1],d[1],u[1])]}const n=x(e,t[0],i),o=x(e,t[1],i);return[Math.min(n[0],o[0]),Math.min(n[1],o[1]),Math.max(n[2],o[2]),Math.max(n[3],o[3])]}function _(e,t){return Math.pow(2,e)*h/t}function b(e,t,i){const n=_(i,h),o=e/n*360-180,s=Math.PI-2*Math.PI*t/n;return[o,180/Math.PI*Math.atan(.5*(Math.exp(s)-Math.exp(-s)))]}function w(e,t,i,n){const o=_(i,n);return[e/o*h,t/o*h]}function P(e,t,i,n,o){if(void 0===o&&(o=h),e.isGeospatial){const[e,o]=b(t,i,n),[s,r]=b(t+1,i+1,n);return{west:e,north:o,east:s,south:r}}const[s,r]=w(t,i,n,o),[a,l]=w(t+1,i+1,n,o);return{left:s,top:r,right:a,bottom:l}}function S(e,t,i,n,o){const s=function(e,t,i){let n;if(t&&2===t.length){const[i,o]=t,s=e.getBounds({z:i}),r=e.getBounds({z:o});n=[Math.min(s[0],r[0]),Math.min(s[1],r[1]),Math.max(s[2],r[2]),Math.max(s[3],r[3])]}else n=e.getBounds();return e.isGeospatial?[Math.max(n[0],i[0]),Math.max(n[1],i[1]),Math.min(n[2],i[2]),Math.min(n[3],i[3])]:[Math.max(Math.min(n[0],i[2]),i[0]),Math.max(Math.min(n[1],i[3]),i[1]),Math.min(Math.max(n[2],i[0]),i[2]),Math.min(Math.max(n[3],i[1]),i[3])]}(e,null,n),r=_(t,i),[a,l,c,d]=function(e,t,i){if(i)return m(e,i).map((e=>e*t/h));return e.map((e=>e*t/h))}(s,r,o),u=[];for(let p=Math.floor(a);p<c;p++)for(let e=Math.floor(l);e<d;e++)u.push({x:p,y:e,z:t});return u}function C(e){let{viewport:t,maxZoom:i,minZoom:c,zRange:d,extent:u,tileSize:f=h,modelMatrix:v,modelMatrixInverse:y,zoomOffset:x=0}=e,_=t.isGeospatial?Math.round(t.zoom+Math.log2(h/f))+x:Math.ceil(t.zoom)+x;if("number"==typeof c&&Number.isFinite(c)&&_<c){if(!u)return[];_=c}"number"==typeof i&&Number.isFinite(i)&&_>i&&(_=i);let b=u;return v&&y&&u&&!t.isGeospatial&&(b=m(u,v)),t.isGeospatial?function(e,t,i,c){const d=e instanceof n.A&&e.resolution?e.projectPosition:null,u=Object.values(e.getFrustumPlanes()).map((e=>{let{normal:t,distance:i}=e;return new s.Zc(t.clone().negate(),i)})),h=new s.R2(u),g=e.distanceScales.unitsPerMeter[2],f=i&&i[0]*g||0,m=i&&i[1]*g||0,v=e instanceof o.A&&e.pitch<=60?t:0;if(c){const[e,t,i,n]=c,o=(0,r.Gw)([e,n]),s=(0,r.Gw)([i,t]);c=[o[0],a-o[1],s[0],a-s[1]]}const y=new p(0,0,0),x={viewport:e,project:d,cullingVolume:h,elevationBounds:[f,m],minZ:v,maxZ:t,bounds:c,offset:0};if(y.update(x),e instanceof o.A&&e.subViewports&&e.subViewports.length>1){for(x.offset=-1;y.update(x)&&!(--x.offset<-l););for(x.offset=1;y.update(x)&&!(++x.offset>l););}return y.getSelected()}(t,_,d,u):S(t,_,f,b||g,y)}function A(e){return/(?=.*{z})(?=.*{x})(?=.*({y}|{-y}))/.test(e)}function M(e){return Number.isFinite(e.west)&&Number.isFinite(e.north)&&Number.isFinite(e.east)&&Number.isFinite(e.south)}},13644:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(21410);const o="uniform tripsUniforms {\n  bool fadeTrail;\n  float trailLength;\n  float currentTime;\n} trips;\n",s={name:"trips",vs:o,fs:o,uniformTypes:{fadeTrail:"f32",trailLength:"f32",currentTime:"f32"}};class r extends n.A{getShaders(){const e=super.getShaders();return e.inject={"vs:#decl":"in float instanceTimestamps;\nin float instanceNextTimestamps;\nout float vTime;\n","vs:#main-end":"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n","fs:#decl":"in float vTime;\n","fs:#main-start":"if(vTime > trips.currentTime || (trips.fadeTrail && (vTime < trips.currentTime - trips.trailLength))) {\n  discard;\n}\n","fs:DECKGL_FILTER_COLOR":"if(trips.fadeTrail) {\n  color.a *= 1.0 - (trips.currentTime - vTime) / trips.trailLength;\n}\n"},e.modules=[...e.modules,s],e}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({timestamps:{size:1,accessor:"getTimestamps",shaderAttributes:{instanceTimestamps:{vertexOffset:0},instanceNextTimestamps:{vertexOffset:1}}}})}draw(e){const{fadeTrail:t,trailLength:i,currentTime:n}=this.props,o={fadeTrail:t,trailLength:i,currentTime:n};this.state.model.shaderInputs.setProps({trips:o}),super.draw(e)}}r.layerName="TripsLayer",r.defaultProps={fadeTrail:!0,trailLength:{type:"number",value:120,min:0},currentTime:{type:"number",value:0,min:0},getTimestamps:{type:"accessor",value:e=>e.timestamps}};const a=r},89497:(e,t,i)=>{"use strict";i.d(t,{T:()=>h});var n=i(33847),o=i(50111),s=i(8961),r=i(48956),a=i(43932),l=i(37086),c=i(24697);const d=6378137*Math.PI;function u(e){const t=(0,c.Gw)(e);return t[0]=(t[0]/256-1)*d,t[1]=(t[1]/256-1)*d,t}const p={id:"imagery-layer",data:"",serviceType:"auto",srs:"auto",layers:{type:"array",compare:!0,value:[]},onMetadataLoad:{type:"function",value:()=>{}},onMetadataLoadError:{type:"function",value:console.error},onImageLoadStart:{type:"function",value:()=>{}},onImageLoad:{type:"function",value:()=>{}},onImageLoadError:{type:"function",compare:!1,value:(e,t)=>console.error(t,e)}};class h extends n.A{get isLoaded(){var e;return 0===(null==(e=this.state)?void 0:e.loadCounter)&&super.isLoaded}shouldUpdateState(){return!0}initializeState(){this.state._nextRequestId=0,this.state.lastRequestId=-1,this.state.loadCounter=0}updateState(e){let{changeFlags:t,props:i,oldProps:n}=e;const{viewport:s}=this.context;t.dataChanged||i.serviceType!==n.serviceType?(this.state.imageSource=this._createImageSource(i),this._loadMetadata(),this.debounce((()=>this.loadImage(s,"image source changed")),0)):(0,o.b)(i.layers,n.layers,1)?t.viewportChanged&&this.debounce((()=>this.loadImage(s,"viewport changed"))):this.debounce((()=>this.loadImage(s,"layers changed")),0)}finalizeState(){}renderLayers(){const{bounds:e,image:t,lastRequestParameters:i}=this.state;return t&&new r.A(Object.assign({},this.getSubLayerProps({id:"bitmap"}),{_imageCoordinateSystem:"EPSG:4326"===i.srs?s.rf.LNGLAT:s.rf.CARTESIAN,bounds:e,image:t}))}async getFeatureInfoText(e,t){const{lastRequestParameters:i}=this.state;if(i){var n,o;return await(null==(n=(o=this.state.imageSource).getFeatureInfoText)?void 0:n.call(o,Object.assign({},i,{query_layers:i.layers,x:e,y:t,info_format:"application/vnd.ogc.gml"})))}return""}_createImageSource(e){if(e.data instanceof a.b)return e.data;if("string"==typeof e.data)return(0,l.Z)({url:e.data,loadOptions:e.loadOptions,type:e.serviceType});throw new Error("invalid image source in props.data")}async _loadMetadata(){const{imageSource:e}=this.state;try{this.state.loadCounter++;const i=await e.getMetadata();var t;if(this.state.imageSource===e)null==(t=this.getCurrentLayer())||t.props.onMetadataLoad(i)}catch(n){var i;null==(i=this.getCurrentLayer())||i.props.onMetadataLoadError(n)}finally{this.state.loadCounter--}}async loadImage(e,t){const{layers:i,serviceType:n}=this.props;if("wms"===n&&0===i.length)return;const o=e.getBounds(),{width:s,height:r}=e,a=this.getRequestId();let{srs:l}=this.props;"auto"===l&&(l=e.resolution?"EPSG:4326":"EPSG:3857");const c={width:s,height:r,boundingBox:[[o[0],o[1]],[o[2],o[3]]],layers:i,crs:l};if("EPSG:3857"===l){const e=u([o[0],o[1]]),t=u([o[2],o[3]]);c.boundingBox=[e,t]}try{this.state.loadCounter++,this.props.onImageLoadStart(a);const e=await this.state.imageSource.getImage(c);var d;if(this.state.lastRequestId<a)null==(d=this.getCurrentLayer())||d.props.onImageLoad(a),this.setState({image:e,bounds:o,lastRequestParameters:c,lastRequestId:a})}catch(h){var p;this.raiseError(h,"Load image"),null==(p=this.getCurrentLayer())||p.props.onImageLoadError(a,h)}finally{this.state.loadCounter--}}getRequestId(){return this.state._nextRequestId++}debounce(e,t){void 0===t&&(t=500),clearTimeout(this.state._timeoutId),this.state._timeoutId=setTimeout((()=>e()),t)}}h.layerName="WMSLayer",h.defaultProps=p},41698:(e,t,i)=>{"use strict";i.d(t,{A:()=>P});var n=i(98587),o=i(20698),s=i(23399),r=i(63201),a=i(77422),l=i(31886);const c=85.05113;function d(e,t,i,n){if(i){if(i.userData._googleMap===e)return i;p(i)}const o={click:null,rightclick:null,dblclick:null,mousemove:null,mouseout:null},a=new s.A(Object.assign({},n,{useDevicePixels:!!n.interleaved||n.useDevicePixels,style:n.interleaved?null:{pointerEvents:"none"},parent:u(t,n.style),views:new r.A({repeat:!0}),initialViewState:{longitude:0,latitude:0,zoom:1},controller:!1}));for(const s in o)o[s]=e.addListener(s,(e=>v(a,s,e)));return a.userData._googleMap=e,a.userData._eventListeners=o,a}function u(e,t){const i=document.createElement("div");var n,o;(i.style.position="absolute",Object.assign(i.style,t),"getPanes"in e)?null==(n=e.getPanes())||n.overlayLayer.appendChild(i):null==(o=e.getMap())||o.getDiv().appendChild(i);return i}function p(e){const{_eventListeners:t}=e.userData;for(const i in t)t[i]&&t[i].remove();e.finalize()}function h(e,t){const{width:i,height:n}=g(e),{center:o,heading:s,tilt:r,zoom:a}=t.getCameraParams(),c=n?i/n:1,d=(new l.k).perspective({fovy:25*Math.PI/180,aspect:c,near:.75,far:3e14});return{width:i,height:n,viewState:{altitude:.5*d[5],bearing:s,latitude:o.lat(),longitude:o.lng(),pitch:r,projectionMatrix:d,repeat:!0,zoom:a-1}}}function g(e){const t=e.getDiv().firstChild;return{width:t.offsetWidth,height:t.offsetHeight}}function f(e,t,i){const n=new google.maps.Point(t,i),o=e.fromContainerPixelToLatLng(n);return[o.lng(),o.lat()]}function m(e,t){if(e.pixel)return e.pixel;const i=t.getViewports()[0].project([e.latLng.lng(),e.latLng.lat()]);return{x:i[0],y:i[1]}}function v(e,t,i){if(!e.isInitialized)return;const n={type:t,offsetCenter:m(i,e),srcEvent:i};switch(t){case"click":case"rightclick":n.type="click",n.tapCount=1,e._onPointerDown(n),e._onEvent(n);break;case"dblclick":n.type="click",n.tapCount=2,e._onEvent(n);break;case"mousemove":n.type="pointermove",e._onPointerMove(n);break;case"mouseout":n.type="pointerleave",e._onPointerMove(n);break;default:return}}const y=["width","height","left","top"],x=()=>!1,_={depthMask:!0,depthTest:!0,blend:!0,blendFunc:[770,771,1,771],blendEquation:32774};function b(){}const w={interleaved:!0};class P{constructor(e){this.props={},this._map=null,this._deck=null,this._overlay=null,this.setProps(Object.assign({},w,e))}setMap(e){if(e===this._map)return;const{VECTOR:t,UNINITIALIZED:i}=google.maps.RenderingType;var n;this._map&&(!e&&this._map.getRenderingType()===t&&this.props.interleaved&&this._overlay.requestRedraw(),null==(n=this._overlay)||n.setMap(null),this._map=null);if(e){this._map=e;e.getRenderingType()!==i?this._createOverlay(e):e.addListener("renderingtype_changed",(()=>{this._createOverlay(e)}))}}setProps(e){if(Object.assign(this.props,e),this._deck){const t=this._deck.getCanvas();if(e.style&&null!=t&&t.parentElement){const i=t.parentElement.style;Object.assign(i,e.style),e.style=null}this._deck.setProps(e)}}pickObject(e){return this._deck&&this._deck.pickObject(e)}pickMultipleObjects(e){return this._deck&&this._deck.pickMultipleObjects(e)}pickObjects(e){return this._deck&&this._deck.pickObjects(e)}finalize(){this.setMap(null),this._deck&&(p(this._deck),this._deck=null)}_createOverlay(e){const{interleaved:t}=this.props,{VECTOR:i,UNINITIALIZED:n}=google.maps.RenderingType,o=e.getRenderingType();if(o===n)return;const s=new(o===i&&google.maps.WebGLOverlayView?google.maps.WebGLOverlayView:google.maps.OverlayView);s instanceof google.maps.WebGLOverlayView?(t?(s.onAdd=b,s.onContextRestored=this._onContextRestored.bind(this),s.onDraw=this._onDrawVectorInterleaved.bind(this)):(s.onAdd=this._onAdd.bind(this),s.onContextRestored=b,s.onDraw=this._onDrawVectorOverlay.bind(this)),s.onContextLost=this._onContextLost.bind(this)):(s.onAdd=this._onAdd.bind(this),s.draw=this._onDrawRaster.bind(this)),s.onRemove=this._onRemove.bind(this),this._overlay=s,this._overlay.setMap(e)}_onAdd(){this._deck=d(this._map,this._overlay,this._deck,this.props)}_onContextRestored(e){let{gl:t}=e;if(!this._map||!this._overlay)return;const i=d(this._map,this._overlay,this._deck,Object.assign({gl:t,_customRender:()=>{this._overlay&&this._overlay.requestRedraw()}},this.props));this._deck=i;const n=i.animationLoop;n._renderFrame=()=>{const e=t.getParameter(34964);i.device.withParametersWebGL({},(()=>{n.props.onRender(n.animationProps)})),t.bindBuffer(34962,e)}}_onContextLost(){this._deck&&(p(this._deck),this._deck=null)}_onRemove(){var e;null==(e=this._deck)||e.setProps({layerFilter:x})}_onDrawRaster(){if(!this._deck||!this._map)return;const e=this._deck,t=function(e,t){const{width:i,height:n}=g(e),o=t.getProjection(),s=e.getBounds();if(!s)return{width:i,height:n,left:0,top:0};const r=s.getNorthEast(),l=s.getSouthWest(),d=o.fromLatLngToDivPixel(r),u=o.fromLatLngToDivPixel(l),p=f(o,i/2,n/2),h=new google.maps.LatLng(0,p[0]),m=o.fromLatLngToContainerPixel(h),v=o.fromLatLngToDivPixel(h);if(!(d&&u&&v&&m))return{width:i,height:n,left:0,top:0};const y=Math.round(v.x-m.x);let x=v.y-m.y;const _=f(o,i/2,0),b=f(o,i/2,n);let w=p[1];const P=p[0];if(Math.abs(w)>c){w=w>0?c:-85.05113;const e=new google.maps.LatLng(w,P);x+=o.fromLatLngToContainerPixel(e).y-n/2}x=Math.round(x);let S=180*new a.I(_).sub(b).verticalAngle()/Math.PI;S<0&&(S+=360);const C=e.getHeading()||0;let A,M=e.getZoom()-1;if(0===S)A=n?(u.y-d.y)/n:1;else if(S===C){const e=new a.I([d.x,d.y]).sub([u.x,u.y]).len(),t=new a.I([i,-n]).len();A=t?e/t:1}return M+=Math.log2(A||1),{width:i,height:n,left:y,top:x,zoom:M,bearing:S,pitch:e.getTilt(),latitude:w,longitude:P}}(this._map,this._overlay),{width:i,height:o,left:s,top:r}=t,l=(0,n.A)(t,y),d=e.getCanvas(),u=(null==d?void 0:d.parentElement)||e.props.parent;if(u){const e=u.style;e.left=s+"px",e.top=r+"px"}e.setProps({width:i,height:o,viewState:Object.assign({altitude:1e4},l)}),e.redraw()}_onDrawVectorInterleaved(e){let{gl:t,transformer:i}=e;if(!this._deck||!this._map)return;const n=this._deck;if(n.setProps(Object.assign({},h(this._map,i),{width:null,height:null})),n.isInitialized){const e=n.device;if(e instanceof o.e){const t=e.getParametersWebGL(36006);n.setProps({_framebuffer:t})}n.needsRedraw({clearRedrawFlags:!0}),e instanceof o.e&&(e.setParametersWebGL({viewport:[0,0,t.canvas.width,t.canvas.height],scissor:[0,0,t.canvas.width,t.canvas.height],stencilFunc:[519,0,255,519,0,255]}),e.withParametersWebGL(_,(()=>{n._drawLayers("google-vector",{clearCanvas:!1})})))}}_onDrawVectorOverlay(e){let{transformer:t}=e;if(!this._deck||!this._map)return;const i=this._deck;i.setProps(Object.assign({},h(this._map,t))),i.redraw()}}},3346:(e,t,i)=>{"use strict";i.d(t,{A:()=>h});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(71904);const l="uniform arcUniforms {\n  bool greatCircle;\n  bool useShortestPath;\n  float numSegments;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int widthUnits;\n} arc;\n",c={name:"arc",vs:l,fs:l,uniformTypes:{greatCircle:"f32",useShortestPath:"f32",numSegments:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",widthUnits:"i32"}},d=[0,0,0,255],u={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getSourceColor:{type:"accessor",value:d},getTargetColor:{type:"accessor",value:d},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},greatCircle:!1,numSegments:{type:"number",value:50,min:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class p extends n.A{getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["instanceSourcePositions","instanceTargetPositions"])}getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME arc-layer-vertex-shader\nin vec4 instanceSourceColors;\nin vec4 instanceTargetColors;\nin vec3 instanceSourcePositions;\nin vec3 instanceSourcePositions64Low;\nin vec3 instanceTargetPositions;\nin vec3 instanceTargetPositions64Low;\nin vec3 instancePickingColors;\nin float instanceWidths;\nin float instanceHeights;\nin float instanceTilts;\nout vec4 vColor;\nout vec2 uv;\nout float isValid;\nfloat paraboloid(float distance, float sourceZ, float targetZ, float ratio) {\nfloat deltaZ = targetZ - sourceZ;\nfloat dh = distance * instanceHeights;\nif (dh == 0.0) {\nreturn sourceZ + deltaZ * ratio;\n}\nfloat unitZ = deltaZ / dh;\nfloat p2 = unitZ * unitZ + 1.0;\nfloat dir = step(deltaZ, 0.0);\nfloat z0 = mix(sourceZ, targetZ, dir);\nfloat r = mix(ratio, 1.0 - ratio, dir);\nreturn sqrt(r * (p2 - r)) * dh + z0;\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\nvec2 dir_screenspace = normalize(line_clipspace * project.viewportSize);\ndir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\nreturn dir_screenspace * offset_direction * width / 2.0;\n}\nfloat getSegmentRatio(float index) {\nreturn smoothstep(0.0, 1.0, index / (arc.numSegments - 1.0));\n}\nvec3 interpolateFlat(vec3 source, vec3 target, float segmentRatio) {\nfloat distance = length(source.xy - target.xy);\nfloat z = paraboloid(distance, source.z, target.z, segmentRatio);\nfloat tiltAngle = radians(instanceTilts);\nvec2 tiltDirection = normalize(target.xy - source.xy);\nvec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * z * sin(tiltAngle);\nreturn vec3(\nmix(source.xy, target.xy, segmentRatio) + tilt,\nz * cos(tiltAngle)\n);\n}\nfloat getAngularDist (vec2 source, vec2 target) {\nvec2 sourceRadians = radians(source);\nvec2 targetRadians = radians(target);\nvec2 sin_half_delta = sin((sourceRadians - targetRadians) / 2.0);\nvec2 shd_sq = sin_half_delta * sin_half_delta;\nfloat a = shd_sq.y + cos(sourceRadians.y) * cos(targetRadians.y) * shd_sq.x;\nreturn 2.0 * asin(sqrt(a));\n}\nvec3 interpolateGreatCircle(vec3 source, vec3 target, vec3 source3D, vec3 target3D, float angularDist, float t) {\nvec2 lngLat;\nif(abs(angularDist - PI) < 0.001) {\nlngLat = (1.0 - t) * source.xy + t * target.xy;\n} else {\nfloat a = sin((1.0 - t) * angularDist);\nfloat b = sin(t * angularDist);\nvec3 p = source3D.yxz * a + target3D.yxz * b;\nlngLat = degrees(vec2(atan(p.y, -p.x), atan(p.z, length(p.xy))));\n}\nfloat z = paraboloid(angularDist * EARTH_RADIUS, source.z, target.z, t);\nreturn vec3(lngLat, z);\n}\nvoid main(void) {\ngeometry.worldPosition = instanceSourcePositions;\ngeometry.worldPositionAlt = instanceTargetPositions;\nfloat segmentIndex = float(gl_VertexID / 2);\nfloat segmentSide = mod(float(gl_VertexID), 2.) == 0. ? -1. : 1.;\nfloat segmentRatio = getSegmentRatio(segmentIndex);\nfloat prevSegmentRatio = getSegmentRatio(max(0.0, segmentIndex - 1.0));\nfloat nextSegmentRatio = getSegmentRatio(min(arc.numSegments - 1.0, segmentIndex + 1.0));\nfloat indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\nisValid = 1.0;\nuv = vec2(segmentRatio, segmentSide);\ngeometry.uv = uv;\ngeometry.pickingColor = instancePickingColors;\nvec4 curr;\nvec4 next;\nvec3 source;\nvec3 target;\nif ((arc.greatCircle || project.projectionMode == PROJECTION_MODE_GLOBE) && project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nsource = project_globe_(vec3(instanceSourcePositions.xy, 0.0));\ntarget = project_globe_(vec3(instanceTargetPositions.xy, 0.0));\nfloat angularDist = getAngularDist(instanceSourcePositions.xy, instanceTargetPositions.xy);\nvec3 prevPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, prevSegmentRatio);\nvec3 currPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, segmentRatio);\nvec3 nextPos = interpolateGreatCircle(instanceSourcePositions, instanceTargetPositions, source, target, angularDist, nextSegmentRatio);\nif (abs(currPos.x - prevPos.x) > 180.0) {\nindexDir = -1.0;\nisValid = 0.0;\n} else if (abs(currPos.x - nextPos.x) > 180.0) {\nindexDir = 1.0;\nisValid = 0.0;\n}\nnextPos = indexDir < 0.0 ? prevPos : nextPos;\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nif (isValid == 0.0) {\nnextPos.x += nextPos.x > 0.0 ? -360.0 : 360.0;\nfloat t = ((currPos.x > 0.0 ? 180.0 : -180.0) - currPos.x) / (nextPos.x - currPos.x);\ncurrPos = mix(currPos, nextPos, t);\nsegmentRatio = mix(segmentRatio, nextSegmentRatio, t);\n}\nvec3 currPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, segmentRatio);\nvec3 nextPos64Low = mix(instanceSourcePositions64Low, instanceTargetPositions64Low, nextSegmentRatio);\ncurr = project_position_to_clipspace(currPos, currPos64Low, vec3(0.0), geometry.position);\nnext = project_position_to_clipspace(nextPos, nextPos64Low, vec3(0.0));\n} else {\nvec3 source_world = instanceSourcePositions;\nvec3 target_world = instanceTargetPositions;\nif (arc.useShortestPath) {\nsource_world.x = mod(source_world.x + 180., 360.0) - 180.;\ntarget_world.x = mod(target_world.x + 180., 360.0) - 180.;\nfloat deltaLng = target_world.x - source_world.x;\nif (deltaLng > 180.) target_world.x -= 360.;\nif (deltaLng < -180.) source_world.x -= 360.;\n}\nsource = project_position(source_world, instanceSourcePositions64Low);\ntarget = project_position(target_world, instanceTargetPositions64Low);\nfloat antiMeridianX = 0.0;\nif (arc.useShortestPath) {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nantiMeridianX = -(project.coordinateOrigin.x + 180.) / 360. * TILE_SIZE;\n}\nfloat thresholdRatio = (antiMeridianX - source.x) / (target.x - source.x);\nif (prevSegmentRatio <= thresholdRatio && nextSegmentRatio > thresholdRatio) {\nisValid = 0.0;\nindexDir = sign(segmentRatio - thresholdRatio);\nsegmentRatio = thresholdRatio;\n}\n}\nnextSegmentRatio = indexDir < 0.0 ? prevSegmentRatio : nextSegmentRatio;\nvec3 currPos = interpolateFlat(source, target, segmentRatio);\nvec3 nextPos = interpolateFlat(source, target, nextSegmentRatio);\nif (arc.useShortestPath) {\nif (nextPos.x < antiMeridianX) {\ncurrPos.x += TILE_SIZE;\nnextPos.x += TILE_SIZE;\n}\n}\ncurr = project_common_position_to_clipspace(vec4(currPos, 1.0));\nnext = project_common_position_to_clipspace(vec4(nextPos, 1.0));\ngeometry.position = vec4(currPos, 1.0);\n}\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceWidths * arc.widthScale, arc.widthUnits),\narc.widthMinPixels, arc.widthMaxPixels\n);\nvec3 offset = vec3(\ngetExtrusionOffset((next.xy - curr.xy) * indexDir, segmentSide, widthPixels),\n0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\nDECKGL_FILTER_GL_POSITION(curr, geometry);\ngl_Position = curr + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\nvec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio);\nvColor = vec4(color.rgb, color.a * layer.opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME arc-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 uv;\nin float isValid;\nout vec4 fragColor;\nvoid main(void) {\nif (isValid == 0.0) {\ndiscard;\n}\nfragColor = vColor;\ngeometry.uv = uv;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.A,c]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceSourceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getSourceColor",defaultValue:d},instanceTargetColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getTargetColor",defaultValue:d},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}updateState(e){var t;(super.updateState(e),e.changeFlags.extensionsChanged)&&(null==(t=this.state.model)||t.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw(e){let{uniforms:t}=e;const{widthUnits:i,widthScale:n,widthMinPixels:o,widthMaxPixels:s,greatCircle:a,wrapLongitude:l,numSegments:c}=this.props,d={numSegments:c,widthUnits:r.p5[i],widthScale:n,widthMinPixels:o,widthMaxPixels:s,greatCircle:a,useShortestPath:l},u=this.state.model;u.shaderInputs.setProps({arc:d}),u.setVertexCount(2*c),u.draw(this.context.renderPass)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),topology:"triangle-strip",isInstanced:!0}))}}p.layerName="ArcLayer",p.defaultProps=u;const h=p},48956:(e,t,i)=>{"use strict";i.d(t,{A:()=>y});var n=i(8961),o=i(3002),s=i(30428),r=i(28756),a=i(71904),l=i(24697),c=i(54901);const d=new Uint32Array([0,2,1,0,3,2]),u=new Float32Array([0,1,0,0,1,0,1,1]);function p(e,t){if(!t)return function(e){const t=new Float64Array(12);for(let i=0;i<e.length;i++)t[3*i+0]=e[i][0],t[3*i+1]=e[i][1],t[3*i+2]=e[i][2]||0;return{vertexCount:6,positions:t,indices:d,texCoords:u}}(e);const i=Math.max(Math.abs(e[0][0]-e[3][0]),Math.abs(e[1][0]-e[2][0])),n=Math.max(Math.abs(e[1][1]-e[0][1]),Math.abs(e[2][1]-e[3][1])),o=Math.ceil(i/t)+1,s=Math.ceil(n/t)+1,r=(o-1)*(s-1)*6,a=new Uint32Array(r),l=new Float32Array(o*s*2),c=new Float64Array(o*s*3);let p=0,g=0;for(let d=0;d<o;d++){const t=d/(o-1);for(let i=0;i<s;i++){const n=i/(s-1),o=h(e,t,n);c[3*p+0]=o[0],c[3*p+1]=o[1],c[3*p+2]=o[2]||0,l[2*p+0]=t,l[2*p+1]=1-n,d>0&&i>0&&(a[g++]=p-s,a[g++]=p-s-1,a[g++]=p-1,a[g++]=p-s,a[g++]=p-1,a[g++]=p),p++}}return{vertexCount:r,positions:c,indices:a,texCoords:l}}function h(e,t,i){return(0,c.Cc)((0,c.Cc)(e[0],e[1],i),(0,c.Cc)(e[3],e[2],i),t)}const g="uniform bitmapUniforms {\n  vec4 bounds;\n  float coordinateConversion;\n  float desaturate;\n  vec3 tintColor;\n  vec4 transparentColor;\n} bitmap;\n",f={name:"bitmap",vs:g,fs:g,uniformTypes:{bounds:"vec4<f32>",coordinateConversion:"f32",desaturate:"f32",tintColor:"vec3<f32>",transparentColor:"vec4<f32>"}},m={image:{type:"image",value:null,async:!0},bounds:{type:"array",value:[1,0,0,1],compare:!0},_imageCoordinateSystem:n.rf.DEFAULT,desaturate:{type:"number",min:0,max:1,value:0},transparentColor:{type:"color",value:[0,0,0,0]},tintColor:{type:"color",value:[255,255,255]},textureParameters:{type:"object",ignore:!0,value:null}};class v extends o.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME bitmap-layer-vertex-shader\n\nin vec2 texCoords;\nin vec3 positions;\nin vec3 positions64Low;\n\nout vec2 vTexCoord;\nout vec2 vTexPos;\n\nconst vec3 pickingColor = vec3(1.0, 0.0, 0.0);\n\nvoid main(void) {\n  geometry.worldPosition = positions;\n  geometry.uv = texCoords;\n  geometry.pickingColor = pickingColor;\n\n  gl_Position = project_position_to_clipspace(positions, positions64Low, vec3(0.0), geometry.position);\n  DECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n\n  vTexCoord = texCoords;\n\n  if (bitmap.coordinateConversion < -0.5) {\n    vTexPos = geometry.position.xy + project.commonOrigin.xy;\n  } else if (bitmap.coordinateConversion > 0.5) {\n    vTexPos = geometry.worldPosition.xy;\n  }\n\n  vec4 color = vec4(0.0);\n  DECKGL_FILTER_COLOR(color, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME bitmap-layer-fragment-shader\n\n#ifdef GL_ES\nprecision highp float;\n#endif\n\nuniform sampler2D bitmapTexture;\n\nin vec2 vTexCoord;\nin vec2 vTexPos;\n\nout vec4 fragColor;\n\n/* projection utils */\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / PI / 2.0;\n\n// from degrees to Web Mercator\nvec2 lnglat_to_mercator(vec2 lnglat) {\n  float x = lnglat.x;\n  float y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// from Web Mercator to degrees\nvec2 mercator_to_lnglat(vec2 xy) {\n  xy /= WORLD_SCALE;\n  return degrees(vec2(\n    xy.x - PI,\n    atan(exp(xy.y - PI)) * 2.0 - PI * 0.5\n  ));\n}\n/* End projection utils */\n\n// apply desaturation\nvec3 color_desaturate(vec3 color) {\n  float luminance = (color.r + color.g + color.b) * 0.333333333;\n  return mix(color, vec3(luminance), bitmap.desaturate);\n}\n\n// apply tint\nvec3 color_tint(vec3 color) {\n  return color * bitmap.tintColor;\n}\n\n// blend with background color\nvec4 apply_opacity(vec3 color, float alpha) {\n  if (bitmap.transparentColor.a == 0.0) {\n    return vec4(color, alpha);\n  }\n  float blendedAlpha = alpha + bitmap.transparentColor.a * (1.0 - alpha);\n  float highLightRatio = alpha / blendedAlpha;\n  vec3 blendedRGB = mix(bitmap.transparentColor.rgb, color, highLightRatio);\n  return vec4(blendedRGB, blendedAlpha);\n}\n\nvec2 getUV(vec2 pos) {\n  return vec2(\n    (pos.x - bitmap.bounds[0]) / (bitmap.bounds[2] - bitmap.bounds[0]),\n    (pos.y - bitmap.bounds[3]) / (bitmap.bounds[1] - bitmap.bounds[3])\n  );\n}\n\n\nvec3 packUVsIntoRGB(vec2 uv) {\n  // Extract the top 8 bits. We want values to be truncated down so we can add a fraction\n  vec2 uv8bit = floor(uv * 256.);\n\n  // Calculate the normalized remainders of u and v parts that do not fit into 8 bits\n  // Scale and clamp to 0-1 range\n  vec2 uvFraction = fract(uv * 256.);\n  vec2 uvFraction4bit = floor(uvFraction * 16.);\n\n  // Remainder can be encoded in blue channel, encode as 4 bits for pixel coordinates\n  float fractions = uvFraction4bit.x + uvFraction4bit.y * 16.;\n\n  return vec3(uv8bit, fractions) / 255.;\n}\n\n\nvoid main(void) {\n  vec2 uv = vTexCoord;\n  if (bitmap.coordinateConversion < -0.5) {\n    vec2 lnglat = mercator_to_lnglat(vTexPos);\n    uv = getUV(lnglat);\n  } else if (bitmap.coordinateConversion > 0.5) {\n    vec2 commonPos = lnglat_to_mercator(vTexPos);\n    uv = getUV(commonPos);\n  }\n  vec4 bitmapColor = texture(bitmapTexture, uv);\n\n  fragColor = apply_opacity(color_tint(color_desaturate(bitmapColor.rgb)), bitmapColor.a * layer.opacity);\n\n  geometry.uv = uv;\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n\n  if (bool(picking.isActive) && !bool(picking.isAttribute)) {\n    // Since instance information is not used, we can use picking color for pixel index\n    fragColor.rgb = packUVsIntoRGB(uv);\n  }\n}\n",modules:[s.A,r.A,f]})}initializeState(){const e=this.getAttributeManager();e.remove(["instancePickingColors"]);const t=!0;e.add({indices:{size:1,isIndexed:!0,update:e=>e.value=this.state.mesh.indices,noAlloc:t},positions:{size:3,type:"float64",fp64:this.use64bitPositions(),update:e=>e.value=this.state.mesh.positions,noAlloc:t},texCoords:{size:2,update:e=>e.value=this.state.mesh.texCoords,noAlloc:t}})}updateState(e){let{props:t,oldProps:i,changeFlags:n}=e;const o=this.getAttributeManager();var s;n.extensionsChanged&&(null==(s=this.state.model)||s.destroy(),this.state.model=this._getModel(),o.invalidateAll());if(t.bounds!==i.bounds){const e=this.state.mesh,t=this._createMesh();this.state.model.setVertexCount(t.vertexCount);for(const i in t)e&&e[i]!==t[i]&&o.invalidate(i);this.setState(Object.assign({mesh:t},this._getCoordinateUniforms()))}else t._imageCoordinateSystem!==i._imageCoordinateSystem&&this.setState(this._getCoordinateUniforms())}getPickingInfo(e){const{image:t}=this.props,i=e.info;if(!i.color||!t)return i.bitmap=null,i;const{width:n,height:o}=t;i.index=0;const s=function(e){const[t,i,n]=e;return[(t+(15&n)/16)/256,(i+(240&n)/256)/256]}(i.color);return i.bitmap={size:{width:n,height:o},uv:s,pixel:[Math.floor(s[0]*n),Math.floor(s[1]*o)]},i}disablePickingIndex(){this.setState({disablePicking:!0})}restorePickingColors(){this.setState({disablePicking:!1})}_updateAutoHighlight(e){super._updateAutoHighlight(Object.assign({},e,{color:this.encodePickingColor(0)}))}_createMesh(){const{bounds:e}=this.props;let t=e;return x(e)&&(t=[[e[0],e[1]],[e[0],e[3]],[e[2],e[3]],[e[2],e[1]]]),p(t,this.context.viewport.resolution)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),topology:"triangle-list",isInstanced:!1}))}draw(e){const{shaderModuleProps:t}=e,{model:i,coordinateConversion:n,bounds:o,disablePicking:s}=this.state,{image:r,desaturate:a,transparentColor:l,tintColor:c}=this.props;if((!t.picking.isActive||!s)&&r&&i){const e={bitmapTexture:r,bounds:o,coordinateConversion:n,desaturate:a,tintColor:c.slice(0,3).map((e=>e/255)),transparentColor:l.map((e=>e/255))};i.shaderInputs.setProps({bitmap:e}),i.draw(this.context.renderPass)}}_getCoordinateUniforms(){const{LNGLAT:e,CARTESIAN:t,DEFAULT:i}=n.rf;let{_imageCoordinateSystem:o}=this.props;if(o!==i){const{bounds:i}=this.props;if(!x(i))throw new Error("_imageCoordinateSystem only supports rectangular bounds");const n=this.context.viewport.resolution?e:t;if(o=o===e?e:t,o===e&&n===t)return{coordinateConversion:-1,bounds:i};if(o===t&&n===e){const e=(0,l.Gw)([i[0],i[1]]),t=(0,l.Gw)([i[2],i[3]]);return{coordinateConversion:1,bounds:[e[0],e[1],t[0],t[1]]}}}return{coordinateConversion:0,bounds:[0,0,0,0]}}}v.layerName="BitmapLayer",v.defaultProps=m;const y=v;function x(e){return Number.isFinite(e[0])}},34651:(e,t,i)=>{"use strict";i.d(t,{A:()=>x});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(31338),l=i(37072),c=i(71904),d=i(18120),u=i(25337),p=i(1746);class h extends u.V{constructor(e){const{indices:t,attributes:i}=function(e){const{radius:t,height:i=1,nradial:n=10}=e;let{vertices:o}=e;o&&(d.A.assert(o.length>=n),o=o.flatMap((e=>[e[0],e[1]])),(0,p.UD)(o,p.rJ.COUNTER_CLOCKWISE));const s=i>0,r=n+1,a=s?3*r+1:n,l=2*Math.PI/n,c=new Uint16Array(s?3*n*2:0),u=new Float32Array(3*a),h=new Float32Array(3*a);let g=0;if(s){for(let e=0;e<r;e++){const s=e*l,r=e%n,a=Math.sin(s),c=Math.cos(s);for(let e=0;e<2;e++)u[g+0]=o?o[2*r]:c*t,u[g+1]=o?o[2*r+1]:a*t,u[g+2]=(.5-e)*i,h[g+0]=o?o[2*r]:c,h[g+1]=o?o[2*r+1]:a,g+=3}u[g+0]=u[g-3],u[g+1]=u[g-2],u[g+2]=u[g-1],g+=3}for(let d=s?0:1;d<r;d++){const e=Math.floor(d/2)*Math.sign(.5-d%2),s=e*l,r=(e+n)%n,a=Math.sin(s),c=Math.cos(s);u[g+0]=o?o[2*r]:c*t,u[g+1]=o?o[2*r+1]:a*t,u[g+2]=i/2,h[g+2]=1,g+=3}if(s){let e=0;for(let t=0;t<n;t++)c[e++]=2*t+0,c[e++]=2*t+2,c[e++]=2*t+0,c[e++]=2*t+1,c[e++]=2*t+1,c[e++]=2*t+3}return{indices:c,attributes:{POSITION:{size:3,value:u},NORMAL:{size:3,value:h}}}}(e);super(Object.assign({},e,{indices:t,attributes:i}))}}const g="uniform columnUniforms {\n  float radius;\n  float angle;\n  vec2 offset;\n  bool extruded;\n  bool stroked;\n  bool isStroke;\n  float coverage;\n  float elevationScale;\n  float edgeDistance;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int radiusUnits;\n  highp int widthUnits;\n} column;\n",f={name:"column",vs:g,fs:g,uniformTypes:{radius:"f32",angle:"f32",offset:"vec2<f32>",extruded:"f32",stroked:"f32",isStroke:"f32",coverage:"f32",elevationScale:"f32",edgeDistance:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",radiusUnits:"i32",widthUnits:"i32"}},m=[0,0,0,255],v={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,flatShading:!1,getPosition:{type:"accessor",value:e=>e.position},getFillColor:{type:"accessor",value:m},getLineColor:{type:"accessor",value:m},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class y extends n.A{getShaders(){const e={},{flatShading:t}=this.props;return t&&(e.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n#define SHADER_NAME column-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\nin vec3 instancePickingColors;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec3 cameraPosition;\nout vec4 position_commonspace;\n#endif\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nvec4 color = column.isStroke ? instanceLineColors : instanceFillColors;\nmat2 rotationMatrix = mat2(cos(column.angle), sin(column.angle), -sin(column.angle), cos(column.angle));\nfloat elevation = 0.0;\nfloat strokeOffsetRatio = 1.0;\nif (column.extruded) {\nelevation = instanceElevations * (positions.z + 1.0) / 2.0 * column.elevationScale;\n} else if (column.stroked) {\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceStrokeWidths * column.widthScale, column.widthUnits),\ncolumn.widthMinPixels, column.widthMaxPixels) / 2.0;\nfloat halfOffset = project_pixel_size(widthPixels) / project_size(column.edgeDistance * column.coverage * column.radius);\nif (column.isStroke) {\nstrokeOffsetRatio -= sign(positions.z) * halfOffset;\n} else {\nstrokeOffsetRatio -= halfOffset;\n}\n}\nfloat shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\nfloat dotRadius = column.radius * column.coverage * shouldRender;\ngeometry.pickingColor = instancePickingColors;\nvec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\nvec3 centroidPosition64Low = instancePositions64Low;\nvec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + column.offset) * dotRadius;\nif (column.radiusUnits == UNIT_METERS) {\noffset = project_size(offset);\n}\nvec3 pos = vec3(offset, 0.);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\ngeometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (column.extruded && !column.isStroke) {\n#ifdef FLAT_SHADING\ncameraPosition = project.cameraPosition;\nposition_commonspace = geometry.position;\nvColor = vec4(color.rgb, color.a * layer.opacity);\n#else\nvec3 lightColor = lighting_getLightColor(color.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, color.a * layer.opacity);\n#endif\n} else {\nvColor = vec4(color.rgb, color.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\nprecision highp float;\nout vec4 fragColor;\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec3 cameraPosition;\nin vec4 position_commonspace;\n#endif\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\n#ifdef FLAT_SHADING\nif (column.extruded && !column.isStroke && !bool(picking.isActive)) {\nvec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\nfragColor.rgb = lighting_getLightColor(vColor.rgb, cameraPosition, position_commonspace.xyz, normal);\n}\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:e,modules:[o.A,t?a.w:l.J,s.A,f]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getFillColor",defaultValue:m},instanceLineColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getLineColor",defaultValue:m},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e,o=n.extensionsChanged||t.flatShading!==i.flatShading;var s;o&&(null==(s=this.state.models)||s.forEach((e=>e.destroy())),this.setState(this._getModels()),this.getAttributeManager().invalidateAll());const r=this.getNumInstances();this.state.fillModel.setInstanceCount(r),this.state.wireframeModel.setInstanceCount(r),(o||t.diskResolution!==i.diskResolution||t.vertices!==i.vertices||(t.extruded||t.stroked)!==(i.extruded||i.stroked))&&this._updateGeometry(t)}getGeometry(e,t,i){const n=new h({radius:1,height:i?2:0,vertices:t,nradial:e});let o=0;if(t)for(let s=0;s<e;s++){const i=t[s];o+=Math.sqrt(i[0]*i[0]+i[1]*i[1])/e}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/e)*o}),n}_getModels(){const e=this.getShaders(),t=this.getAttributeManager().getBufferLayouts(),i=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-fill",bufferLayout:t,isInstanced:!0})),n=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-wireframe",bufferLayout:t,isInstanced:!0}));return{fillModel:i,wireframeModel:n,models:[n,i]}}_updateGeometry(e){let{diskResolution:t,vertices:i,extruded:n,stroked:o}=e;const s=this.getGeometry(t,i,n||o);this.setState({fillVertexCount:s.attributes.POSITION.value.length/3});const r=this.state.fillModel,a=this.state.wireframeModel;r.setGeometry(s),r.setTopology("triangle-strip"),r.setIndexBuffer(null),a.setGeometry(s),a.setTopology("line-list")}draw(e){let{uniforms:t}=e;const{lineWidthUnits:i,lineWidthScale:n,lineWidthMinPixels:o,lineWidthMaxPixels:s,radiusUnits:a,elevationScale:l,extruded:c,filled:d,stroked:u,wireframe:p,offset:h,coverage:g,radius:f,angle:m}=this.props,v=this.state.fillModel,y=this.state.wireframeModel,{fillVertexCount:x,edgeDistance:_}=this.state,b={radius:f,angle:m/180*Math.PI,offset:h,extruded:c,stroked:u,coverage:g,elevationScale:l,edgeDistance:_,radiusUnits:r.p5[a],widthUnits:r.p5[i],widthScale:n,widthMinPixels:o,widthMaxPixels:s};c&&p&&(y.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!0})}),y.draw(this.context.renderPass)),d&&(v.setVertexCount(x),v.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!1})}),v.draw(this.context.renderPass)),!c&&u&&(v.setVertexCount(2*x/3),v.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!0})}),v.draw(this.context.renderPass))}}y.layerName="ColumnLayer",y.defaultProps=v;const x=y},5397:(e,t,i)=>{"use strict";i.d(t,{A:()=>a});var n=i(8961),o=i(8145),s=i(34651);class r extends s.A{_updateGeometry(){const e=new o.c9;this.state.fillModel.setGeometry(e)}draw(e){let{uniforms:t}=e;const{elevationScale:i,extruded:o,offset:s,coverage:r,cellSize:a,angle:l,radiusUnits:c}=this.props,d=this.state.fillModel,u={radius:a/2,radiusUnits:n.p5[c],angle:l,offset:s,extruded:o,stroked:!1,coverage:r,elevationScale:i,edgeDistance:1,isStroke:!1,widthUnits:0,widthScale:0,widthMinPixels:0,widthMaxPixels:0};d.shaderInputs.setProps({column:u}),d.draw(this.context.renderPass)}}r.layerName="GridCellLayer",r.defaultProps={cellSize:{type:"number",min:0,value:1e3},offset:{type:"array",value:[1,1]}};const a=r},84962:(e,t,i)=>{"use strict";i.d(t,{A:()=>M});var n=i(98587),o=i(33847),s=i(33822);function r(e,t){if(!e)return null;const i="startIndices"in e?e.startIndices[t]:t,n=e.featureIds.value[i];return-1!==i?function(e,t,i){const n={properties:Object.assign({},e.properties[t])};for(const o in e.numericProps)n.properties[o]=e.numericProps[o].value[i];return n}(e,n,i):null}var a=i(78243),l=i(80458),c=i(83667),d=i(21410),u=i(39738);const p={circle:{type:l.A,props:{filled:"filled",stroked:"stroked",lineWidthMaxPixels:"lineWidthMaxPixels",lineWidthMinPixels:"lineWidthMinPixels",lineWidthScale:"lineWidthScale",lineWidthUnits:"lineWidthUnits",pointRadiusMaxPixels:"radiusMaxPixels",pointRadiusMinPixels:"radiusMinPixels",pointRadiusScale:"radiusScale",pointRadiusUnits:"radiusUnits",pointAntialiasing:"antialiasing",pointBillboard:"billboard",getFillColor:"getFillColor",getLineColor:"getLineColor",getLineWidth:"getLineWidth",getPointRadius:"getRadius"}},icon:{type:a.A,props:{iconAtlas:"iconAtlas",iconMapping:"iconMapping",iconSizeMaxPixels:"sizeMaxPixels",iconSizeMinPixels:"sizeMinPixels",iconSizeScale:"sizeScale",iconSizeUnits:"sizeUnits",iconAlphaCutoff:"alphaCutoff",iconBillboard:"billboard",getIcon:"getIcon",getIconAngle:"getAngle",getIconColor:"getColor",getIconPixelOffset:"getPixelOffset",getIconSize:"getSize"}},text:{type:c.A,props:{textSizeMaxPixels:"sizeMaxPixels",textSizeMinPixels:"sizeMinPixels",textSizeScale:"sizeScale",textSizeUnits:"sizeUnits",textBackground:"background",textBackgroundPadding:"backgroundPadding",textFontFamily:"fontFamily",textFontWeight:"fontWeight",textLineHeight:"lineHeight",textMaxWidth:"maxWidth",textOutlineColor:"outlineColor",textOutlineWidth:"outlineWidth",textWordBreak:"wordBreak",textCharacterSet:"characterSet",textBillboard:"billboard",textFontSettings:"fontSettings",getText:"getText",getTextAngle:"getAngle",getTextColor:"getColor",getTextPixelOffset:"getPixelOffset",getTextSize:"getSize",getTextAnchor:"getTextAnchor",getTextAlignmentBaseline:"getAlignmentBaseline",getTextBackgroundColor:"getBackgroundColor",getTextBorderColor:"getBorderColor",getTextBorderWidth:"getBorderWidth"}}},h={type:d.A,props:{lineWidthUnits:"widthUnits",lineWidthScale:"widthScale",lineWidthMinPixels:"widthMinPixels",lineWidthMaxPixels:"widthMaxPixels",lineJointRounded:"jointRounded",lineCapRounded:"capRounded",lineMiterLimit:"miterLimit",lineBillboard:"billboard",getLineColor:"getColor",getLineWidth:"getWidth"}},g={type:u.A,props:{extruded:"extruded",filled:"filled",wireframe:"wireframe",elevationScale:"elevationScale",material:"material",_full3d:"_full3d",getElevation:"getElevation",getFillColor:"getFillColor",getLineColor:"getLineColor"}};function f(e){let{type:t,props:i}=e;const n={};for(const o in i)n[o]=t.defaultProps[i[o]];return n}function m(e,t){const{transitions:i,updateTriggers:n}=e.props,o={updateTriggers:{},transitions:i&&{getPosition:i.geometry}};for(const s in t){const r=t[s];let a=e.props[s];s.startsWith("get")&&(a=e.getSubLayerAccessor(a),o.updateTriggers[r]=n[s],i&&(o.transitions[r]=i[s])),o[r]=a}return o}var v=i(18120);function y(e,t,i){void 0===i&&(i={});const n={pointFeatures:[],lineFeatures:[],polygonFeatures:[],polygonOutlineFeatures:[]},{startRow:o=0,endRow:s=e.length}=i;for(let r=o;r<s;r++){const i=e[r],{geometry:o}=i;if(o)if("GeometryCollection"===o.type){v.A.assert(Array.isArray(o.geometries),"GeoJSON does not have geometries array");const{geometries:e}=o;for(let o=0;o<e.length;o++){x(e[o],n,t,i,r)}}else x(o,n,t,i,r)}return n}function x(e,t,i,n,o){const{type:s,coordinates:r}=e,{pointFeatures:a,lineFeatures:l,polygonFeatures:c,polygonOutlineFeatures:d}=t;if(function(e,t){let i=_[e];v.A.assert(i,"Unknown GeoJSON type "+e);for(;t&&--i>0;)t=t[0];return t&&Number.isFinite(t[0])}(s,r))switch(s){case"Point":a.push(i({geometry:e},n,o));break;case"MultiPoint":r.forEach((e=>{a.push(i({geometry:{type:"Point",coordinates:e}},n,o))}));break;case"LineString":l.push(i({geometry:e},n,o));break;case"MultiLineString":r.forEach((e=>{l.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}));break;case"Polygon":c.push(i({geometry:e},n,o)),r.forEach((e=>{d.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}));break;case"MultiPolygon":r.forEach((e=>{c.push(i({geometry:{type:"Polygon",coordinates:e}},n,o)),e.forEach((e=>{d.push(i({geometry:{type:"LineString",coordinates:e}},n,o))}))}))}else v.A.warn(s+" coordinates are malformed")()}const _={Point:1,MultiPoint:2,LineString:2,MultiLineString:3,Polygon:3,MultiPolygon:4};function b(e){return e.geometry.coordinates}function w(e,t){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{points:n,lines:o,polygons:s}=e,r=function(e,t){const i={points:null,lines:null,polygons:null};for(const n in i){const o=e[n].globalFeatureIds.value;i[n]=new Uint8ClampedArray(4*o.length);const s=[];for(let e=0;e<o.length;e++)t(o[e],s),i[n][4*e+0]=s[0],i[n][4*e+1]=s[1],i[n][4*e+2]=s[2],i[n][4*e+3]=255}return i}(e,t);return i.points.data={length:n.positions.value.length/n.positions.size,attributes:Object.assign({},n.attributes,{getPosition:n.positions,instancePickingColors:{size:4,value:r.points}}),properties:n.properties,numericProps:n.numericProps,featureIds:n.featureIds},i.lines.data={length:o.pathIndices.value.length-1,startIndices:o.pathIndices.value,attributes:Object.assign({},o.attributes,{getPath:o.positions,instancePickingColors:{size:4,value:r.lines}}),properties:o.properties,numericProps:o.numericProps,featureIds:o.featureIds},i.lines._pathType="open",i.polygons.data={length:s.polygonIndices.value.length-1,startIndices:s.polygonIndices.value,attributes:Object.assign({},s.attributes,{getPolygon:s.positions,pickingColors:{size:4,value:r.polygons}}),properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},i.polygons._normalize=!1,s.triangles&&(i.polygons.data.attributes.indices=s.triangles.value),i.polygonsOutline.data={length:s.primitivePolygonIndices.value.length-1,startIndices:s.primitivePolygonIndices.value,attributes:Object.assign({},s.attributes,{getPath:s.positions,instancePickingColors:{size:4,value:r.polygons}}),properties:s.properties,numericProps:s.numericProps,featureIds:s.featureIds},i.polygonsOutline._pathType="open",i}const P=["instancePickingColors"],S=["points","linestrings","polygons"],C=Object.assign({},f(p.circle),f(p.icon),f(p.text),f(h),f(g),{stroked:!0,filled:!0,extruded:!1,wireframe:!1,_full3d:!1,iconAtlas:{type:"object",value:null},iconMapping:{type:"object",value:{}},getIcon:{type:"accessor",value:e=>e.properties.icon},getText:{type:"accessor",value:e=>e.properties.text},pointType:"circle",getRadius:{deprecatedFor:"getPointRadius"}});class A extends o.A{initializeState(){this.state={layerProps:{},features:{},featuresDiff:{}}}updateState(e){let{props:t,changeFlags:i}=e;if(!i.dataChanged)return;const{data:n}=this.props,o=n&&"points"in n&&"polygons"in n&&"lines"in n;this.setState({binary:o}),o?this._updateStateBinary({props:t,changeFlags:i}):this._updateStateJSON({props:t,changeFlags:i})}_updateStateBinary(e){let{props:t,changeFlags:i}=e;const n=w(t.data,this.encodePickingColor);this.setState({layerProps:n})}_updateStateJSON(e){let{props:t,changeFlags:i}=e;const n=function(e){if(Array.isArray(e))return e;switch(v.A.assert(e.type,"GeoJSON does not have type"),e.type){case"Feature":return[e];case"FeatureCollection":return v.A.assert(Array.isArray(e.features),"GeoJSON does not have features array"),e.features;default:return[{geometry:e}]}}(t.data),o=this.getSubLayerRow.bind(this);let r={};const a={};if(Array.isArray(i.dataChanged)){const e=this.state.features;for(const t in e)r[t]=e[t].slice(),a[t]=[];for(const t of i.dataChanged){const i=y(n,o,t);for(const n in e)a[n].push((0,s.J)({data:r[n],getIndex:e=>e.__source.index,dataRange:t,replace:i[n]}))}}else r=y(n,o);const l=function(e,t){const i={points:{},lines:{},polygons:{},polygonsOutline:{}},{pointFeatures:n,lineFeatures:o,polygonFeatures:s,polygonOutlineFeatures:r}=e;return i.points.data=n,i.points._dataDiff=t.pointFeatures&&(()=>t.pointFeatures),i.points.getPosition=b,i.lines.data=o,i.lines._dataDiff=t.lineFeatures&&(()=>t.lineFeatures),i.lines.getPath=b,i.polygons.data=s,i.polygons._dataDiff=t.polygonFeatures&&(()=>t.polygonFeatures),i.polygons.getPolygon=b,i.polygonsOutline.data=r,i.polygonsOutline._dataDiff=t.polygonOutlineFeatures&&(()=>t.polygonOutlineFeatures),i.polygonsOutline.getPath=b,i}(r,a);this.setState({features:r,featuresDiff:a,layerProps:l})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i,sourceLayer:n}=t;return t.featureType=S.find((e=>n.id.startsWith(this.id+"-"+e+"-"))),i>=0&&n.id.startsWith(this.id+"-points-text")&&this.state.binary&&(t.index=this.props.data.points.globalFeatureIds.value[i]),t}_updateAutoHighlight(e){const t=this.id+"-points-",i="points"===e.featureType;for(const n of this.getSubLayers())n.id.startsWith(t)===i&&n.updateAutoHighlight(e)}_renderPolygonLayer(){var e;const{extruded:t,wireframe:i}=this.props,{layerProps:n}=this.state,o="polygons-fill",s=this.shouldRenderSubLayer(o,null==(e=n.polygons)?void 0:e.data)&&this.getSubLayerClass(o,g.type);if(s){const e=m(this,g.props),r=t&&i;return r||delete e.getLineColor,e.updateTriggers.lineColors=r,new s(e,this.getSubLayerProps({id:o,updateTriggers:e.updateTriggers}),n.polygons)}return null}_renderLineLayers(){var e,t;const{extruded:i,stroked:n}=this.props,{layerProps:o}=this.state,s="polygons-stroke",r="linestrings",a=!i&&n&&this.shouldRenderSubLayer(s,null==(e=o.polygonsOutline)?void 0:e.data)&&this.getSubLayerClass(s,h.type),l=this.shouldRenderSubLayer(r,null==(t=o.lines)?void 0:t.data)&&this.getSubLayerClass(r,h.type);if(a||l){const e=m(this,h.props);return[a&&new a(e,this.getSubLayerProps({id:s,updateTriggers:e.updateTriggers}),o.polygonsOutline),l&&new l(e,this.getSubLayerProps({id:r,updateTriggers:e.updateTriggers}),o.lines)]}return null}_renderPointLayers(){const{pointType:e}=this.props,{layerProps:t,binary:i}=this.state;let{highlightedObjectIndex:o}=this.props;!i&&Number.isFinite(o)&&(o=t.points.data.findIndex((e=>e.__source.index===o)));const s=new Set(e.split("+")),r=[];for(const l of s){var a;const e="points-"+l,s=p[l],c=s&&this.shouldRenderSubLayer(e,null==(a=t.points)?void 0:a.data)&&this.getSubLayerClass(e,s.type);if(c){const a=m(this,s.props);let d=t.points;if("text"===l&&i){const e=d.data.attributes,t=(0,n.A)(e,P);d=Object.assign({},d,{data:Object.assign({},d.data,{attributes:t})})}r.push(new c(a,this.getSubLayerProps({id:e,updateTriggers:a.updateTriggers,highlightedObjectIndex:o}),d))}}return r}renderLayers(){const{extruded:e}=this.props,t=this._renderPolygonLayer();return[!e&&t,this._renderLineLayers(),this._renderPointLayers(),e&&t]}getSubLayerAccessor(e){const{binary:t}=this.state;return t&&"function"==typeof e?(t,i)=>{const{data:n,index:o}=i,s=r(n,o);return e(s,i)}:super.getSubLayerAccessor(e)}}A.layerName="GeoJsonLayer",A.defaultProps=C;const M=A},78243:(e,t,i)=>{"use strict";i.d(t,{A:()=>S});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(18120),l=i(71904),c=i(25337);const d="uniform iconUniforms {\n  float sizeScale;\n  vec2 iconsTextureDim;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  bool billboard;\n  highp int sizeUnits;\n  float alphaCutoff;\n} icon;\n",u={name:"icon",vs:d,fs:d,uniformTypes:{sizeScale:"f32",iconsTextureDim:"vec2<f32>",sizeMinPixels:"f32",sizeMaxPixels:"f32",billboard:"f32",sizeUnits:"i32",alphaCutoff:"f32"}};var p=i(327),h=i(33698);const g=()=>{},f={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},m={x:0,y:0,width:0,height:0};function v(e,t,i,n){const o=Math.min(i/t.width,n/t.height),s=Math.floor(t.width*o),r=Math.floor(t.height*o);return 1===o?{image:t,width:s,height:r}:(e.canvas.height=r,e.canvas.width=s,e.clearRect(0,0,s,r),e.drawImage(t,0,0,t.width,t.height,0,0,s,r),{image:e.canvas,width:s,height:r})}function y(e){return e&&(e.id||e.url)}function x(e,t,i){for(let n=0;n<t.length;n++){const{icon:o,xOffset:s}=t[n];e[y(o)]=Object.assign({},o,{x:s,y:i})}}class _{constructor(e,t){let{onUpdate:i=g,onError:n=g}=t;this._loadOptions=null,this._texture=null,this._externalTexture=null,this._mapping={},this._samplerParameters=null,this._pendingCount=0,this._autoPacking=!1,this._xOffset=0,this._yOffset=0,this._rowHeight=0,this._buffer=4,this._canvasWidth=1024,this._canvasHeight=0,this._canvas=null,this.device=e,this.onUpdate=i,this.onError=n}finalize(){var e;null==(e=this._texture)||e.delete()}getTexture(){return this._texture||this._externalTexture}getIconMapping(e){const t=this._autoPacking?y(e):e;return this._mapping[t]||m}setProps(e){let{loadOptions:t,autoPacking:i,iconAtlas:n,iconMapping:o,textureParameters:s}=e;var r;(t&&(this._loadOptions=t),void 0!==i&&(this._autoPacking=i),o&&(this._mapping=o),n)&&(null==(r=this._texture)||r.delete(),this._texture=null,this._externalTexture=n);s&&(this._samplerParameters=s)}get isLoaded(){return 0===this._pendingCount}packIcons(e,t){if(!this._autoPacking||"undefined"==typeof document)return;const i=Object.values(function(e,t,i){if(!e||!t)return null;i=i||{};const n={},{iterable:o,objectInfo:s}=(0,h.X)(e);for(const r of o){s.index++;const e=t(r,s),o=y(e);if(!e)throw new Error("Icon is missing.");if(!e.url)throw new Error("Icon url is missing.");n[o]||i[o]&&e.url===i[o].url||(n[o]=Object.assign({},e,{source:r,sourceIndex:s.index}))}return n}(e,t,this._mapping)||{});if(i.length>0){const{mapping:e,xOffset:t,yOffset:n,rowHeight:o,canvasHeight:s}=function(e){let{icons:t,buffer:i,mapping:n={},xOffset:o=0,yOffset:s=0,rowHeight:r=0,canvasWidth:a}=e,l=[];for(let d=0;d<t.length;d++){const e=t[d];if(!n[y(e)]){const{height:t,width:c}=e;o+c+i>a&&(x(n,l,s),o=0,s=r+s+i,r=0,l=[]),l.push({icon:e,xOffset:o}),o=o+c+i,r=Math.max(r,t)}}return l.length>0&&x(n,l,s),{mapping:n,rowHeight:r,xOffset:o,yOffset:s,canvasWidth:a,canvasHeight:(c=r+s+i,Math.pow(2,Math.ceil(Math.log2(c))))};var c}({icons:i,buffer:this._buffer,canvasWidth:this._canvasWidth,mapping:this._mapping,rowHeight:this._rowHeight,xOffset:this._xOffset,yOffset:this._yOffset});this._rowHeight=o,this._mapping=e,this._xOffset=t,this._yOffset=n,this._canvasHeight=s,this._texture||(this._texture=this.device.createTexture({format:"rgba8unorm",width:this._canvasWidth,height:this._canvasHeight,sampler:this._samplerParameters||f,mipmaps:!0})),this._texture.height!==this._canvasHeight&&(this._texture=function(e,t,i,n){const{width:o,height:s,device:r}=e,a=r.createTexture({format:"rgba8unorm",width:t,height:i,sampler:n,mipmaps:!0}),l=r.createCommandEncoder();return l.copyTextureToTexture({sourceTexture:e,destinationTexture:a,width:o,height:s}),l.finish(),e.destroy(),a}(this._texture,this._canvasWidth,this._canvasHeight,this._samplerParameters||f)),this.onUpdate(),this._canvas=this._canvas||document.createElement("canvas"),this._loadIcons(i)}}_loadIcons(e){const t=this._canvas.getContext("2d",{willReadFrequently:!0});for(const i of e)this._pendingCount++,(0,p.H)(i.url,this._loadOptions).then((e=>{var n;const o=y(i),s=this._mapping[o],{x:r,y:a,width:l,height:c}=s,{image:d,width:u,height:p}=v(t,e,l,c);null==(n=this._texture)||n.copyExternalImage({image:d,x:r+(l-u)/2,y:a+(c-p)/2,width:u,height:p}),s.width=u,s.height=p,this._texture.generateMipmap(),this.onUpdate()})).catch((e=>{this.onError({url:i.url,source:i.source,sourceIndex:i.sourceIndex,loadOptions:this._loadOptions,error:e})})).finally((()=>{this._pendingCount--}))}}const b=[0,0,0,255],w={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!0,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},getPosition:{type:"accessor",value:e=>e.position},getIcon:{type:"accessor",value:e=>e.icon},getColor:{type:"accessor",value:b},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},onIconError:{type:"function",value:null,optional:!0},textureParameters:{type:"object",ignore:!0,value:null}};class P extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME icon-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceSizes;\nin float instanceAngles;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec4 instanceIconFrames;\nin float instanceColorModes;\nin vec2 instanceOffsets;\nin vec2 instancePixelOffset;\nout float vColorMode;\nout vec4 vColor;\nout vec2 vTextureCoords;\nout vec2 uv;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = angle * PI / 180.0;\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvec2 iconSize = instanceIconFrames.zw;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * icon.sizeScale, icon.sizeUnits),\nicon.sizeMinPixels, icon.sizeMaxPixels\n);\nfloat instanceScale = iconSize.y == 0.0 ? 0.0 : sizePixels / iconSize.y;\nvec2 pixelOffset = positions / 2.0 * iconSize + instanceOffsets;\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles) * instanceScale;\npixelOffset += instancePixelOffset;\npixelOffset.y *= -1.0;\nif (icon.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvTextureCoords = mix(\ninstanceIconFrames.xy,\ninstanceIconFrames.xy + iconSize,\n(positions.xy + 1.0) / 2.0\n) / icon.iconsTextureDim;\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\nvColorMode = instanceColorModes;\n}\n",fs:"#version 300 es\n#define SHADER_NAME icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin float vColorMode;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nvec4 texColor = texture(iconsTexture, vTextureCoords);\nvec3 color = mix(texColor.rgb, vColor.rgb, vColorMode);\nfloat a = texColor.a * layer.opacity * vColor.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color, a);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.A,u]})}initializeState(){this.state={iconManager:new _(this.context.device,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})};this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,accessor:"getIcon",transform:this.getInstanceOffset},instanceIconFrames:{size:4,accessor:"getIcon",transform:this.getInstanceIconFrame},instanceColorModes:{size:1,type:"uint8",accessor:"getIcon",transform:this.getInstanceColorMode},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:b},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e,o=this.getAttributeManager(),{iconAtlas:s,iconMapping:r,data:a,getIcon:l,textureParameters:c}=t,{iconManager:d}=this.state;if("string"==typeof s)return;const u=s||this.internalState.isAsyncPropLoading("iconAtlas");var p;(d.setProps({loadOptions:t.loadOptions,autoPacking:!u,iconAtlas:s,iconMapping:u?r:null,textureParameters:c}),u?i.iconMapping!==t.iconMapping&&o.invalidate("getIcon"):(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getIcon))&&d.packIcons(a,l),n.extensionsChanged)&&(null==(p=this.state.model)||p.destroy(),this.state.model=this._getModel(),o.invalidateAll())}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(e){super.finalizeState(e),this.state.iconManager.finalize()}draw(e){let{uniforms:t}=e;const{sizeScale:i,sizeMinPixels:n,sizeMaxPixels:o,sizeUnits:s,billboard:a,alphaCutoff:l}=this.props,{iconManager:c}=this.state,d=c.getTexture();if(d){const e=this.state.model,t={iconsTexture:d,iconsTextureDim:[d.width,d.height],sizeUnits:r.p5[s],sizeScale:i,sizeMinPixels:n,sizeMaxPixels:o,billboard:a,alphaCutoff:l};e.shaderInputs.setProps({icon:t}),e.draw(this.context.renderPass)}}_getModel(){return new l.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new c.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([-1,-1,1,-1,-1,1,1,1])}}}),isInstanced:!0}))}_onUpdate(){this.setNeedsRedraw()}_onError(e){var t;const i=null==(t=this.getCurrentLayer())?void 0:t.props.onIconError;i?i(e):a.A.error(e.error.message)()}getInstanceOffset(e){const{width:t,height:i,anchorX:n=t/2,anchorY:o=i/2}=this.state.iconManager.getIconMapping(e);return[t/2-n,i/2-o]}getInstanceColorMode(e){return this.state.iconManager.getIconMapping(e).mask?1:0}getInstanceIconFrame(e){const{x:t,y:i,width:n,height:o}=this.state.iconManager.getIconMapping(e);return[t,i,n,o]}}P.defaultProps=w,P.layerName="IconLayer";const S=P},60192:(e,t,i)=>{"use strict";i.d(t,{A:()=>h});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(71904),l=i(25337);const c="uniform lineUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float useShortestPath;\n  highp int widthUnits;\n} line;\n",d={name:"line",source:"struct LineUniforms {\n  widthScale: f32,\n  widthMinPixels: f32,\n  widthMaxPixels: f32,\n  useShortestPath: f32,\n  widthUnits: i32,\n};\n\n@group(0) @binding(1)\nvar<uniform> line: LineUniforms;\n",vs:c,fs:c,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",useShortestPath:"f32",widthUnits:"i32"}},u={getSourcePosition:{type:"accessor",value:e=>e.sourcePosition},getTargetPosition:{type:"accessor",value:e=>e.targetPosition},getColor:{type:"accessor",value:[0,0,0,255]},getWidth:{type:"accessor",value:1},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0}};class p extends n.A{getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["instanceSourcePositions","instanceTargetPositions"])}getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME line-layer-vertex-shader\nin vec3 positions;\nin vec3 instanceSourcePositions;\nin vec3 instanceTargetPositions;\nin vec3 instanceSourcePositions64Low;\nin vec3 instanceTargetPositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin float instanceWidths;\nout vec4 vColor;\nout vec2 uv;\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\nvec2 dir_screenspace = normalize(line_clipspace * project.viewportSize);\ndir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\nreturn dir_screenspace * offset_direction * width / 2.0;\n}\nvec3 splitLine(vec3 a, vec3 b, float x) {\nfloat t = (x - a.x) / (b.x - a.x);\nreturn vec3(x, mix(a.yz, b.yz, t));\n}\nvoid main(void) {\ngeometry.worldPosition = instanceSourcePositions;\ngeometry.worldPositionAlt = instanceTargetPositions;\nvec3 source_world = instanceSourcePositions;\nvec3 target_world = instanceTargetPositions;\nvec3 source_world_64low = instanceSourcePositions64Low;\nvec3 target_world_64low = instanceTargetPositions64Low;\nif (line.useShortestPath > 0.5 || line.useShortestPath < -0.5) {\nsource_world.x = mod(source_world.x + 180., 360.0) - 180.;\ntarget_world.x = mod(target_world.x + 180., 360.0) - 180.;\nfloat deltaLng = target_world.x - source_world.x;\nif (deltaLng * line.useShortestPath > 180.) {\nsource_world.x += 360. * line.useShortestPath;\nsource_world = splitLine(source_world, target_world, 180. * line.useShortestPath);\nsource_world_64low = vec3(0.0);\n} else if (deltaLng * line.useShortestPath < -180.) {\ntarget_world.x += 360. * line.useShortestPath;\ntarget_world = splitLine(source_world, target_world, 180. * line.useShortestPath);\ntarget_world_64low = vec3(0.0);\n} else if (line.useShortestPath < 0.) {\ngl_Position = vec4(0.);\nreturn;\n}\n}\nvec4 source_commonspace;\nvec4 target_commonspace;\nvec4 source = project_position_to_clipspace(source_world, source_world_64low, vec3(0.), source_commonspace);\nvec4 target = project_position_to_clipspace(target_world, target_world_64low, vec3(0.), target_commonspace);\nfloat segmentIndex = positions.x;\nvec4 p = mix(source, target, segmentIndex);\ngeometry.position = mix(source_commonspace, target_commonspace, segmentIndex);\nuv = positions.xy;\ngeometry.uv = uv;\ngeometry.pickingColor = instancePickingColors;\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceWidths * line.widthScale, line.widthUnits),\nline.widthMinPixels, line.widthMaxPixels\n);\nvec3 offset = vec3(\ngetExtrusionOffset(target.xy - source.xy, positions.y, widthPixels),\n0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\nDECKGL_FILTER_GL_POSITION(p, geometry);\ngl_Position = p + vec4(project_pixel_size_to_clipspace(offset.xy), 0.0, 0.0);\nvColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME line-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",source:'// TODO(ibgreen): Hack for Layer uniforms (move to new "color" module?)\nstruct LayerUniforms {\n  opacity: f32,\n};\nvar<private> layer: LayerUniforms = LayerUniforms(1.0);\n// @group(0) @binding(1) var<uniform> layer: LayerUniforms;\n\n// ---------- Helper Structures & Functions ----------\n\n// Placeholder filter functions.\nfn deckgl_filter_size(offset: vec3<f32>, geometry: Geometry) -> vec3<f32> {\n  return offset;\n}\nfn deckgl_filter_gl_position(p: vec4<f32>, geometry: Geometry) -> vec4<f32> {\n  return p;\n}\nfn deckgl_filter_color(color: vec4<f32>, geometry: Geometry) -> vec4<f32> {\n  return color;\n}\n\n// Compute an extrusion offset given a line direction (in clipspace),\n// an offset direction (-1 or 1), and a width in pixels.\n// Assumes a uniform "project" with a viewportSize field is available.\nfn getExtrusionOffset(line_clipspace: vec2<f32>, offset_direction: f32, width: f32) -> vec2<f32> {\n  // project.viewportSize should be provided as a uniform (not shown here)\n  let dir_screenspace = normalize(line_clipspace * project.viewportSize);\n  // Rotate by 90\xb0: (x,y) becomes (-y,x)\n  let rotated = vec2<f32>(-dir_screenspace.y, dir_screenspace.x);\n  return rotated * offset_direction * width / 2.0;\n}\n\n// Splits the line between two points at a given x coordinate.\n// Interpolates the y and z components.\nfn splitLine(a: vec3<f32>, b: vec3<f32>, x: f32) -> vec3<f32> {\n  let t: f32 = (x - a.x) / (b.x - a.x);\n  return vec3<f32>(x, a.yz + t * (b.yz - a.yz));\n}\n\n// ---------- Uniforms & Global Structures ----------\n\n// Uniforms for line, layer, and project are assumed to be defined elsewhere.\n// For example:\n//\n// @group(0) @binding(0)\n// var<uniform> line: LineUniform;\n//\n// struct LayerUniform {\n//   opacity: f32,\n// };\n// @group(0) @binding(1)\n// var<uniform> layer: LayerUniform;\n//\n// struct ProjectUniform {\n//   viewportSize: vec2<f32>,\n// };\n// @group(0) @binding(2)\n// var<uniform> project: ProjectUniform;\n\n\n\n// ---------- Vertex Output Structure ----------\n\nstruct Varyings {\n  @builtin(position) gl_Position: vec4<f32>,\n  @location(0) vColor: vec4<f32>,\n  @location(1) uv: vec2<f32>,\n};\n\n// ---------- Vertex Shader Entry Point ----------\n\n@vertex\nfn vertexMain(\n  @location(0) positions: vec3<f32>,\n  @location(1) instanceSourcePositions: vec3<f32>,\n  @location(2) instanceTargetPositions: vec3<f32>,\n  @location(3) instanceSourcePositions64Low: vec3<f32>,\n  @location(4) instanceTargetPositions64Low: vec3<f32>,\n  @location(5) instanceColors: vec4<f32>,\n  @location(6) instancePickingColors: vec3<f32>,\n  @location(7) instanceWidths: f32\n) -> Varyings {\n  var geometry: Geometry;\n  geometry.worldPosition = instanceSourcePositions;\n  geometry.worldPositionAlt = instanceTargetPositions;\n\n  var source_world: vec3<f32> = instanceSourcePositions;\n  var target_world: vec3<f32> = instanceTargetPositions;\n  var source_world_64low: vec3<f32> = instanceSourcePositions64Low;\n  var target_world_64low: vec3<f32> = instanceTargetPositions64Low;\n\n  // Apply shortest-path adjustments if needed.\n  if (line.useShortestPath > 0.5 || line.useShortestPath < -0.5) {\n    source_world.x = (source_world.x + 180.0 % 360.0) - 180.0;\n    target_world.x = (target_world.x + 180.0 % 360.0) - 180.0;\n    let deltaLng: f32 = target_world.x - source_world.x;\n\n    if (deltaLng * line.useShortestPath > 180.0) {\n      source_world.x = source_world.x + 360.0 * line.useShortestPath;\n      source_world = splitLine(source_world, target_world, 180.0 * line.useShortestPath);\n      source_world_64low = vec3<f32>(0.0, 0.0, 0.0);\n    } else if (deltaLng * line.useShortestPath < -180.0) {\n      target_world.x = target_world.x + 360.0 * line.useShortestPath;\n      target_world = splitLine(source_world, target_world, 180.0 * line.useShortestPath);\n      target_world_64low = vec3<f32>(0.0, 0.0, 0.0);\n    } else if (line.useShortestPath < 0.0) {\n      var abortOut: Varyings;\n      abortOut.gl_Position = vec4<f32>(0.0);\n      abortOut.vColor = vec4<f32>(0.0);\n      abortOut.uv = vec2<f32>(0.0);\n      return abortOut;\n    }\n  }\n\n  // Project Pos and target positions to clip space.\n  let sourceResult = project_position_to_clipspace_and_commonspace(source_world, source_world_64low, vec3<f32>(0.0));\n  let targetResult = project_position_to_clipspace_and_commonspace(target_world, target_world_64low, vec3<f32>(0.0));\n  let sourcePos: vec4<f32> = sourceResult.clipPosition;\n  let targetPos: vec4<f32> = targetResult.clipPosition;\n  let source_commonspace: vec4<f32> = sourceResult.commonPosition;\n  let target_commonspace: vec4<f32> = targetResult.commonPosition;\n\n  // Interpolate along the line segment.\n  let segmentIndex: f32 = positions.x;\n  let p: vec4<f32> = sourcePos + segmentIndex * (targetPos - sourcePos);\n  geometry.position = source_commonspace + segmentIndex * (target_commonspace - source_commonspace);\n  let uv: vec2<f32> = positions.xy;\n  geometry.uv = uv;\n  geometry.pickingColor = instancePickingColors;\n\n  // Determine width in pixels.\n  let widthPixels: f32 = clamp(\n    project_unit_size_to_pixel(instanceWidths * line.widthScale, line.widthUnits),\n    line.widthMinPixels, line.widthMaxPixels\n  );\n\n  // Compute extrusion offset.\n  let extrusion: vec2<f32> = getExtrusionOffset(targetPos.xy - sourcePos.xy, positions.y, widthPixels);\n  let offset: vec3<f32> = vec3<f32>(extrusion, 0.0);\n\n  // Apply deck.gl filter functions.\n  let filteredOffset = deckgl_filter_size(offset, geometry);\n  let filteredP = deckgl_filter_gl_position(p, geometry);\n\n  let clipOffset: vec2<f32> = project_pixel_size_to_clipspace(filteredOffset.xy);\n  let finalPosition: vec4<f32> = filteredP + vec4<f32>(clipOffset, 0.0, 0.0);\n\n  // Compute color.\n  var vColor: vec4<f32> = vec4<f32>(instanceColors.rgb, instanceColors.a * layer.opacity);\n  // vColor = deckgl_filter_color(vColor, geometry);\n\n  var output: Varyings;\n  output.gl_Position = finalPosition;\n  output.vColor = vColor;\n  output.uv = uv;\n  return output;\n}\n\n@fragment\nfn fragmentMain(\n  @location(0) vColor: vec4<f32>,\n  @location(1) uv: vec2<f32>\n) -> @location(0) vec4<f32> {\n  // Create and initialize geometry with the provided uv.\n  var geometry: Geometry;\n  geometry.uv = uv;\n\n  // Start with the input color.\n  var fragColor: vec4<f32> = vColor;\n\n  // Apply the deck.gl filter to the color.\n  fragColor = deckgl_filter_color(fragColor, geometry);\n\n  return fragColor;\n}\n',modules:[o.A,s.A,d]})}get wrapLongitude(){return!1}initializeState(){this.getAttributeManager().addInstanced({instanceSourcePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getSourcePosition"},instanceTargetPositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getTargetPosition"},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:[0,0,0,255]},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1}})}updateState(e){var t;(super.updateState(e),e.changeFlags.extensionsChanged)&&(null==(t=this.state.model)||t.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw(e){let{uniforms:t}=e;const{widthUnits:i,widthScale:n,widthMinPixels:o,widthMaxPixels:s,wrapLongitude:a}=this.props,l=this.state.model,c={widthUnits:r.p5[i],widthScale:n,widthMinPixels:o,widthMaxPixels:s,useShortestPath:a?1:0};l.shaderInputs.setProps({line:c}),l.draw(this.context.renderPass),a&&(l.shaderInputs.setProps({line:Object.assign({},c,{useShortestPath:-1})}),l.draw(this.context.renderPass))}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-strip",attributes:{positions:{size:3,value:new Float32Array([0,-1,0,0,1,0,1,-1,0,1,1,0])}}}),isInstanced:!0}))}}p.layerName="LineLayer",p.defaultProps=u;const h=p},21410:(e,t,i)=>{"use strict";i.d(t,{A:()=>x});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(25337),l=i(71904),c=i(50364),d=i(1746);class u extends c.A{constructor(e){super(Object.assign({},e,{attributes:{positions:{size:3,padding:18,initialize:!0,type:e.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}}))}get(e){return this.attributes[e]}getGeometryFromBuffer(e){return this.normalize?super.getGeometryFromBuffer(e):null}normalizeGeometry(e){return this.normalize?function(e,t,i,n){let o;if(Array.isArray(e[0])){const i=e.length*t;o=new Array(i);for(let n=0;n<e.length;n++)for(let i=0;i<t;i++)o[n*t+i]=e[n][i]||0}else o=e;return i?(0,d.Mk)(o,{size:t,gridResolution:i}):n?(0,d.Iy)(o,{size:t}):o}(e,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):e}getGeometrySize(e){if(p(e)){let t=0;for(const i of e)t+=this.getGeometrySize(i);return t}const t=this.getPathLength(e);return t<2?0:this.isClosed(e)?t<3?0:t+2:t}updateGeometryAttributes(e,t){if(0!==t.geometrySize)if(e&&p(e))for(const i of e){const e=this.getGeometrySize(i);t.geometrySize=e,this.updateGeometryAttributes(i,t),t.vertexStart+=e}else this._updateSegmentTypes(e,t),this._updatePositions(e,t)}_updateSegmentTypes(e,t){const i=this.attributes.segmentTypes,n=!!e&&this.isClosed(e),{vertexStart:o,geometrySize:s}=t;i.fill(0,o,o+s),n?(i[o]=4,i[o+s-2]=4):(i[o]+=1,i[o+s-2]+=2),i[o+s-1]=4}_updatePositions(e,t){const{positions:i}=this.attributes;if(!i||!e)return;const{vertexStart:n,geometrySize:o}=t,s=new Array(3);for(let r=n,a=0;a<o;r++,a++)this.getPointOnPath(e,a,s),i[3*r]=s[0],i[3*r+1]=s[1],i[3*r+2]=s[2]}getPathLength(e){return e.length/this.positionSize}getPointOnPath(e,t,i){void 0===i&&(i=[]);const{positionSize:n}=this;t*n>=e.length&&(t+=1-e.length/n);const o=t*n;return i[0]=e[o],i[1]=e[o+1],i[2]=3===n&&e[o+2]||0,i}isClosed(e){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:t}=this,i=e.length-t;return e[0]===e[i]&&e[1]===e[i+1]&&(2===t||e[2]===e[i+2])}}function p(e){return Array.isArray(e[0])}const h="uniform pathUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float jointType;\n  float capType;\n  float miterLimit;\n  bool billboard;\n  highp int widthUnits;\n} path;\n",g={name:"path",vs:h,fs:h,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",jointType:"f32",capType:"f32",miterLimit:"f32",billboard:"f32",widthUnits:"i32"}},f=[0,0,0,255],m={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:e=>e.path},getColor:{type:"accessor",value:f},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},v={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class y extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME path-layer-vertex-shader\nin vec2 positions;\nin float instanceTypes;\nin vec3 instanceStartPositions;\nin vec3 instanceEndPositions;\nin vec3 instanceLeftPositions;\nin vec3 instanceRightPositions;\nin vec3 instanceLeftPositions64Low;\nin vec3 instanceStartPositions64Low;\nin vec3 instanceEndPositions64Low;\nin vec3 instanceRightPositions64Low;\nin float instanceStrokeWidths;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nuniform float opacity;\nout vec4 vColor;\nout vec2 vCornerOffset;\nout float vMiterLength;\nout vec2 vPathPosition;\nout float vPathLength;\nout float vJointType;\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\nfloat flipIfTrue(bool flag) {\nreturn -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\nvec3 prevPoint, vec3 currPoint, vec3 nextPoint,\nvec2 width\n) {\nbool isEnd = positions.x > 0.0;\nfloat sideOfPath = positions.y;\nfloat isJoint = float(sideOfPath == 0.0);\nvec3 deltaA3 = (currPoint - prevPoint);\nvec3 deltaB3 = (nextPoint - currPoint);\nmat3 rotationMatrix;\nbool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);\nif (needsRotation) {\ndeltaA3 = deltaA3 * rotationMatrix;\ndeltaB3 = deltaB3 * rotationMatrix;\n}\nvec2 deltaA = deltaA3.xy / width;\nvec2 deltaB = deltaB3.xy / width;\nfloat lenA = length(deltaA);\nfloat lenB = length(deltaB);\nvec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\nvec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\nvec2 perpA = vec2(-dirA.y, dirA.x);\nvec2 perpB = vec2(-dirB.y, dirB.x);\nvec2 tangent = dirA + dirB;\ntangent = length(tangent) > 0. ? normalize(tangent) : perpA;\nvec2 miterVec = vec2(-tangent.y, tangent.x);\nvec2 dir = isEnd ? dirA : dirB;\nvec2 perp = isEnd ? perpA : perpB;\nfloat L = isEnd ? lenA : lenB;\nfloat sinHalfA = abs(dot(miterVec, perp));\nfloat cosHalfA = abs(dot(dirA, miterVec));\nfloat turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\nfloat cornerPosition = sideOfPath * turnDirection;\nfloat miterSize = 1.0 / max(sinHalfA, EPSILON);\nmiterSize = mix(\nmin(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\nmiterSize,\nstep(0.0, cornerPosition)\n);\nvec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n* (sideOfPath + isJoint * turnDirection);\nbool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\nbool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\nbool isCap = isStartCap || isEndCap;\nif (isCap) {\noffsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);\nvJointType = path.capType;\n} else {\nvJointType = path.jointType;\n}\nvPathLength = L;\nvCornerOffset = offsetVec;\nvMiterLength = dot(vCornerOffset, miterVec * turnDirection);\nvMiterLength = isCap ? isJoint : vMiterLength;\nvec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\nvPathPosition = vec2(\ndot(offsetFromStartOfPath, perp),\ndot(offsetFromStartOfPath, dir)\n);\ngeometry.uv = vPathPosition;\nfloat isValid = step(instanceTypes, 3.5);\nvec3 offset = vec3(offsetVec * width * isValid, 0.0);\nif (needsRotation) {\noffset = rotationMatrix * offset;\n}\nreturn offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\nif (position.w < EPSILON) {\nfloat r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\nposition = refPosition + (position - refPosition) * r;\n}\n}\nvoid main() {\ngeometry.pickingColor = instancePickingColors;\nvColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);\nfloat isEnd = positions.x;\nvec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\nvec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\nvec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\nvec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\nvec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\nvec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\ngeometry.worldPosition = currPosition;\nvec2 widthPixels = vec2(clamp(\nproject_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),\npath.widthMinPixels, path.widthMaxPixels) / 2.0);\nvec3 width;\nif (path.billboard) {\nvec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\nvec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\nvec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\nclipLine(prevPositionScreen, currPositionScreen);\nclipLine(nextPositionScreen, currPositionScreen);\nclipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\nwidth = vec3(widthPixels, 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(\nprevPositionScreen.xyz / prevPositionScreen.w,\ncurrPositionScreen.xyz / currPositionScreen.w,\nnextPositionScreen.xyz / nextPositionScreen.w,\nproject_pixel_size_to_clipspace(width.xy)\n);\nDECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\ngl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n} else {\nprevPosition = project_position(prevPosition, prevPosition64Low);\ncurrPosition = project_position(currPosition, currPosition64Low);\nnextPosition = project_position(nextPosition, nextPosition64Low);\nwidth = vec3(project_pixel_size(widthPixels), 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\ngeometry.position = vec4(currPosition + offset, 1.0);\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME path-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 vCornerOffset;\nin float vMiterLength;\nin vec2 vPathPosition;\nin float vPathLength;\nin float vJointType;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vPathPosition;\nif (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\nif (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\ndiscard;\n}\nif (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {\ndiscard;\n}\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.A,g]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const e=!0;this.getAttributeManager().addInstanced({vertexPositions:{size:3,vertexOffset:1,type:"float64",fp64:this.use64bitPositions(),transition:v,accessor:"getPath",update:this.calculatePositions,noAlloc:e,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:"uint8",update:this.calculateSegmentTypes,noAlloc:e},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:v,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",accessor:"getColor",transition:v,defaultValue:f},instancePickingColors:{size:4,type:"uint8",accessor:(e,t)=>{let{index:i,target:n}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:i,n)}}}),this.setState({pathTesselator:new u({fp64:this.use64bitPositions()})})}updateState(e){super.updateState(e);const{props:t,changeFlags:i}=e,n=this.getAttributeManager();if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPath)){const{pathTesselator:e}=this.state,o=t.data.attributes||{};e.updateGeometry({data:t.data,geometryBuffer:o.getPath,buffers:o,normalize:!t._pathType,loop:"loop"===t._pathType,getGeometry:t.getPath,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:i.dataChanged}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),i.dataChanged||n.invalidateAll()}var o;i.extensionsChanged&&(null==(o=this.state.model)||o.destroy(),this.state.model=this._getModel(),n.invalidateAll())}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i}=t,n=this.props.data;return n[0]&&n[0].__source&&(t.object=n.find((e=>e.__source.index===i))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let i=0;i<t.length;i++)t[i].__source.index===e&&this._disablePickingIndex(i);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{jointRounded:i,capRounded:n,billboard:o,miterLimit:s,widthUnits:a,widthScale:l,widthMinPixels:c,widthMaxPixels:d}=this.props,u=this.state.model,p={jointType:Number(i),capType:Number(n),billboard:o,widthUnits:r.p5[a],widthScale:l,miterLimit:s,widthMinPixels:c,widthMaxPixels:d};u.shaderInputs.setProps({path:p}),u.draw(this.context.renderPass)}_getModel(){return new l.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new a.V({topology:"triangle-list",attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0}))}calculatePositions(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateSegmentTypes(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("segmentTypes")}}y.defaultProps=m,y.layerName="PathLayer";const x=y},84348:(e,t,i)=>{"use strict";i.d(t,{A:()=>m});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(71904),l=i(25337),c=i(37072);const d="uniform pointCloudUniforms {\n  float radiusPixels;\n  highp int sizeUnits;\n} pointCloud;\n",u={name:"pointCloud",vs:d,fs:d,uniformTypes:{radiusPixels:"f32",sizeUnits:"i32"}},p=[0,0,0,255],h=[0,0,1],g={sizeUnits:"pixels",pointSize:{type:"number",min:0,value:10},getPosition:{type:"accessor",value:e=>e.position},getNormal:{type:"accessor",value:h},getColor:{type:"accessor",value:p},material:!0,radiusPixels:{deprecatedFor:"pointSize"}};class f extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME point-cloud-layer-vertex-shader\nin vec3 positions;\nin vec3 instanceNormals;\nin vec4 instanceColors;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec3 instancePickingColors;\nout vec4 vColor;\nout vec2 unitPosition;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.normal = project_normal(instanceNormals);\nunitPosition = positions.xy;\ngeometry.uv = unitPosition;\ngeometry.pickingColor = instancePickingColors;\nvec3 offset = vec3(positions.xy * project_size_to_pixel(pointCloud.radiusPixels, pointCloud.sizeUnits), 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\nvec3 lightColor = lighting_getLightColor(instanceColors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, instanceColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME point-cloud-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 unitPosition;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = unitPosition.xy;\nfloat distToCenter = length(unitPosition);\nif (distToCenter > 1.0) {\ndiscard;\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,c.J,s.A,u]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceNormals:{size:3,transition:!0,accessor:"getNormal",defaultValue:h},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getColor",defaultValue:p}})}updateState(e){const{changeFlags:t,props:i}=e;var n;(super.updateState(e),t.extensionsChanged)&&(null==(n=this.state.model)||n.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll());t.dataChanged&&function(e){const{header:t,attributes:i}=e;if(t&&i&&(e.length=t.vertexCount,i.POSITION&&(i.instancePositions=i.POSITION),i.NORMAL&&(i.instanceNormals=i.NORMAL),i.COLOR_0)){const{size:e,value:t}=i.COLOR_0;i.instanceColors={size:e,type:"unorm8",value:t}}}(i.data)}draw(e){let{uniforms:t}=e;const{pointSize:i,sizeUnits:n}=this.props,o=this.state.model,s={sizeUnits:r.p5[n],radiusPixels:i};o.shaderInputs.setProps({pointCloud:s}),o.draw(this.context.renderPass)}_getModel(){const e=[];for(let t=0;t<3;t++){const i=t/3*Math.PI*2;e.push(2*Math.cos(i),2*Math.sin(i),0)}return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-list",attributes:{positions:new Float32Array(e)}}),isInstanced:!0}))}}f.layerName="PointCloudLayer",f.defaultProps=g;const m=f},10800:(e,t,i)=>{"use strict";i.d(t,{A:()=>h});var n=i(33847),o=i(18120),s=i(33698),r=i(39738),a=i(21410),l=i(2714),c=i(33822);const d=[0,0,0,255],u={stroked:!0,filled:!0,extruded:!1,elevationScale:1,wireframe:!1,_normalize:!0,_windingOrder:"CW",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,lineJointRounded:!1,lineMiterLimit:4,getPolygon:{type:"accessor",value:e=>e.polygon},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:d},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0};class p extends n.A{initializeState(){this.state={paths:[],pathsDiff:null},this.props.getLineDashArray&&o.A.removed("getLineDashArray","PathStyleExtension")()}updateState(e){let{changeFlags:t}=e;const i=t.dataChanged||t.updateTriggersChanged&&(t.updateTriggersChanged.all||t.updateTriggersChanged.getPolygon);if(i&&Array.isArray(t.dataChanged)){const e=this.state.paths.slice(),i=t.dataChanged.map((t=>(0,c.J)({data:e,getIndex:e=>e.__source.index,dataRange:t,replace:this._getPaths(t)})));this.setState({paths:e,pathsDiff:i})}else i&&this.setState({paths:this._getPaths(),pathsDiff:null})}_getPaths(e){void 0===e&&(e={});const{data:t,getPolygon:i,positionFormat:n,_normalize:o}=this.props,r=[],a="XY"===n?2:3,{startRow:c,endRow:d}=e,{iterable:u,objectInfo:p}=(0,s.X)(t,c,d);for(const s of u){p.index++;let e=i(s,p);o&&(e=l.S8(e,a));const{holeIndices:t}=e,n=e.positions||e;if(t)for(let i=0;i<=t.length;i++){const e=n.slice(t[i-1]||0,t[i]||n.length);r.push(this.getSubLayerRow({path:e},s,p.index))}else r.push(this.getSubLayerRow({path:n},s,p.index))}return r}renderLayers(){const{data:e,_dataDiff:t,stroked:i,filled:n,extruded:o,wireframe:s,_normalize:l,_windingOrder:c,elevationScale:u,transitions:p,positionFormat:h}=this.props,{lineWidthUnits:g,lineWidthScale:f,lineWidthMinPixels:m,lineWidthMaxPixels:v,lineJointRounded:y,lineMiterLimit:x,lineDashJustified:_}=this.props,{getFillColor:b,getLineColor:w,getLineWidth:P,getLineDashArray:S,getElevation:C,getPolygon:A,updateTriggers:M,material:T}=this.props,{paths:L,pathsDiff:O}=this.state,I=this.getSubLayerClass("fill",r.A),E=this.getSubLayerClass("stroke",a.A),R=this.shouldRenderSubLayer("fill",L)&&new I({_dataDiff:t,extruded:o,elevationScale:u,filled:n,wireframe:s,_normalize:l,_windingOrder:c,getElevation:C,getFillColor:b,getLineColor:o&&s?w:d,material:T,transitions:p},this.getSubLayerProps({id:"fill",updateTriggers:M&&{getPolygon:M.getPolygon,getElevation:M.getElevation,getFillColor:M.getFillColor,lineColors:o&&s,getLineColor:M.getLineColor}}),{data:e,positionFormat:h,getPolygon:A});return[!o&&R,!o&&i&&this.shouldRenderSubLayer("stroke",L)&&new E({_dataDiff:O&&(()=>O),widthUnits:g,widthScale:f,widthMinPixels:m,widthMaxPixels:v,jointRounded:y,miterLimit:x,dashJustified:_,_pathType:"loop",transitions:p&&{getWidth:p.getLineWidth,getColor:p.getLineColor,getPath:p.getPolygon},getColor:this.getSubLayerAccessor(w),getWidth:this.getSubLayerAccessor(P),getDashArray:this.getSubLayerAccessor(S)},this.getSubLayerProps({id:"stroke",updateTriggers:M&&{getWidth:M.getLineWidth,getColor:M.getLineColor,getDashArray:M.getLineDashArray}}),{data:L,positionFormat:h,getPath:e=>e.path}),o&&R]}}p.layerName="PolygonLayer",p.defaultProps=u;const h=p},80458:(e,t,i)=>{"use strict";i.d(t,{A:()=>g});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(71904),l=i(25337);const c="uniform scatterplotUniforms {\n  float radiusScale;\n  float radiusMinPixels;\n  float radiusMaxPixels;\n  float lineWidthScale;\n  float lineWidthMinPixels;\n  float lineWidthMaxPixels;\n  float stroked;\n  float filled;\n  bool antialiasing;\n  bool billboard;\n  highp int radiusUnits;\n  highp int lineWidthUnits;\n} scatterplot;\n",d={name:"scatterplot",vs:c,fs:c,source:"",uniformTypes:{radiusScale:"f32",radiusMinPixels:"f32",radiusMaxPixels:"f32",lineWidthScale:"f32",lineWidthMinPixels:"f32",lineWidthMaxPixels:"f32",stroked:"f32",filled:"f32",antialiasing:"f32",billboard:"f32",radiusUnits:"i32",lineWidthUnits:"i32"}},u=[0,0,0,255],p={radiusUnits:"meters",radiusScale:{type:"number",min:0,value:1},radiusMinPixels:{type:"number",min:0,value:0},radiusMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},lineWidthUnits:"meters",lineWidthScale:{type:"number",min:0,value:1},lineWidthMinPixels:{type:"number",min:0,value:0},lineWidthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},stroked:!1,filled:!0,billboard:!1,antialiasing:!0,getPosition:{type:"accessor",value:e=>e.position},getRadius:{type:"accessor",value:1},getFillColor:{type:"accessor",value:u},getLineColor:{type:"accessor",value:u},getLineWidth:{type:"accessor",value:1},strokeWidth:{deprecatedFor:"getLineWidth"},outline:{deprecatedFor:"stroked"},getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class h extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME scatterplot-layer-vertex-shader\nin vec3 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin float instanceRadius;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout vec2 unitPosition;\nout float innerUnitRadius;\nout float outerRadiusPixels;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nouterRadiusPixels = clamp(\nproject_size_to_pixel(scatterplot.radiusScale * instanceRadius, scatterplot.radiusUnits),\nscatterplot.radiusMinPixels, scatterplot.radiusMaxPixels\n);\nfloat lineWidthPixels = clamp(\nproject_size_to_pixel(scatterplot.lineWidthScale * instanceLineWidths, scatterplot.lineWidthUnits),\nscatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels\n);\nouterRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;\nfloat edgePadding = scatterplot.antialiasing ? (outerRadiusPixels + SMOOTH_EDGE_RADIUS) / outerRadiusPixels : 1.0;\nunitPosition = edgePadding * positions.xy;\ngeometry.uv = unitPosition;\ngeometry.pickingColor = instancePickingColors;\ninnerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / outerRadiusPixels;\nif (scatterplot.billboard) {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = edgePadding * positions * outerRadiusPixels;\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset = edgePadding * positions * project_pixel_size(outerRadiusPixels);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME scatterplot-layer-fragment-shader\nprecision highp float;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin vec2 unitPosition;\nin float innerUnitRadius;\nin float outerRadiusPixels;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = unitPosition;\nfloat distToCenter = length(unitPosition) * outerRadiusPixels;\nfloat inCircle = scatterplot.antialiasing ?\nsmoothedge(distToCenter, outerRadiusPixels) :\nstep(distToCenter, outerRadiusPixels);\nif (inCircle == 0.0) {\ndiscard;\n}\nif (scatterplot.stroked > 0.5) {\nfloat isLine = scatterplot.antialiasing ?\nsmoothedge(innerUnitRadius * outerRadiusPixels, distToCenter) :\nstep(innerUnitRadius * outerRadiusPixels, distToCenter);\nif (scatterplot.filled > 0.5) {\nfragColor = mix(vFillColor, vLineColor, isLine);\n} else {\nif (isLine == 0.0) {\ndiscard;\n}\nfragColor = vec4(vLineColor.rgb, vLineColor.a * isLine);\n}\n} else if (scatterplot.filled < 0.5) {\ndiscard;\n} else {\nfragColor = vFillColor;\n}\nfragColor.a *= inCircle;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",source:'// TODO(ibgreen): Hack for Layer uniforms (move to new "color" module?)\n\nstruct LayerUniforms {\n  opacity: f32,\n};\n\nvar<private> layer: LayerUniforms = LayerUniforms(1.0);\n// @group(0) @binding(1) var<uniform> layer: LayerUniforms;\n\n// Main shaders\n\nstruct ScatterplotUniforms {\n  radiusScale: f32,\n  radiusMinPixels: f32,\n  radiusMaxPixels: f32,\n  lineWidthScale: f32,\n  lineWidthMinPixels: f32,\n  lineWidthMaxPixels: f32,\n  stroked: f32,\n  filled: i32,\n  antialiasing: i32,\n  billboard: i32,\n  radiusUnits: i32,\n  lineWidthUnits: i32,\n};\n\nstruct ConstantAttributeUniforms {\n instancePositions: vec3<f32>,\n instancePositions64Low: vec3<f32>,\n instanceRadius: f32,\n instanceLineWidths: f32,\n instanceFillColors: vec4<f32>,\n instanceLineColors: vec4<f32>,\n instancePickingColors: vec3<f32>,\n\n instancePositionsConstant: i32,\n instancePositions64LowConstant: i32,\n instanceRadiusConstant: i32,\n instanceLineWidthsConstant: i32,\n instanceFillColorsConstant: i32,\n instanceLineColorsConstant: i32,\n instancePickingColorsConstant: i32\n};\n\n@group(0) @binding(2) var<uniform> scatterplot: ScatterplotUniforms;\n\nstruct ConstantAttributes {\n  instancePositions: vec3<f32>,\n  instancePositions64Low: vec3<f32>,\n  instanceRadius: f32,\n  instanceLineWidths: f32,\n  instanceFillColors: vec4<f32>,\n  instanceLineColors: vec4<f32>,\n  instancePickingColors: vec3<f32>\n};\n\nconst constants = ConstantAttributes(\n  vec3<f32>(0.0),\n  vec3<f32>(0.0),\n  0.0,\n  0.0,\n  vec4<f32>(0.0, 0.0, 0.0, 1.0),\n  vec4<f32>(0.0, 0.0, 0.0, 1.0),\n  vec3<f32>(0.0)\n);\n\nstruct Attributes {\n  @builtin(instance_index) instanceIndex : u32,\n  @builtin(vertex_index) vertexIndex : u32,\n  @location(0) positions: vec3<f32>,\n  @location(1) instancePositions: vec3<f32>,\n  @location(2) instancePositions64Low: vec3<f32>,\n  @location(3) instanceRadius: f32,\n  @location(4) instanceLineWidths: f32,\n  @location(5) instanceFillColors: vec4<f32>,\n  @location(6) instanceLineColors: vec4<f32>,\n  @location(7) instancePickingColors: vec3<f32>\n};\n\nstruct Varyings {\n  @builtin(position) position: vec4<f32>,\n  @location(0) vFillColor: vec4<f32>,\n  @location(1) vLineColor: vec4<f32>,\n  @location(2) unitPosition: vec2<f32>,\n  @location(3) innerUnitRadius: f32,\n  @location(4) outerRadiusPixels: f32,\n};\n\n@vertex\nfn vertexMain(attributes: Attributes) -> Varyings {\n  var varyings: Varyings;\n\n  // Draw an inline geometry constant array clip space triangle to verify that rendering works.\n  // var positions = array<vec2<f32>, 3>(vec2(0.0, 0.5), vec2(-0.5, -0.5), vec2(0.5, -0.5));\n  // if (attributes.instanceIndex == 0) {\n  //   varyings.position = vec4<f32>(positions[attributes.vertexIndex], 0.0, 1.0);\n  //   return varyings;\n  // }\n\n  // var geometry: Geometry;\n  // geometry.worldPosition = instancePositions;\n\n  // Multiply out radius and clamp to limits\n  varyings.outerRadiusPixels = clamp(\n    project_unit_size_to_pixel(scatterplot.radiusScale * attributes.instanceRadius, scatterplot.radiusUnits),\n    scatterplot.radiusMinPixels, scatterplot.radiusMaxPixels\n  );\n\n  // Multiply out line width and clamp to limits\n  let lineWidthPixels = clamp(\n    project_unit_size_to_pixel(scatterplot.lineWidthScale * attributes.instanceLineWidths, scatterplot.lineWidthUnits),\n    scatterplot.lineWidthMinPixels, scatterplot.lineWidthMaxPixels\n  );\n\n  // outer radius needs to offset by half stroke width\n  varyings.outerRadiusPixels += scatterplot.stroked * lineWidthPixels / 2.0;\n  // Expand geometry to accommodate edge smoothing\n  let edgePadding = select(\n    (varyings.outerRadiusPixels + SMOOTH_EDGE_RADIUS) / varyings.outerRadiusPixels,\n    1.0,\n    scatterplot.antialiasing != 0\n  );\n\n  // position on the containing square in [-1, 1] space\n  varyings.unitPosition = edgePadding * attributes.positions.xy;\n  geometry.uv = varyings.unitPosition;\n  geometry.pickingColor = attributes.instancePickingColors;\n\n  varyings.innerUnitRadius = 1.0 - scatterplot.stroked * lineWidthPixels / varyings.outerRadiusPixels;\n\n  if (scatterplot.billboard != 0) {\n    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, vec3<f32>(0.0)); // TODO , geometry.position);\n    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);\n    let offset = attributes.positions; // * edgePadding * varyings.outerRadiusPixels;\n    // DECKGL_FILTER_SIZE(offset, geometry);\n    let clipPixels = project_pixel_size_to_clipspace(offset.xy);\n    varyings.position.x = clipPixels.x;\n    varyings.position.y = clipPixels.y;\n  } else {\n    let offset = edgePadding * attributes.positions * project_pixel_size_float(varyings.outerRadiusPixels);\n    // DECKGL_FILTER_SIZE(offset, geometry);\n    varyings.position = project_position_to_clipspace(attributes.instancePositions, attributes.instancePositions64Low, offset); // TODO , geometry.position);\n    // DECKGL_FILTER_GL_POSITION(varyings.position, geometry);\n  }\n\n  // Apply opacity to instance color, or return instance picking color\n  varyings.vFillColor = vec4<f32>(attributes.instanceFillColors.rgb, attributes.instanceFillColors.a * layer.opacity);\n  // DECKGL_FILTER_COLOR(varyings.vFillColor, geometry);\n  varyings.vLineColor = vec4<f32>(attributes.instanceLineColors.rgb, attributes.instanceLineColors.a * layer.opacity);\n  // DECKGL_FILTER_COLOR(varyings.vLineColor, geometry);\n\n  return varyings;\n}\n\n@fragment\nfn fragmentMain(varyings: Varyings) -> @location(0) vec4<f32> {\n  // var geometry: Geometry;\n  // geometry.uv = unitPosition;\n\n  let distToCenter = length(varyings.unitPosition) * varyings.outerRadiusPixels;\n  let inCircle = select(\n    smoothedge(distToCenter, varyings.outerRadiusPixels),\n    step(distToCenter, varyings.outerRadiusPixels),\n    scatterplot.antialiasing != 0\n  );\n\n  if (inCircle == 0.0) {\n    // discard;\n  }\n\n  var fragColor: vec4<f32>;\n\n  if (scatterplot.stroked != 0) {\n    let isLine = select(\n      smoothedge(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),\n      step(varyings.innerUnitRadius * varyings.outerRadiusPixels, distToCenter),\n      scatterplot.antialiasing != 0\n    );\n\n    if (scatterplot.filled != 0) {\n      fragColor = mix(varyings.vFillColor, varyings.vLineColor, isLine);\n    } else {\n      if (isLine == 0.0) {\n        // discard;\n      }\n      fragColor = vec4<f32>(varyings.vLineColor.rgb, varyings.vLineColor.a * isLine);\n    }\n  } else if (scatterplot.filled == 0) {\n    // discard;\n  } else {\n    fragColor = varyings.vFillColor;\n  }\n\n  fragColor.a *= inCircle;\n  // DECKGL_FILTER_COLOR(fragColor, geometry);\n\n  return fragColor;\n  // return vec4<f32>(0, 0, 1, 1);\n}\n',modules:[o.A,s.A,d]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceRadius:{size:1,transition:!0,accessor:"getRadius",defaultValue:1},instanceFillColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:this.props.colorFormat.length,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){var t;(super.updateState(e),e.changeFlags.extensionsChanged)&&(null==(t=this.state.model)||t.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw(e){let{uniforms:t}=e;const{radiusUnits:i,radiusScale:n,radiusMinPixels:o,radiusMaxPixels:s,stroked:a,filled:l,billboard:c,antialiasing:d,lineWidthUnits:u,lineWidthScale:p,lineWidthMinPixels:h,lineWidthMaxPixels:g}=this.props,f={stroked:a,filled:l,billboard:c,antialiasing:d,radiusUnits:r.p5[i],radiusScale:n,radiusMinPixels:o,radiusMaxPixels:s,lineWidthUnits:r.p5[u],lineWidthScale:p,lineWidthMinPixels:h,lineWidthMaxPixels:g},m=this.state.model;m.shaderInputs.setProps({scatterplot:f}),m.draw(this.context.renderPass)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-strip",attributes:{positions:{size:3,value:new Float32Array([-1,-1,0,1,-1,0,-1,1,0,1,1,0])}}}),isInstanced:!0}))}}h.defaultProps=p,h.layerName="ScatterplotLayer";const g=h},2714:(e,t,i)=>{"use strict";i.d(t,{$q:()=>f,A4:()=>c,Dt:()=>l,S8:()=>p});var n=i(29469),o=i(1746);const s=o.rJ.CLOCKWISE,r=o.rJ.COUNTER_CLOCKWISE,a={isClosed:!0};function l(e){return"positions"in e?e.positions:e}function c(e){return"holeIndices"in e?e.holeIndices:null}function d(e,t,i,n,s){let r=t;const l=i.length;for(let o=0;o<l;o++)for(let t=0;t<n;t++)e[r++]=i[o][t]||0;if(!function(e){const t=e[0],i=e[e.length-1];return t[0]===i[0]&&t[1]===i[1]&&t[2]===i[2]}(i))for(let o=0;o<n;o++)e[r++]=i[0][o]||0;return a.start=t,a.end=r,a.size=n,(0,o.UD)(e,s,a),r}function u(e,t,i,n,s,r,l){void 0===s&&(s=0);const c=(r=r||i.length)-s;if(c<=0)return t;let d=t;for(let o=0;o<c;o++)e[d++]=i[s+o];if(!function(e,t,i,n){for(let o=0;o<t;o++)if(e[i+o]!==e[n-t+o])return!1;return!0}(i,n,s,r))for(let o=0;o<n;o++)e[d++]=i[s+o];return a.start=t,a.end=d,a.size=n,(0,o.UD)(e,l,a),d}function p(e,t){!function(e){if(e=e&&e.positions||e,!Array.isArray(e)&&!ArrayBuffer.isView(e))throw new Error("invalid polygon")}(e);const i=[],n=[];if("positions"in e){const{positions:o,holeIndices:a}=e;if(a){let e=0;for(let l=0;l<=a.length;l++)e=u(i,e,o,t,a[l-1],a[l],0===l?s:r),n.push(e);return n.pop(),{positions:i,holeIndices:n}}e=o}if(!function(e){return Array.isArray(e[0])}(e))return u(i,0,e,t,0,i.length,s),i;if(!function(e){return e.length>=1&&e[0].length>=2&&Number.isFinite(e[0][0])}(e)){let o=0;for(const[a,l]of e.entries())o=d(i,o,l,t,0===a?s:r),n.push(o);return n.pop(),{positions:i,holeIndices:n}}return d(i,0,e,t,s),i}function h(e,t,i){const n=e.length/3;let o=0;for(let s=0;s<n;s++){const r=(s+1)%n;o+=e[3*s+t]*e[3*r+i],o-=e[3*r+t]*e[3*s+i]}return Math.abs(o/2)}function g(e,t,i,n){const o=e.length/3;for(let s=0;s<o;s++){const o=3*s,r=e[o+0],a=e[o+1],l=e[o+2];e[o+t]=r,e[o+i]=a,e[o+n]=l}}function f(e,t,i,o){let s=c(e);s&&(s=s.map((e=>e/t)));let r=l(e);const a=o&&3===t;if(i){const e=r.length;r=r.slice();const n=[];for(let o=0;o<e;o+=t){n[0]=r[o],n[1]=r[o+1],a&&(n[2]=r[o+2]);const e=i(n);r[o]=e[0],r[o+1]=e[1],a&&(r[o+2]=e[2])}}if(a){const e=h(r,0,1),t=h(r,0,2),n=h(r,1,2);if(!e&&!t&&!n)return[];e>t&&e>n||(t>n?(i||(r=r.slice()),g(r,0,2,1)):(i||(r=r.slice()),g(r,2,0,1)))}return(0,n.Ay)(r,s,t)}},39738:(e,t,i)=>{"use strict";i.d(t,{A:()=>S});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(71904),l=i(25337),c=i(37072),d=i(2714),u=i(50364),p=i(1746);class h extends u.A{constructor(e){const{fp64:t,IndexType:i=Uint32Array}=e;super(Object.assign({},e,{attributes:{positions:{size:3,type:t?Float64Array:Float32Array},vertexValid:{type:Uint16Array,size:1},indices:{type:i,size:1}}}))}get(e){const{attributes:t}=this;return"indices"===e?t.indices&&t.indices.subarray(0,this.vertexCount):t[e]}updateGeometry(e){super.updateGeometry(e);const t=this.buffers.indices;if(t)this.vertexCount=(t.value||t).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(e){if(this.normalize){const t=d.S8(e,this.positionSize);return this.opts.resolution?(0,p.wk)(d.Dt(t),d.A4(t),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,p.Eg)(d.Dt(t),d.A4(t),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):t}return e}getGeometrySize(e){if(g(e)){let t=0;for(const i of e)t+=this.getGeometrySize(i);return t}return d.Dt(e).length/this.positionSize}getGeometryFromBuffer(e){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(e):null}updateGeometryAttributes(e,t){if(e&&g(e))for(const i of e){const e=this.getGeometrySize(i);t.geometrySize=e,this.updateGeometryAttributes(i,t),t.vertexStart+=e,t.indexStart=this.indexStarts[t.geometryIndex+1]}else{const i=e;this._updateIndices(i,t),this._updatePositions(i,t),this._updateVertexValid(i,t)}}_updateIndices(e,t){let{geometryIndex:i,vertexStart:n,indexStart:o}=t;const{attributes:s,indexStarts:r,typedArrayManager:a}=this;let l=s.indices;if(!l||!e)return;let c=o;const u=d.$q(e,this.positionSize,this.opts.preproject,this.opts.full3d);l=a.allocate(l,o+u.length,{copy:!0});for(let d=0;d<u.length;d++)l[c++]=u[d]+n;r[i+1]=o+u.length,s.indices=l}_updatePositions(e,t){let{vertexStart:i,geometrySize:n}=t;const{attributes:{positions:o},positionSize:s}=this;if(!o||!e)return;const r=d.Dt(e);for(let a=i,l=0;l<n;a++,l++){const e=r[l*s],t=r[l*s+1],i=s>2?r[l*s+2]:0;o[3*a]=e,o[3*a+1]=t,o[3*a+2]=i}}_updateVertexValid(e,t){let{vertexStart:i,geometrySize:n}=t;const{positionSize:o}=this,s=this.attributes.vertexValid,r=e&&d.A4(e);if(e&&e.edgeTypes?s.set(e.edgeTypes,i):s.fill(1,i,i+n),r)for(let a=0;a<r.length;a++)s[i+r[a]/o-1]=0;s[i+n-1]=0}}function g(e){return Array.isArray(e)&&e.length>0&&!Number.isFinite(e[0])}const f="uniform solidPolygonUniforms {\n  bool extruded;\n  bool isWireframe;\n  float elevationScale;\n} solidPolygon;\n",m={name:"solidPolygon",vs:f,fs:f,uniformTypes:{extruded:"f32",isWireframe:"f32",elevationScale:"f32"}},v="in vec4 fillColors;\nin vec4 lineColors;\nin vec3 pickingColors;\nout vec4 vColor;\nstruct PolygonProps {\nvec3 positions;\nvec3 positions64Low;\nvec3 normal;\nfloat elevations;\n};\nvec3 project_offset_normal(vec3 vector) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\nreturn normalize(vector * project.commonUnitsPerWorldUnit);\n}\nreturn project_normal(vector);\n}\nvoid calculatePosition(PolygonProps props) {\nvec3 pos = props.positions;\nvec3 pos64Low = props.positions64Low;\nvec3 normal = props.normal;\nvec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;\ngeometry.worldPosition = props.positions;\ngeometry.pickingColor = pickingColors;\nif (solidPolygon.extruded) {\npos.z += props.elevations * solidPolygon.elevationScale;\n}\ngl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (solidPolygon.extruded) {\n#ifdef IS_SIDE_VERTEX\nnormal = project_offset_normal(normal);\n#else\nnormal = project_normal(normal);\n#endif\ngeometry.normal = normal;\nvec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, colors.a * layer.opacity);\n} else {\nvColor = vec4(colors.rgb, colors.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",y="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader\nin vec3 vertexPositions;\nin vec3 vertexPositions64Low;\nin float elevations;\n"+v+"\nvoid main(void) {\nPolygonProps props;\nprops.positions = vertexPositions;\nprops.positions64Low = vertexPositions64Low;\nprops.elevations = elevations;\nprops.normal = vec3(0.0, 0.0, 1.0);\ncalculatePosition(props);\n}\n",x="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n"+v+"\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = vertexPositions;\npos64Low = vertexPositions64Low;\nnextPos = nextVertexPositions;\nnextPos64Low = nextVertexPositions64Low;\n#else\npos = nextVertexPositions;\npos64Low = nextVertexPositions64Low;\nnextPos = vertexPositions;\nnextPos64Low = vertexPositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = elevations * positions.y;\ncalculatePosition(props);\n}\n",_=[0,0,0,255],b={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:e=>e.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:_},getLineColor:{type:"accessor",value:_},material:!0},w={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class P extends n.A{getShaders(e){return super.getShaders({vs:"top"===e?y:x,fs:"#version 300 es\n#define SHADER_NAME solid-polygon-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[o.A,c.J,s.A,m]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const{viewport:e}=this.context;let{coordinateSystem:t}=this.props;const{_full3d:i}=this.props;let n;e.isGeospatial&&t===r.rf.DEFAULT&&(t=r.rf.LNGLAT),t===r.rf.LNGLAT&&(n=i?e.projectPosition.bind(e):e.projectFlat.bind(e)),this.setState({numInstances:0,polygonTesselator:new h({preproject:n,fp64:this.use64bitPositions(),IndexType:Uint32Array})});const o=this.getAttributeManager(),s=!0;o.remove(["instancePickingColors"]),o.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:s},vertexPositions:{size:3,type:"float64",stepMode:"dynamic",fp64:this.use64bitPositions(),transition:w,accessor:"getPolygon",update:this.calculatePositions,noAlloc:s,shaderAttributes:{nextVertexPositions:{vertexOffset:1}}},instanceVertexValid:{size:1,type:"uint16",stepMode:"instance",update:this.calculateVertexValid,noAlloc:s},elevations:{size:1,stepMode:"dynamic",transition:w,accessor:"getElevation"},fillColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:w,accessor:"getFillColor",defaultValue:_},lineColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:w,accessor:"getLineColor",defaultValue:_},pickingColors:{size:4,type:"uint8",stepMode:"dynamic",accessor:(e,t)=>{let{index:i,target:n}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:i,n)}}})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i}=t,n=this.props.data;return n[0]&&n[0].__source&&(t.object=n.find((e=>e.__source.index===i))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let i=0;i<t.length;i++)t[i].__source.index===e&&this._disablePickingIndex(i);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{extruded:i,filled:n,wireframe:o,elevationScale:s}=this.props,{topModel:r,sideModel:a,wireframeModel:l,polygonTesselator:c}=this.state,d={extruded:Boolean(i),elevationScale:s,isWireframe:!1};l&&o&&(l.setInstanceCount(c.instanceCount-1),l.shaderInputs.setProps({solidPolygon:Object.assign({},d,{isWireframe:!0})}),l.draw(this.context.renderPass)),a&&n&&(a.setInstanceCount(c.instanceCount-1),a.shaderInputs.setProps({solidPolygon:d}),a.draw(this.context.renderPass)),r&&n&&(r.setVertexCount(c.vertexCount),r.shaderInputs.setProps({solidPolygon:d}),r.draw(this.context.renderPass))}updateState(e){super.updateState(e),this.updateGeometry(e);const{props:t,oldProps:i,changeFlags:n}=e,o=this.getAttributeManager();var s;(n.extensionsChanged||t.filled!==i.filled||t.extruded!==i.extruded)&&(null==(s=this.state.models)||s.forEach((e=>e.destroy())),this.setState(this._getModels()),o.invalidateAll())}updateGeometry(e){let{props:t,oldProps:i,changeFlags:n}=e;if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPolygon)){const{polygonTesselator:e}=this.state,i=t.data.attributes||{};e.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:i.getPolygon,buffers:i,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:n.dataChanged,full3d:t._full3d}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),n.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(){const{id:e,filled:t,extruded:i}=this.props;let n,o,s;if(t){const t=this.getShaders("top");t.defines.NON_INSTANCED_MODEL=1;const i=this.getAttributeManager().getBufferLayouts({isInstanced:!1});n=new a.K(this.context.device,Object.assign({},t,{id:e+"-top",topology:"triangle-list",bufferLayout:i,isIndexed:!0,userData:{excludeAttributes:{instanceVertexValid:!0}}}))}if(i){const t=this.getAttributeManager().getBufferLayouts({isInstanced:!0});o=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-side",bufferLayout:t,geometry:new l.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,1,1,0,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}})),s=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-wireframe",bufferLayout:t,geometry:new l.V({topology:"line-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}}))}return{models:[o,s,n].filter(Boolean),topModel:n,sideModel:o,wireframeModel:s}}calculateIndices(e){const{polygonTesselator:t}=this.state;e.startIndices=t.indexStarts,e.value=t.get("indices")}calculatePositions(e){const{polygonTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateVertexValid(e){e.value=this.state.polygonTesselator.get("vertexValid")}}P.defaultProps=b,P.layerName="SolidPolygonLayer";const S=P},50740:(e,t,i)=>{"use strict";i.d(t,{A:()=>d});var n=i(18120),o=i(78243);const s="uniform sdfUniforms {\n  float gamma;\n  bool enabled;\n  float buffer;\n  float outlineBuffer;\n  vec4 outlineColor;\n} sdf;\n",r={name:"sdf",vs:s,fs:s,uniformTypes:{gamma:"f32",enabled:"f32",buffer:"f32",outlineBuffer:"f32",outlineColor:"vec4<f32>"}},a=.75,l=[];class c extends o.A{getShaders(){const e=super.getShaders();return Object.assign({},e,{modules:[...e.modules,r],fs:"#version 300 es\n#define SHADER_NAME multi-icon-layer-fragment-shader\nprecision highp float;\nuniform sampler2D iconsTexture;\nin vec4 vColor;\nin vec2 vTextureCoords;\nin vec2 uv;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = uv;\nif (!bool(picking.isActive)) {\nfloat alpha = texture(iconsTexture, vTextureCoords).a;\nvec4 color = vColor;\nif (sdf.enabled) {\nfloat distance = alpha;\nalpha = smoothstep(sdf.buffer - sdf.gamma, sdf.buffer + sdf.gamma, distance);\nif (sdf.outlineBuffer > 0.0) {\nfloat inFill = alpha;\nfloat inBorder = smoothstep(sdf.outlineBuffer - sdf.gamma, sdf.outlineBuffer + sdf.gamma, distance);\ncolor = mix(sdf.outlineColor, vColor, inFill);\nalpha = inBorder;\n}\n}\nfloat a = alpha * color.a;\nif (a < icon.alphaCutoff) {\ndiscard;\n}\nfragColor = vec4(color.rgb, a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n"})}initializeState(){super.initializeState();this.getAttributeManager().addInstanced({instanceOffsets:{size:2,accessor:"getIconOffsets"},instancePickingColors:{type:"uint8",size:3,accessor:(e,t)=>{let{index:i,target:n}=t;return this.encodePickingColor(i,n)}}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e;let{outlineColor:o}=t;o!==i.outlineColor&&(o=o.map((e=>e/255)),o[3]=Number.isFinite(o[3])?o[3]:1,this.setState({outlineColor:o})),!t.sdf&&t.outlineWidth&&n.A.warn(this.id+": fontSettings.sdf is required to render outline")()}draw(e){const{sdf:t,smoothing:i,outlineWidth:n}=this.props,{outlineColor:o}=this.state,s=n?Math.max(i,a*(1-n)):-1,r=this.state.model,l={buffer:a,outlineBuffer:s,gamma:i,enabled:Boolean(t),outlineColor:o};if(r.shaderInputs.setProps({sdf:l}),super.draw(e),t&&n){const{iconManager:e}=this.state;e.getTexture()&&(r.shaderInputs.setProps({sdf:Object.assign({},l,{outlineBuffer:a})}),r.draw(this.context.renderPass))}}getInstanceOffset(e){return e?Array.from(e).flatMap((e=>super.getInstanceOffset(e))):l}getInstanceColorMode(e){return 1}getInstanceIconFrame(e){return e?Array.from(e).flatMap((e=>super.getInstanceIconFrame(e))):l}}c.defaultProps={getIconOffsets:{type:"accessor",value:e=>e.offsets},alphaCutoff:.001,smoothing:.1,outlineWidth:0,outlineColor:{type:"color",value:[0,0,0,255]}},c.layerName="MultiIconLayer";const d=c},47495:(e,t,i)=>{"use strict";i.d(t,{A:()=>h});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(25337),l=i(71904);const c="uniform textBackgroundUniforms {\n  bool billboard;\n  float sizeScale;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  vec4 borderRadius;\n  vec4 padding;\n  highp int sizeUnits;\n  bool stroked;\n} textBackground;\n",d={name:"textBackground",vs:c,fs:c,uniformTypes:{billboard:"f32",sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",borderRadius:"vec4<f32>",padding:"vec4<f32>",sizeUnits:"i32",stroked:"f32"}},u={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,borderRadius:{type:"object",value:0},padding:{type:"array",value:[0,0,0,0]},getPosition:{type:"accessor",value:e=>e.position},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getBoundingRect:{type:"accessor",value:[0,0,0,0]},getFillColor:{type:"accessor",value:[0,0,0,255]},getLineColor:{type:"accessor",value:[0,0,0,255]},getLineWidth:{type:"accessor",value:1}};class p extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME text-background-layer-vertex-shader\nin vec2 positions;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceRects;\nin float instanceSizes;\nin float instanceAngles;\nin vec2 instancePixelOffsets;\nin float instanceLineWidths;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin vec3 instancePickingColors;\nout vec4 vFillColor;\nout vec4 vLineColor;\nout float vLineWidth;\nout vec2 uv;\nout vec2 dimensions;\nvec2 rotate_by_angle(vec2 vertex, float angle) {\nfloat angle_radian = radians(angle);\nfloat cos_angle = cos(angle_radian);\nfloat sin_angle = sin(angle_radian);\nmat2 rotationMatrix = mat2(cos_angle, -sin_angle, sin_angle, cos_angle);\nreturn rotationMatrix * vertex;\n}\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = positions;\ngeometry.pickingColor = instancePickingColors;\nuv = positions;\nvLineWidth = instanceLineWidths;\nfloat sizePixels = clamp(\nproject_size_to_pixel(instanceSizes * textBackground.sizeScale, textBackground.sizeUnits),\ntextBackground.sizeMinPixels, textBackground.sizeMaxPixels\n);\ndimensions = instanceRects.zw * sizePixels + textBackground.padding.xy + textBackground.padding.zw;\nvec2 pixelOffset = (positions * instanceRects.zw + instanceRects.xy) * sizePixels + mix(-textBackground.padding.xy, textBackground.padding.zw, positions);\npixelOffset = rotate_by_angle(pixelOffset, instanceAngles);\npixelOffset += instancePixelOffsets;\npixelOffset.y *= -1.0;\nif (textBackground.billboard)  {\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvec3 offset = vec3(pixelOffset, 0.0);\nDECKGL_FILTER_SIZE(offset, geometry);\ngl_Position.xy += project_pixel_size_to_clipspace(offset.xy);\n} else {\nvec3 offset_common = vec3(project_pixel_size(pixelOffset), 0.0);\nDECKGL_FILTER_SIZE(offset_common, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, offset_common, geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nvFillColor = vec4(instanceFillColors.rgb, instanceFillColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vFillColor, geometry);\nvLineColor = vec4(instanceLineColors.rgb, instanceLineColors.a * layer.opacity);\nDECKGL_FILTER_COLOR(vLineColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME text-background-layer-fragment-shader\nprecision highp float;\nin vec4 vFillColor;\nin vec4 vLineColor;\nin float vLineWidth;\nin vec2 uv;\nin vec2 dimensions;\nout vec4 fragColor;\nfloat round_rect(vec2 p, vec2 size, vec4 radii) {\nvec2 pixelPositionCB = (p - 0.5) * size;\nvec2 sizeCB = size * 0.5;\nfloat maxBorderRadius = min(size.x, size.y) * 0.5;\nvec4 borderRadius = vec4(min(radii, maxBorderRadius));\nborderRadius.xy =\n(pixelPositionCB.x > 0.0) ? borderRadius.xy : borderRadius.zw;\nborderRadius.x = (pixelPositionCB.y > 0.0) ? borderRadius.x : borderRadius.y;\nvec2 q = abs(pixelPositionCB) - sizeCB + borderRadius.x;\nreturn -(min(max(q.x, q.y), 0.0) + length(max(q, 0.0)) - borderRadius.x);\n}\nfloat rect(vec2 p, vec2 size) {\nvec2 pixelPosition = p * size;\nreturn min(min(pixelPosition.x, size.x - pixelPosition.x),\nmin(pixelPosition.y, size.y - pixelPosition.y));\n}\nvec4 get_stroked_fragColor(float dist) {\nfloat isBorder = smoothedge(dist, vLineWidth);\nreturn mix(vFillColor, vLineColor, isBorder);\n}\nvoid main(void) {\ngeometry.uv = uv;\nif (textBackground.borderRadius != vec4(0.0)) {\nfloat distToEdge = round_rect(uv, dimensions, textBackground.borderRadius);\nif (textBackground.stroked) {\nfragColor = get_stroked_fragColor(distToEdge);\n} else {\nfragColor = vFillColor;\n}\nfloat shapeAlpha = smoothedge(-distToEdge, 0.0);\nfragColor.a *= shapeAlpha;\n} else {\nif (textBackground.stroked) {\nfloat distToEdge = rect(uv, dimensions);\nfragColor = get_stroked_fragColor(distToEdge);\n} else {\nfragColor = vFillColor;\n}\n}\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.A,d]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instanceRects:{size:4,accessor:"getBoundingRect"},instancePixelOffsets:{size:2,transition:!0,accessor:"getPixelOffset"},instanceFillColors:{size:4,transition:!0,type:"unorm8",accessor:"getFillColor",defaultValue:[0,0,0,255]},instanceLineColors:{size:4,transition:!0,type:"unorm8",accessor:"getLineColor",defaultValue:[0,0,0,255]},instanceLineWidths:{size:1,transition:!0,accessor:"getLineWidth",defaultValue:1}})}updateState(e){super.updateState(e);const{changeFlags:t}=e;var i;t.extensionsChanged&&(null==(i=this.state.model)||i.destroy(),this.state.model=this._getModel(),this.getAttributeManager().invalidateAll())}draw(e){let{uniforms:t}=e;const{billboard:i,sizeScale:n,sizeUnits:o,sizeMinPixels:s,sizeMaxPixels:a,getLineWidth:l}=this.props;let{padding:c,borderRadius:d}=this.props;c.length<4&&(c=[c[0],c[1],c[0],c[1]]),Array.isArray(d)||(d=[d,d,d,d]);const u=this.state.model,p={billboard:i,stroked:Boolean(l),borderRadius:d,padding:c,sizeUnits:r.p5[o],sizeScale:n,sizeMinPixels:s,sizeMaxPixels:a};u.shaderInputs.setProps({textBackground:p}),u.draw(this.context.renderPass)}_getModel(){return new l.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new a.V({topology:"triangle-strip",vertexCount:4,attributes:{positions:{size:2,value:new Float32Array([0,0,1,0,0,1,1,1])}}}),isInstanced:!0}))}}p.defaultProps=u,p.layerName="TextBackgroundLayer";const h=p},83667:(e,t,i)=>{"use strict";i.d(t,{A:()=>C});var n=i(33847),o=i(18120),s=i(33698),r=i(50740),a=i(75228);const l=[];function c(e,t,i,n){let o=0;for(let r=t;r<i;r++){var s;o+=(null==(s=n[e[r]])?void 0:s.layoutWidth)||0}return o}function d(e,t,i,n,o,s){let r=t,a=0;for(let l=t;l<i;l++){const t=c(e,l,l+1,o);a+t>n&&(r<l&&s.push(l),r=l,a=0),a+=t}return a}function u(e,t,i,n,o,s){void 0===o&&(o=0),void 0===s&&(s=e.length);const r=[];return"break-all"===t?d(e,o,s,i,n,r):function(e,t,i,n,o,s){let r=t,a=t,l=t,u=0;for(let p=t;p<i;p++)if(" "===e[p]?l=p+1:" "!==e[p+1]&&p+1!==i||(l=p+1),l>a){let t=c(e,a,l,o);u+t>n&&(r<a&&(s.push(a),r=a,u=0),t>n&&(t=d(e,a,l,n,o,s),r=s[s.length-1])),a=l,u+=t}}(e,o,s,i,n,r),r}function p(e,t,i,n,s,r){let a=0,l=0;for(let c=t;c<i;c++){const t=e[c],i=n[t];i?(l||(l=i.layoutHeight),s[c]=a+i.layoutWidth/2,a+=i.layoutWidth):(o.A.warn("Missing character: "+t+" ("+t.codePointAt(0)+")")(),s[c]=a,a+=32)}r[0]=a,r[1]=l}class h{constructor(e){void 0===e&&(e=5),this._cache={},this._order=[],this.limit=e}get(e){const t=this._cache[e];return t&&(this._deleteOrder(e),this._appendOrder(e)),t}set(e,t){this._cache[e]?(this.delete(e),this._cache[e]=t,this._appendOrder(e)):(Object.keys(this._cache).length===this.limit&&this.delete(this._order[0]),this._cache[e]=t,this._appendOrder(e))}delete(e){this._cache[e]&&(delete this._cache[e],this._deleteOrder(e))}_deleteOrder(e){const t=this._order.indexOf(e);t>=0&&this._order.splice(t,1)}_appendOrder(e){this._order.push(e)}}const g={fontFamily:"Monaco, monospace",fontWeight:"normal",characterSet:function(){const e=[];for(let t=32;t<128;t++)e.push(String.fromCharCode(t));return e}(),fontSize:64,buffer:4,sdf:!1,cutoff:.25,radius:12,smoothing:.1};let f=new h(3);function m(e,t){for(let i=0;i<e.length;i++)t.data[4*i+3]=e[i]}function v(e,t,i,n){e.font=n+" "+i+"px "+t,e.fillStyle="#000",e.textBaseline="alphabetic",e.textAlign="left"}class y{constructor(){this.props=Object.assign({},g)}get atlas(){return this._atlas}get mapping(){return this._atlas&&this._atlas.mapping}get scale(){const{fontSize:e,buffer:t}=this.props;return(1.2*e+2*t)/e}setProps(e){void 0===e&&(e={}),Object.assign(this.props,e),this._key=this._getKey();const t=function(e,t){let i;i="string"==typeof t?new Set(Array.from(t)):new Set(t);const n=f.get(e);if(!n)return i;for(const o in n.mapping)i.has(o)&&i.delete(o);return i}(this._key,this.props.characterSet),i=f.get(this._key);if(i&&0===t.size)return void(this._atlas!==i&&(this._atlas=i));const n=this._generateFontAtlas(t,i);this._atlas=n,f.set(this._key,n)}_generateFontAtlas(e,t){const{fontFamily:i,fontWeight:n,fontSize:o,buffer:s,sdf:r,radius:l,cutoff:c}=this.props;let d=t&&t.data;d||(d=document.createElement("canvas"),d.width=1024);const u=d.getContext("2d",{willReadFrequently:!0});v(u,i,o,n);const{mapping:p,canvasHeight:h,xOffset:g,yOffset:f}=function(e){let{characterSet:t,getFontWidth:i,fontHeight:n,buffer:o,maxCanvasWidth:s,mapping:r={},xOffset:a=0,yOffset:l=0}=e,c=0,d=a;const u=n+2*o;for(const h of t)if(!r[h]){const e=i(h);d+e+2*o>s&&(d=0,c++),r[h]={x:d+o,y:l+c*u+o,width:e,height:u,layoutWidth:e,layoutHeight:n},d+=e+2*o}return{mapping:r,xOffset:d,yOffset:l+c*u,canvasHeight:(p=l+(c+1)*u,Math.pow(2,Math.ceil(Math.log2(p))))};var p}(Object.assign({getFontWidth:e=>u.measureText(e).width,fontHeight:1.2*o,buffer:s,characterSet:e,maxCanvasWidth:1024},t&&{mapping:t.mapping,xOffset:t.xOffset,yOffset:t.yOffset}));if(d.height!==h){const e=u.getImageData(0,0,d.width,d.height);d.height=h,u.putImageData(e,0,0)}if(v(u,i,o,n),r){const t=new a.A({fontSize:o,buffer:s,radius:l,cutoff:c,fontFamily:i,fontWeight:""+n});for(const i of e){const{data:e,width:n,height:s,glyphTop:r}=t.draw(i);p[i].width=n,p[i].layoutOffsetY=.9*o-r;const a=u.createImageData(n,s);m(e,a),u.putImageData(a,p[i].x,p[i].y)}}else for(const a of e)u.fillText(a,p[a].x,p[a].y+s+.9*o);return{xOffset:g,yOffset:f,mapping:p,data:d,width:d.width,height:d.height}}_getKey(){const{fontFamily:e,fontWeight:t,fontSize:i,buffer:n,sdf:o,radius:s,cutoff:r}=this.props;return o?e+" "+t+" "+i+" "+n+" "+s+" "+r:e+" "+t+" "+i+" "+n}}var x=i(47495);const _={start:1,middle:0,end:-1},b={top:1,center:0,bottom:-1},w=[0,0,0,255],P={billboard:!0,sizeScale:1,sizeUnits:"pixels",sizeMinPixels:0,sizeMaxPixels:Number.MAX_SAFE_INTEGER,background:!1,getBackgroundColor:{type:"accessor",value:[255,255,255,255]},getBorderColor:{type:"accessor",value:w},getBorderWidth:{type:"accessor",value:0},backgroundBorderRadius:{type:"object",value:0},backgroundPadding:{type:"array",value:[0,0,0,0]},characterSet:{type:"object",value:g.characterSet},fontFamily:g.fontFamily,fontWeight:g.fontWeight,lineHeight:1,outlineWidth:{type:"number",value:0,min:0},outlineColor:{type:"color",value:w},fontSettings:{type:"object",value:{},compare:1},wordBreak:"break-word",maxWidth:{type:"number",value:-1},getText:{type:"accessor",value:e=>e.text},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:w},getSize:{type:"accessor",value:32},getAngle:{type:"accessor",value:0},getTextAnchor:{type:"accessor",value:"middle"},getAlignmentBaseline:{type:"accessor",value:"center"},getPixelOffset:{type:"accessor",value:[0,0]},backgroundColor:{deprecatedFor:["background","getBackgroundColor"]}};class S extends n.A{constructor(){super(...arguments),this.getBoundingRect=(e,t)=>{let{size:[i,n]}=this.transformParagraph(e,t);const{fontSize:o}=this.state.fontAtlasManager.props;i/=o,n/=o;const{getTextAnchor:s,getAlignmentBaseline:r}=this.props;return[(_["function"==typeof s?s(e,t):s]-1)*i/2,(b["function"==typeof r?r(e,t):r]-1)*n/2,i,n]},this.getIconOffsets=(e,t)=>{const{getTextAnchor:i,getAlignmentBaseline:n}=this.props,{x:o,y:s,rowWidth:r,size:[a,l]}=this.transformParagraph(e,t),c=_["function"==typeof i?i(e,t):i],d=b["function"==typeof n?n(e,t):n],u=o.length,p=new Array(2*u);let h=0;for(let g=0;g<u;g++){const e=(1-c)*(a-r[g])/2;p[h++]=(c-1)*a/2+e+o[g],p[h++]=(d-1)*l/2+s[g]}return p}}initializeState(){this.state={styleVersion:0,fontAtlasManager:new y},this.props.maxWidth>0&&o.A.once(1,"v8.9 breaking change: TextLayer maxWidth is now relative to text size")()}updateState(e){const{props:t,oldProps:i,changeFlags:n}=e;(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getText))&&this._updateText();(this._updateFontAtlas()||t.lineHeight!==i.lineHeight||t.wordBreak!==i.wordBreak||t.maxWidth!==i.maxWidth)&&this.setState({styleVersion:this.state.styleVersion+1})}getPickingInfo(e){let{info:t}=e;return t.object=t.index>=0?this.props.data[t.index]:null,t}_updateFontAtlas(){const{fontSettings:e,fontFamily:t,fontWeight:i}=this.props,{fontAtlasManager:n,characterSet:o}=this.state,s=Object.assign({},e,{characterSet:o,fontFamily:t,fontWeight:i});if(!n.mapping)return n.setProps(s),!0;for(const r in s)if(s[r]!==n.props[r])return n.setProps(s),!0;return!1}_updateText(){var e;const{data:t,characterSet:i}=this.props,n=null==(e=t.attributes)?void 0:e.getText;let o,{getText:r}=this.props,a=t.startIndices;const l="auto"===i&&new Set;if(n&&a){const{texts:e,characterCount:i}=function(e){let{value:t,length:i,stride:n,offset:o,startIndices:s,characterSet:r}=e;const a=t.BYTES_PER_ELEMENT,l=n?n/a:1,c=o?o/a:0,d=s[i]||Math.ceil((t.length-c)/l),u=r&&new Set,p=new Array(i);let h=t;if(l>1||c>0){h=new(0,t.constructor)(d);for(let e=0;e<d;e++)h[e]=t[e*l+c]}for(let g=0;g<i;g++){const e=s[g],t=s[g+1]||d,i=h.subarray(e,t);p[g]=String.fromCodePoint.apply(null,i),u&&i.forEach(u.add,u)}if(u)for(const g of u)r.add(String.fromCodePoint(g));return{texts:p,characterCount:d}}(Object.assign({},ArrayBuffer.isView(n)?{value:n}:n,{length:t.length,startIndices:a,characterSet:l}));o=i,r=(t,i)=>{let{index:n}=i;return e[n]}}else{const{iterable:e,objectInfo:i}=(0,s.X)(t);a=[0],o=0;for(const t of e){i.index++;const e=Array.from(r(t,i)||"");l&&e.forEach(l.add,l),o+=e.length,a.push(o)}}this.setState({getText:r,startIndices:a,numInstances:o,characterSet:l||i})}transformParagraph(e,t){const{fontAtlasManager:i}=this.state,n=i.mapping,o=this.state.getText,{wordBreak:s,lineHeight:r,maxWidth:a}=this.props;return function(e,t,i,n,o){const s=Array.from(e),r=s.length,a=new Array(r),c=new Array(r),d=new Array(r),h=("break-word"===i||"break-all"===i)&&isFinite(n)&&n>0,g=[0,0],f=[0,0];let m=0,v=0,y=0;for(let _=0;_<=r;_++){const e=s[_];if("\n"!==e&&_!==r||(y=_),y>v){const e=h?u(s,i,n,o,v,y):l;for(let i=0;i<=e.length;i++){const n=0===i?v:e[i-1],r=i<e.length?e[i]:y;p(s,n,r,o,a,f);for(let e=n;e<r;e++){var x;a[e];const t=(null==(x=o[s[e]])?void 0:x.layoutOffsetY)||0;c[e]=m+f[1]/2+t,d[e]=f[0]}m+=f[1]*t,g[0]=Math.max(g[0],f[0])}v=y}"\n"===e&&(a[v]=0,c[v]=0,d[v]=0,v++)}return g[1]=m,{x:a,y:c,rowWidth:d,size:g}}(o(e,t)||"",r,s,a*i.props.fontSize,n)}renderLayers(){const{startIndices:e,numInstances:t,getText:i,fontAtlasManager:{scale:n,atlas:o,mapping:s},styleVersion:a}=this.state,{data:l,_dataDiff:c,getPosition:d,getColor:u,getSize:p,getAngle:h,getPixelOffset:f,getBackgroundColor:m,getBorderColor:v,getBorderWidth:y,backgroundBorderRadius:_,backgroundPadding:b,background:w,billboard:P,fontSettings:S,outlineWidth:C,outlineColor:A,sizeScale:M,sizeUnits:T,sizeMinPixels:L,sizeMaxPixels:O,transitions:I,updateTriggers:E}=this.props,R=this.getSubLayerClass("characters",r.A),z=this.getSubLayerClass("background",x.A);return[w&&new z({getFillColor:m,getLineColor:v,getLineWidth:y,borderRadius:_,padding:b,getPosition:d,getSize:p,getAngle:h,getPixelOffset:f,billboard:P,sizeScale:M,sizeUnits:T,sizeMinPixels:L,sizeMaxPixels:O,transitions:I&&{getPosition:I.getPosition,getAngle:I.getAngle,getSize:I.getSize,getFillColor:I.getBackgroundColor,getLineColor:I.getBorderColor,getLineWidth:I.getBorderWidth,getPixelOffset:I.getPixelOffset}},this.getSubLayerProps({id:"background",updateTriggers:{getPosition:E.getPosition,getAngle:E.getAngle,getSize:E.getSize,getFillColor:E.getBackgroundColor,getLineColor:E.getBorderColor,getLineWidth:E.getBorderWidth,getPixelOffset:E.getPixelOffset,getBoundingRect:{getText:E.getText,getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l.attributes&&l.attributes.background?{length:l.length,attributes:l.attributes.background}:l,_dataDiff:c,autoHighlight:!1,getBoundingRect:this.getBoundingRect}),new R({sdf:S.sdf,smoothing:Number.isFinite(S.smoothing)?S.smoothing:g.smoothing,outlineWidth:C/(S.radius||g.radius),outlineColor:A,iconAtlas:o,iconMapping:s,getPosition:d,getColor:u,getSize:p,getAngle:h,getPixelOffset:f,billboard:P,sizeScale:M*n,sizeUnits:T,sizeMinPixels:L*n,sizeMaxPixels:O*n,transitions:I&&{getPosition:I.getPosition,getAngle:I.getAngle,getColor:I.getColor,getSize:I.getSize,getPixelOffset:I.getPixelOffset}},this.getSubLayerProps({id:"characters",updateTriggers:{all:E.getText,getPosition:E.getPosition,getAngle:E.getAngle,getColor:E.getColor,getSize:E.getSize,getPixelOffset:E.getPixelOffset,getIconOffsets:{getTextAnchor:E.getTextAnchor,getAlignmentBaseline:E.getAlignmentBaseline,styleVersion:a}}}),{data:l,_dataDiff:c,startIndices:e,numInstances:t,getIconOffsets:this.getIconOffsets,getIcon:i})]}static set fontAtlasCacheLimit(e){!function(e){o.A.assert(Number.isFinite(e)&&e>=3,"Invalid cache limit"),f=new h(e)}(e)}}S.defaultProps=P,S.layerName="TextLayer";const C=S},33822:(e,t,i)=>{"use strict";function n(e){let{data:t,getIndex:i,dataRange:n,replace:o}=e;const{startRow:s=0,endRow:r=1/0}=n,a=t.length;let l=a,c=a;for(let p=0;p<a;p++){const e=i(t[p]);if(l>p&&e>=s&&(l=p),e>=r){c=p;break}}let d=l;const u=c-l!==o.length?t.slice(c):void 0;for(let p=0;p<o.length;p++)t[d++]=o[p];if(u){for(let e=0;e<u.length;e++)t[d++]=u[e];t.length=d}return{startRow:l,endRow:l+o.length}}i.d(t,{J:()=>n})},49954:(e,t,i)=>{"use strict";i.d(t,{A:()=>b});var n=i(3002),o=i(30428),s=i(28756),r=i(18120),a=i(23951),l=i(44710),c=i(19475),d=i(64493),u=i(11371),p=i(78750),h=i(59737);async function g(e){const t=[];return e.scenes.forEach((e=>{e.traverse((e=>{Object.values(e.model.uniforms).forEach((e=>{!1===e.loaded&&t.push(e)}))}))})),await async function(e){for(;e();)await new Promise((e=>requestAnimationFrame(e)))}((()=>t.some((e=>!e.loaded))))}var f=i(27504);const m="uniform scenegraphUniforms {\n  float sizeScale;\n  float sizeMinPixels;\n  float sizeMaxPixels;\n  mat4 sceneModelMatrix;\n  bool composeModelMatrix;\n} scenegraph;\n",v={name:"scenegraph",vs:m,fs:m,uniformTypes:{sizeScale:"f32",sizeMinPixels:"f32",sizeMaxPixels:"f32",sceneModelMatrix:"mat4x4<f32>",composeModelMatrix:"f32"}},y=[255,255,255,255],x={scenegraph:{type:"object",value:null,async:!0},getScene:e=>e&&e.scenes?"object"==typeof e.scene?e.scene:e.scenes[e.scene||0]:e,getAnimator:e=>e&&e.animator,_animations:null,sizeScale:{type:"number",value:1,min:0},sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:y},_lighting:"flat",_imageBasedLightingEnvironment:void 0,getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},loaders:[p.B]};class _ extends n.A{getShaders(){const e={};let t;"pbr"===this.props._lighting?(t=a.s,e.LIGHTING_PBR=1):t={name:"pbrMaterial"};const i=[o.A,s.A,v,t];return super.getShaders({defines:e,vs:"#version 300 es\n#define SHADER_NAME scenegraph-layer-vertex-shader\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nin vec3 positions;\n#ifdef HAS_UV\nin vec2 texCoords;\n#endif\n#ifdef LIGHTING_PBR\n#ifdef HAS_NORMALS\nin vec3 normals;\n#endif\n#endif\nout vec4 vColor;\n#ifndef LIGHTING_PBR\n#ifdef HAS_UV\nout vec2 vTEXCOORD_0;\n#endif\n#endif\nvoid main(void) {\n#if defined(HAS_UV) && !defined(LIGHTING_PBR)\nvTEXCOORD_0 = texCoords;\ngeometry.uv = texCoords;\n#endif\ngeometry.worldPosition = instancePositions;\ngeometry.pickingColor = instancePickingColors;\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 normal = vec3(0.0, 0.0, 1.0);\n#ifdef LIGHTING_PBR\n#ifdef HAS_NORMALS\nnormal = instanceModelMatrix * (scenegraph.sceneModelMatrix * vec4(normals, 0.0)).xyz;\n#endif\n#endif\nfloat originalSize = project_size_to_pixel(scenegraph.sizeScale);\nfloat clampedSize = clamp(originalSize, scenegraph.sizeMinPixels, scenegraph.sizeMaxPixels);\nvec3 pos = (instanceModelMatrix * (scenegraph.sceneModelMatrix * vec4(positions, 1.0)).xyz) * scenegraph.sizeScale * (clampedSize / originalSize) + instanceTranslation;\nif(scenegraph.composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\ngeometry.normal = project_normal(normal);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), geometry.position);\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, geometry.position);\ngeometry.normal = project_normal(normal);\n}\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n#ifdef LIGHTING_PBR\npbr_vPosition = geometry.position.xyz;\n#ifdef HAS_NORMALS\npbr_vNormal = geometry.normal;\n#endif\n#ifdef HAS_UV\npbr_vUV = texCoords;\n#else\npbr_vUV = vec2(0., 0.);\n#endif\ngeometry.uv = pbr_vUV;\n#endif\nvColor = instanceColors;\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME scenegraph-layer-fragment-shader\nin vec4 vColor;\nout vec4 fragColor;\n#ifndef LIGHTING_PBR\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nin vec2 vTEXCOORD_0;\nuniform sampler2D pbr_baseColorSampler;\n#endif\n#endif\nvoid main(void) {\n#ifdef LIGHTING_PBR\nfragColor = vColor * pbr_filterColor(vec4(0));\ngeometry.uv = pbr_vUV;\n#else\n#if defined(HAS_UV) && defined(HAS_BASECOLORMAP)\nfragColor = vColor * texture(pbr_baseColorSampler, vTEXCOORD_0);\ngeometry.uv = vTEXCOORD_0;\n#else\nfragColor = vColor;\n#endif\n#endif\nfragColor.a *= layer.opacity;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:i})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),accessor:"getPosition",transition:!0},instanceColors:{type:"unorm8",size:this.props.colorFormat.length,accessor:"getColor",defaultValue:y,transition:!0},instanceModelMatrix:f.U})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e;t.scenegraph!==i.scenegraph?this._updateScenegraph():t._animations!==i._animations&&this._applyAnimationsProp(this.state.animator,t._animations)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.scenegraph)||t.destroy()}get isLoaded(){var e;return Boolean((null==(e=this.state)?void 0:e.scenegraph)&&super.isLoaded)}_updateScenegraph(){const e=this.props,{device:t}=this.context;let i=null;if(e.scenegraph instanceof l.V)i={scenes:[e.scenegraph]};else if(e.scenegraph&&"object"==typeof e.scenegraph){const n=e.scenegraph,o=n.json?(0,h.R)(n):n,s=(0,u.v)(t,o,this._getModelOptions());i=Object.assign({gltf:o},s),g(s).then((()=>{this.setNeedsRedraw()})).catch((e=>{this.raiseError(e,"loading glTF")}))}const n={layer:this,device:this.context.device},o=e.getScene(i,n),s=e.getAnimator(i,n);if(o instanceof c.o){var a;null==(a=this.state.scenegraph)||a.destroy(),this._applyAnimationsProp(s,e._animations);const t=[];o.traverse((e=>{e instanceof d.s&&t.push(e.model)})),this.setState({scenegraph:o,animator:s,models:t}),this.getAttributeManager().invalidateAll()}else null!==o&&r.A.warn("invalid scenegraph:",o)()}_applyAnimationsProp(e,t){if(!e||!t)return;const i=e.getAnimations();Object.keys(t).sort().forEach((e=>{const n=t[e];if("*"===e)i.forEach((e=>{Object.assign(e,n)}));else if(Number.isFinite(Number(e))){const t=Number(e);t>=0&&t<i.length?Object.assign(i[t],n):r.A.warn("animation "+e+" not found")()}else{const t=i.find((t=>{let{name:i}=t;return i===e}));t?Object.assign(t,n):r.A.warn("animation "+e+" not found")()}}))}_getModelOptions(){const{_imageBasedLightingEnvironment:e}=this.props;let t;return e&&(t="function"==typeof e?e({gl:this.context.gl,layer:this}):e),{imageBasedLightingEnvironment:t,modelOptions:Object.assign({id:this.props.id,isInstanced:!0,bufferLayout:this.getAttributeManager().getBufferLayouts()},this.getShaders()),useTangents:!1}}draw(e){let{context:t}=e;if(!this.state.scenegraph)return;this.props._animations&&this.state.animator&&(this.state.animator.animate(t.timeline.getTime()),this.setNeedsRedraw());const{viewport:i,renderPass:n}=this.context,{sizeScale:o,sizeMinPixels:s,sizeMaxPixels:r,coordinateSystem:a}=this.props,l=this.getNumInstances();this.state.scenegraph.traverse(((e,t)=>{let{worldMatrix:c}=t;if(e instanceof d.s){const{model:t}=e;t.setInstanceCount(l);const d={camera:t.uniforms.cameraPosition},u={sizeScale:o,sizeMinPixels:s,sizeMaxPixels:r,composeModelMatrix:(0,f.w)(i,a),sceneModelMatrix:c};t.shaderInputs.setProps({pbrProjection:d,scenegraph:u}),t.draw(n)}}))}}_.defaultProps=x,_.layerName="ScenegraphLayer";const b=_},20624:(e,t,i)=>{"use strict";i.d(t,{A:()=>x});var n=i(18120),o=i(3002),s=i(30428),r=i(28756),a=i(80698),l=i(25337),c=i(71904),d=i(31338),u=i(27504);const p="uniform simpleMeshUniforms {\n  float sizeScale;\n  bool composeModelMatrix;\n  bool hasTexture;\n  bool flatShading;\n} simpleMesh;\n",h={name:"simpleMesh",vs:p,fs:p,uniformTypes:{sizeScale:"f32",composeModelMatrix:"f32",hasTexture:"f32",flatShading:"f32"}};var g=i(35983);function f(e){const t=e.positions||e.POSITION;n.A.assert(t,'no "postions" or "POSITION" attribute in mesh');const i=t.value.length/t.size;let o=e.COLOR_0||e.colors;o||(o={size:3,value:new Float32Array(3*i).fill(1)});let s=e.NORMAL||e.normals;s||(s={size:3,value:new Float32Array(3*i).fill(0)});let r=e.TEXCOORD_0||e.texCoords;return r||(r={size:2,value:new Float32Array(2*i).fill(0)}),{positions:t,colors:o,normals:s,texCoords:r}}function m(e){return e instanceof l.V?(e.attributes=f(e.attributes),e):e.attributes?new l.V(Object.assign({},e,{topology:"triangle-list",attributes:f(e.attributes)})):new l.V({topology:"triangle-list",attributes:f(e)})}const v={mesh:{type:"object",value:null,async:!0},texture:{type:"image",value:null,async:!0},sizeScale:{type:"number",value:1,min:0},_instanced:!0,wireframe:!1,material:!0,getPosition:{type:"accessor",value:e=>e.position},getColor:{type:"accessor",value:[0,0,0,255]},getOrientation:{type:"accessor",value:[0,0,0]},getScale:{type:"accessor",value:[1,1,1]},getTranslation:{type:"accessor",value:[0,0,0]},getTransformMatrix:{type:"accessor",value:[]},textureParameters:{type:"object",ignore:!0,value:null}};class y extends o.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-vs\nin vec3 positions;\nin vec3 normals;\nin vec3 colors;\nin vec2 texCoords;\nin vec3 instancePositions;\nin vec3 instancePositions64Low;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nin vec3 instanceModelMatrixCol0;\nin vec3 instanceModelMatrixCol1;\nin vec3 instanceModelMatrixCol2;\nin vec3 instanceTranslation;\nout vec2 vTexCoord;\nout vec3 cameraPosition;\nout vec3 normals_commonspace;\nout vec4 position_commonspace;\nout vec4 vColor;\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\ngeometry.uv = texCoords;\ngeometry.pickingColor = instancePickingColors;\nvTexCoord = texCoords;\ncameraPosition = project.cameraPosition;\nvColor = vec4(colors * instanceColors.rgb, instanceColors.a);\nmat3 instanceModelMatrix = mat3(instanceModelMatrixCol0, instanceModelMatrixCol1, instanceModelMatrixCol2);\nvec3 pos = (instanceModelMatrix * positions) * simpleMesh.sizeScale + instanceTranslation;\nif (simpleMesh.composeModelMatrix) {\nDECKGL_FILTER_SIZE(pos, geometry);\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\ngeometry.worldPosition += pos;\ngl_Position = project_position_to_clipspace(pos + instancePositions, instancePositions64Low, vec3(0.0), position_commonspace);\ngeometry.position = position_commonspace;\n}\nelse {\npos = project_size(pos);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(instancePositions, instancePositions64Low, pos, position_commonspace);\ngeometry.position = position_commonspace;\nnormals_commonspace = project_normal(instanceModelMatrix * normals);\n}\ngeometry.normal = normals_commonspace;\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME simple-mesh-layer-fs\nprecision highp float;\nuniform sampler2D sampler;\nin vec2 vTexCoord;\nin vec3 cameraPosition;\nin vec3 normals_commonspace;\nin vec4 position_commonspace;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vTexCoord;\nvec3 normal;\nif (simpleMesh.flatShading) {\nnormal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\n} else {\nnormal = normals_commonspace;\n}\nvec4 color = simpleMesh.hasTexture ? texture(sampler, vTexCoord) : vColor;\nDECKGL_FILTER_COLOR(color, geometry);\nvec3 lightColor = lighting_getLightColor(color.rgb, cameraPosition, position_commonspace.xyz, normal);\nfragColor = vec4(lightColor, color.a * layer.opacity);\n}\n",modules:[s.A,d.w,r.A,h]})}getBounds(){var e;if(this.props._instanced)return super.getBounds();let t=this.state.positionBounds;if(t)return t;const{mesh:i}=this.props;if(!i)return null;if(t=null==(e=i.header)?void 0:e.boundingBox,!t){const{attributes:e}=m(i);e.POSITION=e.POSITION||e.positions,t=(0,g.l)(e)}return this.state.positionBounds=t,t}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{transition:!0,type:"float64",fp64:this.use64bitPositions(),size:3,accessor:"getPosition"},instanceColors:{type:"unorm8",transition:!0,size:this.props.colorFormat.length,accessor:"getColor",defaultValue:[0,0,0,255]},instanceModelMatrix:u.U}),this.setState({emptyTexture:this.context.device.createTexture({data:new Uint8Array(4),width:1,height:1})})}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e;if(t.mesh!==i.mesh||n.extensionsChanged){var o;if(this.state.positionBounds=null,null==(o=this.state.model)||o.destroy(),t.mesh){this.state.model=this.getModel(t.mesh);const e=t.mesh.attributes||t.mesh;this.setState({hasNormals:Boolean(e.NORMAL||e.normals)})}this.getAttributeManager().invalidateAll()}t.texture!==i.texture&&t.texture instanceof a.g&&this.setTexture(t.texture),this.state.model&&this.state.model.setTopology(this.props.wireframe?"line-strip":"triangle-list")}finalizeState(e){super.finalizeState(e),this.state.emptyTexture.delete()}draw(e){let{uniforms:t}=e;const{model:i}=this.state;if(!i)return;const{viewport:n,renderPass:o}=this.context,{sizeScale:s,coordinateSystem:r,_instanced:a}=this.props,l={sizeScale:s,composeModelMatrix:!a||(0,u.w)(n,r),flatShading:!this.state.hasNormals};i.shaderInputs.setProps({simpleMesh:l}),i.draw(o)}get isLoaded(){var e;return Boolean((null==(e=this.state)?void 0:e.model)&&super.isLoaded)}getModel(e){const t=new c.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:m(e),isInstanced:!0})),{texture:i}=this.props,{emptyTexture:n}=this.state,o={sampler:i||n,hasTexture:Boolean(i)};return t.shaderInputs.setProps({simpleMesh:o}),t}setTexture(e){const{emptyTexture:t,model:i}=this.state;if(i){const n={sampler:e||t,hasTexture:Boolean(e)};i.shaderInputs.setProps({simpleMesh:n})}}}y.defaultProps=v,y.layerName="SimpleMeshLayer";const x=y},27504:(e,t,i)=>{"use strict";i.d(t,{U:()=>d,w:()=>u});var n=i(33698),o=i(8961);const s=Math.PI/180,r=new Float32Array(16),a=new Float32Array(12);function l(e,t,i){const n=t[0]*s,o=t[1]*s,r=t[2]*s,a=Math.sin(r),l=Math.sin(n),c=Math.sin(o),d=Math.cos(r),u=Math.cos(n),p=Math.cos(o),h=i[0],g=i[1],f=i[2];e[0]=h*p*u,e[1]=h*c*u,e[2]=h*-l,e[3]=g*(-c*d+p*l*a),e[4]=g*(p*d+c*l*a),e[5]=g*u*a,e[6]=f*(c*a+p*l*d),e[7]=f*(-p*a+c*l*d),e[8]=f*u*d}function c(e){return e[0]=e[0],e[1]=e[1],e[2]=e[2],e[3]=e[4],e[4]=e[5],e[5]=e[6],e[6]=e[8],e[7]=e[9],e[8]=e[10],e[9]=e[12],e[10]=e[13],e[11]=e[14],e.subarray(0,12)}const d={size:12,accessor:["getOrientation","getScale","getTranslation","getTransformMatrix"],shaderAttributes:{instanceModelMatrixCol0:{size:3,elementOffset:0},instanceModelMatrixCol1:{size:3,elementOffset:3},instanceModelMatrixCol2:{size:3,elementOffset:6},instanceTranslation:{size:3,elementOffset:9}},update(e,t){let{startRow:i,endRow:o}=t;const{data:s,getOrientation:d,getScale:u,getTranslation:p,getTransformMatrix:h}=this.props,g=Array.isArray(h),f=g&&16===h.length,m=Array.isArray(u),v=Array.isArray(d),y=Array.isArray(p),x=f||!g&&Boolean(h(s[0]));e.constant=x?f:v&&m&&y;const _=e.value;if(e.constant){let t;if(x)r.set(h),t=c(r);else{t=a;l(t,d,u),t.set(p,9)}e.value=new Float32Array(t)}else{let t=i*e.size;const{iterable:g,objectInfo:b}=(0,n.X)(s,i,o);for(const e of g){let i;if(b.index++,x)r.set(f?h:h(e,b)),i=c(r);else{i=a;l(i,v?d:d(e,b),m?u:u(e,b)),i.set(y?p:p(e,b),9)}_[t++]=i[0],_[t++]=i[1],_[t++]=i[2],_[t++]=i[3],_[t++]=i[4],_[t++]=i[5],_[t++]=i[6],_[t++]=i[7],_[t++]=i[8],_[t++]=i[9],_[t++]=i[10],_[t++]=i[11]}}}};function u(e,t){return t===o.rf.CARTESIAN||t===o.rf.METER_OFFSETS||t===o.rf.DEFAULT&&!e.isGeospatial}},96864:(e,t,i)=>{"use strict";i.d(t,{A:()=>v});var n=i(96540),o=i(23399);const s="undefined"!=typeof window?n.useLayoutEffect:n.useEffect;function r(e,t){for(;e;){if(e===t)return!0;e=Object.getPrototypeOf(e)}return!1}var a=i(49398),l=i(3002);const c={position:"absolute",zIndex:-1};function d(e,t){if("function"==typeof e)return e(t);if(Array.isArray(e))return e.map((e=>d(e,t)));if(u(e)){if(null==(i=e.props)?void 0:i.mapStyle)return t.style=c,(0,n.cloneElement)(e,t);if(function(e){const t=e.type;return t&&t.deckGLViewProps}(e))return(0,n.cloneElement)(e,t)}var i;return e}function u(e){return e&&"object"==typeof e&&"type"in e||!1}function p(e){if("function"==typeof e)return(0,n.createElement)(a.A,{},e);if(Array.isArray(e))return e.map(p);if(u(e)){if(e.type===n.Fragment)return p(e.props.children);if(r(e.type,a.A))return e}return e}const h=(0,n.createContext)();const g={mixBlendMode:null};function f(e){e.redrawReason&&(e.deck._drawLayers(e.redrawReason),e.redrawReason=null)}function m(e,t){const[i,c]=(0,n.useState)(0),m=(0,n.useRef)({control:null,version:i,forceUpdate:()=>c((e=>e+1))}).current,v=(0,n.useRef)(null),y=(0,n.useRef)(null),x=(0,n.useMemo)((()=>function(e){let{children:t,layers:i=[],views:o=null}=e;const s=[],c=[],d={};return n.Children.forEach(p(t),(e=>{if(u(e)){const t=e.type;if(r(t,l.A)){const i=function(e,t){const i={},n=e.defaultProps||{};for(const o in t)n[o]!==t[o]&&(i[o]=t[o]);return new e(i)}(t,e.props);c.push(i)}else s.push(e);if(r(t,a.A)&&t!==a.A&&e.props.id){const i=new t(e.props);d[i.id]=i}}else e&&s.push(e)})),Object.keys(d).length>0&&(Array.isArray(o)?o.forEach((e=>{d[e.id]=e})):o&&(d[o.id]=o),o=Object.values(d)),i=c.length>0?[...c,...i]:i,{layers:i,children:s,views:o}}(e)),[e.layers,e.views,e.children]);let _=!0;const b=t=>_&&e.viewState?(m.viewStateUpdateRequested=t,null):(m.viewStateUpdateRequested=null,null==e.onViewStateChange?void 0:e.onViewStateChange(t)),w=t=>{_?m.interactionStateUpdateRequested=t:(m.interactionStateUpdateRequested=null,null==e.onInteractionStateChange||e.onInteractionStateChange(t))},P=(0,n.useMemo)((()=>{const t=Object.assign({widgets:[]},e,{style:null,width:"100%",height:"100%",parent:v.current,canvas:y.current,layers:x.layers,views:x.views,onViewStateChange:b,onInteractionStateChange:w});return delete t._customRender,m.deck&&m.deck.setProps(t),t}),[e]);(0,n.useEffect)((()=>{const t=e.Deck||o.A;return m.deck=function(e,t,i){var n;const o=new t(Object.assign({},i,{_customRender:"webgpu"===(null==(n=i.deviceProps)||null==(n=n.adapters)||null==(n=n[0])?void 0:n.type)?void 0:t=>{e.redrawReason=t;const i=o.getViewports();e.lastRenderedViewports!==i?e.forceUpdate():f(e)}}));return o}(m,t,Object.assign({},P,{parent:v.current,canvas:y.current})),()=>{var e;return null==(e=m.deck)?void 0:e.finalize()}}),[]),s((()=>{f(m);const{viewStateUpdateRequested:e,interactionStateUpdateRequested:t}=m;e&&b(e),t&&w(t)})),(0,n.useImperativeHandle)(t,(()=>function(e){return{get deck(){return e.deck},pickObject:t=>e.deck.pickObject(t),pickMultipleObjects:t=>e.deck.pickMultipleObjects(t),pickObjects:t=>e.deck.pickObjects(t)}}(m)),[]);const S=m.deck&&m.deck.isInitialized?m.deck.getViewports():void 0,{ContextProvider:C,width:A="100%",height:M="100%",id:T,style:L}=e,{containerStyle:O,canvasStyle:I}=(0,n.useMemo)((()=>function(e){let{width:t,height:i,style:n}=e;const o={position:"absolute",zIndex:0,left:0,top:0,width:t,height:i},s={left:0,top:0};if(n)for(const r in n)r in g?s[r]=n[r]:o[r]=n[r];return{containerStyle:o,canvasStyle:s}}({width:A,height:M,style:L})),[A,M,L]);if(!m.viewStateUpdateRequested&&m.lastRenderedViewports===S||m.version!==i){m.lastRenderedViewports=S,m.version=i;const e=function(e){let{children:t,deck:i,ContextProvider:o=h.Provider}=e;const{viewManager:s}=i||{};if(!s||!s.views.length)return[];const l={},c=s.views[0].id;for(const n of t){let e=c,t=n;u(n)&&r(n.type,a.A)&&(e=n.props.id||c,t=n.props.children);const i=s.getViewport(e),o=s.getViewState(e);if(i){o.padding=i.padding;const{x:n,y:s,width:r,height:a}=i;t=d(t,{x:n,y:s,width:r,height:a,viewport:i,viewState:o}),l[e]||(l[e]={viewport:i,children:[]}),l[e].children.push(t)}}return Object.keys(l).map((e=>{const{viewport:t,children:s}=l[e],{x:r,y:a,width:c,height:d}=t,u={position:"absolute",left:r,top:a,width:c,height:d},p="view-"+e,h=(0,n.createElement)("div",{key:p,id:p,style:u},...s),g={deck:i,viewport:t,container:i.canvas.offsetParent,eventManager:i.eventManager,onViewStateChange:t=>{t.viewId=e,i._onViewStateChange(t)},widgets:[]},f="view-"+e+"-context";return(0,n.createElement)(o,{key:f,value:g},h)}))}({children:x.children,deck:m.deck,ContextProvider:C}),t=(0,n.createElement)("canvas",{key:"canvas",id:T||"deckgl-overlay",ref:y,style:I});m.control=(0,n.createElement)("div",{id:(T||"deckgl")+"-wrapper",ref:v,style:O},[t,e])}return _=!1,m.control}const v=n.forwardRef(m)}}]);