"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[923],{64208:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"api-reference/aggregation-layers/heatmap-layer","title":"HeatmapLayer","description":"HeatmapLayer can be used to visualize spatial distribution of data. It internally implements Gaussian Kernel Density Estimation to render heatmaps. Note that this layer does not support all platforms; see \\"limitations\\" section below.","source":"@site/../docs/api-reference/aggregation-layers/heatmap-layer.md","sourceDirName":"api-reference/aggregation-layers","slug":"/api-reference/aggregation-layers/heatmap-layer","permalink":"/docs/api-reference/aggregation-layers/heatmap-layer","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/aggregation-layers/heatmap-layer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"H3HexagonLayer","permalink":"/docs/api-reference/geo-layers/h3-hexagon-layer"},"next":{"title":"HexagonLayer","permalink":"/docs/api-reference/aggregation-layers/hexagon-layer"}}');var o=i(74848),s=i(28453),r=i(39488),a=i(11470),l=i(19365);const c={},d="HeatmapLayer",h={},u=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Render Options",id:"render-options",level:3},{value:"<code>radiusPixels</code> (number, optional) transition-enabled",id:"radiuspixels",level:4},{value:"<code>colorRange</code> (Color[], optional)",id:"colorrange",level:4},{value:"<code>intensity</code> (number, optional) transition-enabled",id:"intensity",level:4},{value:"<code>threshold</code> (number, optional) transition-enabled",id:"threshold",level:4},{value:"<code>colorDomain</code> (number[2], optional) transition-enabled",id:"colordomain",level:4},{value:"<code>aggregation</code> (string, optional)",id:"aggregation",level:4},{value:"<code>weightsTextureSize</code> (number, optional)",id:"weightstexturesize",level:4},{value:"<code>debounceTimeout</code> (number, optional)",id:"debouncetimeout",level:4},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPosition</code> (Accessor&lt;Position&gt;, optional)",id:"getposition",level:4},{value:"<code>getWeight</code> (Accessor&lt;number&gt;, optional)",id:"getweight",level:4},{value:"Limitations",id:"limitations",level:2},{value:"Source",id:"source",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"heatmaplayer",children:"HeatmapLayer"})}),"\n","\n",(0,o.jsx)(r.Nt,{}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"HeatmapLayer"})," can be used to visualize spatial distribution of data. It internally implements ",(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Kernel%20%28statistics%29#Kernel_functions_in_common_use",children:"Gaussian Kernel Density Estimation"}),' to render heatmaps. Note that this layer does not support all platforms; see "limitations" section below.']}),"\n","\n",(0,o.jsxs)(a.A,{groupId:"language",children:[(0,o.jsx)(l.A,{value:"js",label:"JavaScript",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import {Deck} from '@deck.gl/core';\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\n\nconst layer = new HeatmapLayer({\n  id: 'HeatmapLayer',\n  data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n  aggregation: 'SUM',\n  getPosition: d => d.COORDINATES,\n  getWeight: d => d.SPACES,\n  radiusPixels: 25\n});\n\nnew Deck({\n  initialViewState: {\n    longitude: -122.4,\n    latitude: 37.74,\n    zoom: 11\n  },\n  controller: true,\n  layers: [layer]\n});\n"})})}),(0,o.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import {Deck} from '@deck.gl/core';\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\n\ntype BikeRack = {\n  ADDRESS: string;\n  SPACES: number;\n  COORDINATES: [longitude: number, latitude: number];\n};\n\nconst layer = new HeatmapLayer<BikeRack>({\n  id: 'HeatmapLayer',\n  data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n  aggregation: 'SUM',\n  getPosition: (d: BikeRack) => d.COORDINATES,\n  getWeight: (d: BikeRack) => d.SPACES,\n  radiusPixels: 25\n});\n\nnew Deck({\n  initialViewState: {\n    longitude: -122.4,\n    latitude: 37.74,\n    zoom: 11\n  },\n  controller: true,\n  layers: [layer]\n});\n"})})}),(0,o.jsx)(l.A,{value:"react",label:"React",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport {DeckGL} from '@deck.gl/react';\nimport {HeatmapLayer} from '@deck.gl/aggregation-layers';\n\ntype BikeRack = {\n  ADDRESS: string;\n  SPACES: number;\n  COORDINATES: [longitude: number, latitude: number];\n};\n\nfunction App() {\n  const layer = new HeatmapLayer<BikeRack>({\n    id: 'HeatmapLayer',\n    data: 'https://raw.githubusercontent.com/visgl/deck.gl-data/master/website/sf-bike-parking.json',\n\n    aggregation: 'SUM',\n    getPosition: (d: BikeRack) => d.COORDINATES,\n    getWeight: (d: BikeRack) => d.SPACES,\n    radiusPixels: 25\n  });\n\n  return <DeckGL\n    initialViewState={{\n      longitude: -122.4,\n      latitude: 37.74,\n      zoom: 11\n    }}\n    controller\n    layers={[layer]}\n  />;\n}\n"})})})]}),"\n",(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(t.p,{children:"To install the dependencies from NPM:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/aggregation-layers\n"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import {HeatmapLayer} from '@deck.gl/aggregation-layers';\nimport type {HeatmapLayerProps} from '@deck.gl/aggregation-layers';\n\nnew HeatmapLayer<DataT>(...props: HeatmapLayerProps<DataT>[]);\n"})}),"\n",(0,o.jsx)(t.p,{children:"To use pre-bundled scripts:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:'<script src="https://unpkg.com/deck.gl@^9.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/aggregation-layers@^9.0.0/dist.min.js"><\/script>\n'})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"new deck.HeatmapLayer({});\n"})}),"\n",(0,o.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(t.p,{children:["Inherits from all ",(0,o.jsx)(t.a,{href:"/docs/api-reference/core/layer",children:"Base Layer"})," and ",(0,o.jsx)(t.a,{href:"/docs/api-reference/core/composite-layer",children:"CompositeLayer"})," properties."]}),"\n",(0,o.jsx)(t.h3,{id:"render-options",children:"Render Options"}),"\n",(0,o.jsxs)(t.h4,{id:"radiuspixels",children:[(0,o.jsx)(t.code,{children:"radiusPixels"})," (number, optional) ",(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"30"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Radius of the circle in pixels, to which the weight of an object is distributed."}),"\n",(0,o.jsxs)(t.h4,{id:"colorrange",children:[(0,o.jsx)(t.code,{children:"colorRange"})," (Color[], optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.a,{href:"http://colorbrewer2.org/#type=sequential&scheme=YlOrRd&n=6",children:"colorbrewer"})," ",(0,o.jsx)(t.code,{children:"6-class YlOrRd"})," ",(0,o.jsx)("img",{src:"https://deck.gl/images/colorbrewer_YlOrRd_6.png"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The color palette used in the heatmap, as an array of colors [color1, color2, ...]. Each color is in the format of ",(0,o.jsx)(t.code,{children:"[r, g, b, [a]]"}),". Each channel is a number between 0-255 and ",(0,o.jsx)(t.code,{children:"a"})," is 255 if not supplied."]}),"\n",(0,o.jsxs)(t.p,{children:["See the ",(0,o.jsx)(t.code,{children:"colorDomain"})," section below for how weight values are mapped to colors in ",(0,o.jsx)(t.code,{children:"colorRange"}),"."]}),"\n",(0,o.jsxs)(t.h4,{id:"intensity",children:[(0,o.jsx)(t.code,{children:"intensity"})," (number, optional) ",(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"1"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Value that is multiplied with the total weight at a pixel to obtain the final weight. A value larger than ",(0,o.jsx)(t.code,{children:"1"})," biases the output color towards the higher end of the spectrum, and a value less than ",(0,o.jsx)(t.code,{children:"1"})," biases the output color towards the lower end of the spectrum."]}),"\n",(0,o.jsxs)(t.h4,{id:"threshold",children:[(0,o.jsx)(t.code,{children:"threshold"})," (number, optional) ",(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"0.05"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"HeatmapLayer"})," reduces the opacity of the pixels with relatively low weight to create a fading effect at the edge. A larger ",(0,o.jsx)(t.code,{children:"threshold"})," smoothens the boundaries of color blobs, while making pixels with low relative weight harder to spot (due to low alpha value)."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"threshold"})," is defined as the ratio of the fading weight to the max weight, between ",(0,o.jsx)(t.code,{children:"0"})," and ",(0,o.jsx)(t.code,{children:"1"}),". For example, ",(0,o.jsx)(t.code,{children:"0.1"})," affects all pixels with weight under 10% of the max."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"threshold"})," is ignored when ",(0,o.jsx)(t.code,{children:"colorDomain"})," is specified."]}),"\n",(0,o.jsxs)(t.h4,{id:"colordomain",children:[(0,o.jsx)(t.code,{children:"colorDomain"})," (number[2], optional) ",(0,o.jsx)(t.img,{src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"null"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Controls how weight values are mapped to the ",(0,o.jsx)(t.code,{children:"colorRange"}),", as an array of two numbers [",(0,o.jsx)(t.code,{children:"minValue"}),", ",(0,o.jsx)(t.code,{children:"maxValue"}),"]."]}),"\n",(0,o.jsxs)(t.p,{children:["When ",(0,o.jsx)(t.code,{children:"colorDomain"})," is specified, a pixel with ",(0,o.jsx)(t.code,{children:"minValue"})," is assigned the first color in ",(0,o.jsx)(t.code,{children:"colorRange"}),", a pixel with ",(0,o.jsx)(t.code,{children:"maxValue"})," is assigned the last color in ",(0,o.jsx)(t.code,{children:"colorRange"}),", and any value in between is linearly interpolated. Pixels with weight less than ",(0,o.jsx)(t.code,{children:"minValue"})," gradually fade out by reducing alpha, until 100% transparency representing ",(0,o.jsx)(t.code,{children:"0"}),". Pixels with weight more than ",(0,o.jsx)(t.code,{children:"maxValue"})," are capped to the last color in ",(0,o.jsx)(t.code,{children:"colorRange"}),"."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["If using ",(0,o.jsx)(t.code,{children:"aggregation: 'SUM'"}),", values in ",(0,o.jsx)(t.code,{children:"colorDomain"})," are interpreted as weight per square meter."]}),"\n",(0,o.jsxs)(t.li,{children:["If using ",(0,o.jsx)(t.code,{children:"aggregation: 'MEAN'"}),", values in ",(0,o.jsx)(t.code,{children:"colorDomain"})," are interpreted as weight."]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["When this prop is not specified, the maximum value is automatically determined from the current viewport, and the domain is set to [",(0,o.jsx)(t.code,{children:"maxValue * threshold"}),", ",(0,o.jsx)(t.code,{children:"maxValue"}),"]. This default behavior ensures that the colors are distributed somewhat reasonably regardless of the data in display. However, as a result, the color at a specific location is dependent on the current viewport and any other data points within view. To obtain a stable color mapping (e.g. for displaying a legend), you need to provide a custom ",(0,o.jsx)(t.code,{children:"colorDomain"}),"."]}),"\n",(0,o.jsxs)(t.h4,{id:"aggregation",children:[(0,o.jsx)(t.code,{children:"aggregation"})," (string, optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"'SUM'"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Operation used to aggregate all data point weights to calculate a pixel's color value. One of ",(0,o.jsx)(t.code,{children:"'SUM'"})," or ",(0,o.jsx)(t.code,{children:"'MEAN'"}),". ",(0,o.jsx)(t.code,{children:"'SUM'"})," is used when an invalid value is provided."]}),"\n",(0,o.jsxs)(t.p,{children:["The weight of each data object is distributed to all the pixels in a circle centered at the object position. The weight that a pixel receives is inversely proportional to its distance from the center. In ",(0,o.jsx)(t.code,{children:"'SUM'"})," mode, pixels that fall into multiple circles will have the sum of all weights. In ",(0,o.jsx)(t.code,{children:"'MEAN'"})," mode, pixels that fall into multiple circles will have their weight calculated as the weighted average from all the neighboring data points. And the weight of the pixel determines its color."]}),"\n",(0,o.jsxs)(t.h4,{id:"weightstexturesize",children:[(0,o.jsx)(t.code,{children:"weightsTextureSize"})," (number, optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"2048"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"weightsTextureSize"})," specifies the size of weight texture. Smaller texture sizes can improve rendering performance. Heatmap aggregation calculates the maximum weight value in the texture and the process can take 50-100 ms for 2048x2048 texture, but only 5-7ms for 512x512 texture. Smaller texture sizes lead to visible pixelation."]}),"\n",(0,o.jsxs)(t.h4,{id:"debouncetimeout",children:[(0,o.jsx)(t.code,{children:"debounceTimeout"})," (number, optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"500"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"debounceTimeout"})," is an interval in milliseconds during which changes to the viewport don't trigger aggregation. Large datasets combined with a large ",(0,o.jsx)(t.code,{children:"radiusPixels"})," can cause freezes during user interactions due to aggregation updates. Setting positive debounceTimeout delays aggregation updates and prevents freezes during the interaction. As a side effect, the user has to wait to see updated results after the end of the interaction."]}),"\n",(0,o.jsx)(t.h3,{id:"data-accessors",children:"Data Accessors"}),"\n",(0,o.jsxs)(t.h4,{id:"getposition",children:[(0,o.jsx)(t.code,{children:"getPosition"})," (",(0,o.jsx)(t.a,{href:"/docs/developer-guide/using-layers#accessors",children:"Accessor<Position>"}),", optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"object => object.position"})]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Method called to retrieve the position of each point."}),"\n",(0,o.jsxs)(t.h4,{id:"getweight",children:[(0,o.jsx)(t.code,{children:"getWeight"})," (",(0,o.jsx)(t.a,{href:"/docs/developer-guide/using-layers#accessors",children:"Accessor<number>"}),", optional)"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Default: ",(0,o.jsx)(t.code,{children:"1"})]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Method called to retrieve weight of each point. By default each point will use a weight of ",(0,o.jsx)(t.code,{children:"1"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"limitations",children:"Limitations"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"HeatmapLayer"})," performs aggregation on the GPU. This feature is fully supported in evergreen desktop browsers, but limited in the following platforms due to partial WebGL support:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"iOS Safari: WebGL context does not support rendering to a float texture. The layer therefore falls back to an 8-bit low-precision mode, where weights must be integers and the accumulated weights in any pixel cannot exceed 255."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"source",children:"Source"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/visgl/deck.gl/tree/9.2-release/modules/aggregation-layers/src/heatmap-layer",children:"modules/aggregation-layers/src/heatmap-layer"})})]})}function g(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},11175:(e,t,i)=>{i.d(t,{Ut:()=>o,Vi:()=>n,lP:()=>s});const n={LIGHT:"https://deck.gl/mapstyle/deck-light.json",LIGHT_LABEL:"https://basemaps.cartocdn.com/gl/positron-gl-style/style.json",DARK:"https://deck.gl/mapstyle/deck-dark.json",BLANK:{version:8,sources:{},layers:[]}},o="https://raw.githubusercontent.com/visgl/deck.gl-data/master/website",s="https://github.com/visgl/deck.gl/tree/9.2-release"},39488:(e,t,i)=>{i.d(t,{BI:()=>u,Nt:()=>f,Tp:()=>d,jV:()=>g,lX:()=>p});var n=i(74759),o=i(99550),s=i(77075),r=i(44274),a=i(69703),l=i(4548),c=i(11175);const d=(0,l.j)({Layer:n.A,getTooltip:"({object}) => object && `threshold: ${object.contour.threshold}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    cellSize: 200,\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES,\n    contours: [\n      {threshold: 1, color: [255, 0, 0], strokeWidth: 2, zIndex: 1},\n      {threshold: [3, 10], color: [55, 0, 55], zIndex: 0},\n      {threshold: 5, color: [0, 255, 0], strokeWidth: 6, zIndex: 2},\n      {threshold: 15, color: [0, 0, 255], strokeWidth: 4, zIndex: 3}\n    ]\n  }"}),h={getTooltip:"({object}) => object && `Count: ${object.elevationValue}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    extruded: true,\n    cellSize: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    getColorWeight: d => d.SPACES,\n    getElevationWeight: d => d.SPACES\n  }"},u=(0,l.j)(Object.assign({Layer:o.A},h)),p=(0,l.j)({Layer:s.A,getTooltip:"({object}) => object && `Count: ${object.elevationValue}`",props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    pickable: true,\n    extruded: true,\n    radius: 200,\n    elevationScale: 4,\n    getPosition: d => d.COORDINATES,\n    getColorWeight: d => d.SPACES,\n    getElevationWeight: d => d.SPACES\n  }"}),g=(0,l.j)({Layer:r.A,props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    opacity: 0.8,\n    cellSizePixels: 50,\n    colorRange: [\n      [0, 25, 0, 25],\n      [0, 85, 0, 85],\n      [0, 127, 0, 127],\n      [0, 170, 0, 170],\n      [0, 190, 0, 190],\n      [0, 255, 0, 255]\n    ],\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES\n  }"}),f=(0,l.j)({Layer:a.A,props:"{\n    data: '"+c.Ut+"/sf-bike-parking.json',\n    getPosition: d => d.COORDINATES,\n    getWeight: d => d.SPACES,\n    radiusPixels: 25\n  }"})},89323:(e,t,i)=>{i.d(t,{i:()=>c});const n=["dataComparator","fetch"],o=["autoHighlight","coordinateOrigin","coordinateSystem","highlightColor","modelMatrix","opacity","pickable","visible","wrapLongitude"],s={loaders:[],coordinateSystem:"COORDINATE_SYSTEM.LNGLAT",renderSubLayers:"props => new GeoJsonLayer(props)",characterSet:'" !\\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~"'};function r(e,t){if(!e.includes("\n")||0===t)return e;const i=e.split("\n");if(t>0){const e="".padStart(t," ");return i.map(((t,i)=>i>0?e+t:t)).join("\n")}return i.map(((e,i)=>i>0?e.slice(-t):e)).join("\n")}function a(e){return null==e?"null":"string"==typeof e?"'"+e+"'":"function"==typeof e?e.toString():Array.isArray(e)?"["+e.map(a).join(", ")+"]":e===Number.MAX_SAFE_INTEGER?"Number.MAX_SAFE_INTEGER":r(JSON.stringify(e,null,2),2)}function l(e,t){const i=[],l={};t=function(e){const t=e.split("\n");t.pop();const i={};let n,o=1/0;for(const s of t){const e=s.match(/^(\s*)(\w+):\s*(.*)/);e&&e[1].length<=o?(o=e[1].length,n=e[2],i[n]=e[3]):n&&(i[n]+="\n"+s)}for(n in i)i[n]=r(i[n].replace(/,\s*$/,""),2-o);return i}(t);let c=e.constructor,d=!1;const h=e.props[Symbol.for("asyncPropOriginal")],u=e.props[Symbol.for("asyncPropResolved")];function p(e,t,o,s){if(!l[e]&&!n.includes(e)){const n=(o?"// ":"")+e+": "+t+",";void 0===s?i.push(n):i.splice(s,0,n),l[e]=!0}}let g=1;for(p("id",a(e.id)),t.data&&p("data",t.data,!1,g++);c.layerName;){if(c.hasOwnProperty("defaultProps")){i.push("","/* props "+(d?"inherited from":"from")+" "+c.layerName+" class */","");const n=Object.keys(c.defaultProps).sort();for(const i of n){const n=c.defaultProps[i],r=!(i in h)&&!(i in u)&&!Object.hasOwnProperty.call(e.props,i);let l,d=!1;i in t?l=t[i]:(d=n&&n.deprecatedFor,d=d||i.startsWith("_"),d=d||n&&"accessor"===n.type&&"function"==typeof n.value,d=d||"Layer"===c.layerName&&!o.includes(i),l=h[i]||e.props[i],l="function"==typeof l?null:i in s?s[i]:a(l)),d||p(i,l,r)}}c=Object.getPrototypeOf(c),d=!0}for(const n in t)n in l||p(n,t[n],!1,g++);return i.join("\n  ")}function c(e,t){const{Layer:i,isExperimental:n,getTooltip:o,props:s,mapStyle:a=!0,dependencies:c=[],imports:d,initialViewState:h}=e,u=n?"_"+i.layerName:i.layerName,p=["DeckGL",u],g=[];if(d)for(const r in d)r[0]>="a"||(r.endsWith("Loader")?g.push(r):p.push(r));const f=r(JSON.stringify(h,null,2).replace(/"/g,""),2),m="const {"+p.join(", ")+"} = deck;\n"+(g.length?"const {"+g.join(", ")+"} = loaders;\n":"")+"\nconst layer = new "+u+"({\n  "+l(t,s)+"\n});\n\nnew DeckGL({\n  "+(a?"mapStyle: 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json',":"")+"\n  initialViewState: "+f+",\n  controller: true,\n  "+(o?"getTooltip: "+o+",":"")+"\n  layers: [layer]\n});\n  ";!function(e){let{dependencies:t=[],title:i,source:n}=e;const o={js_external:t.concat(["https://unpkg.com/deck.gl@latest/dist.min.js"]).join(";"),title:i,parent:48721472,tags:["webgl","data visualization"],editors:"001",css:"\n  body {\n    margin: 0;\n    width: 100vw;\n    height: 100vh;\n    overflow: hidden;\n  }\n  \n  .deck-tooltip {\n    font-size: 0.8em;\n    font-family: Helvetica, Arial, sans-serif;\n  }\n  ",js:"/*\n* "+window.location.href+"\n*/\n"+n},s=document.createElement("form");s.action="https://codepen.io/pen/define/",s.method="POST",s.style.display="none",document.body.appendChild(s);const r=document.createElement("input");r.type="text",r.name="data",r.value=JSON.stringify(o),s.appendChild(r),window.open("","deck-example-codepen"),s.target="deck-example-codepen",s.submit(),s.remove()}({dependencies:c.concat(["https://unpkg.com/maplibre-gl@3.6.0/dist/maplibre-gl.js"]),title:"deck.gl "+i.layerName,source:m})}},4548:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{j:()=>makeLayerDemo});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(96540),_deck_gl_react__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(96864),react_map_gl_maplibre__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(29533),styled_components__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(16065),_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(95293),_constants_defaults__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(11175),_codepen_automation__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(89323),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(74848);const INITIAL_VIEW_STATE={longitude:-122.4,latitude:37.74,zoom:11,maxZoom:20,pitch:30,bearing:0},TOOLTIP_STYLE={padding:"4px",background:"rgba(0, 0, 0, 0.8)",color:"#fff",maxWidth:"300px",fontSize:"10px",zIndex:9},DemoPlaceholder=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoPlaceholder",componentId:"sc-bhdrci-0"})(["height:50vh;min-height:200px;position:relative;margin-bottom:24px;@media screen and (max-width:768px){height:60vh;}"]),DemoContainer=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoContainer",componentId:"sc-bhdrci-1"})(["height:50vh;min-height:200px;position:absolute;width:100%;left:0;top:0;overflow:hidden;@media screen and (max-width:768px){height:60vh;}"]),DemoSourceLink=styled_components__WEBPACK_IMPORTED_MODULE_5__.Ay.div.withConfig({displayName:"demo-base__DemoSourceLink",componentId:"sc-bhdrci-2"})(["position:absolute;top:0;right:0;padding:8px;background:var(--ifm-background-surface-color);margin:12px;box-shadow:0 2px 4px rgba(0,0,0,0.3);cursor:pointer;font-weight:bold;font-size:12px;&:hover{color:var(--ifm-color-primary);}svg{width:20px;vertical-align:middle;margin-right:4px;}"]);function evalObject(source,globals,output){return eval("(function evalObject(globals){\n    Object.assign(globalThis, globals);\n    "+(output?source+"\n      return {"+output.join(",")+"};":"return "+source+";")+"\n  })")(globals)}function makeLayerDemo(config){const{Layer:Layer,getTooltip:getTooltip,props:props,mapStyle:mapStyle=!0,initialViewState:initialViewState=INITIAL_VIEW_STATE,imports:imports}=config;config.initialViewState=initialViewState;const _getTooltip=getTooltip&&eval(getTooltip),styledGetTooltip=e=>{const t=_getTooltip&&_getTooltip(e);return t&&{text:t,style:TOOLTIP_STYLE}},layerProps=evalObject(props,imports);function Demo(){const{colorMode:e}=(0,_docusaurus_theme_common__WEBPACK_IMPORTED_MODULE_6__.G)(),t=new Layer(layerProps),i="dark"===e?_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Vi.DARK:_constants_defaults__WEBPACK_IMPORTED_MODULE_2__.Vi.LIGHT;return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(DemoPlaceholder,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(DemoContainer,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_deck_gl_react__WEBPACK_IMPORTED_MODULE_7__.A,{pickingRadius:5,initialViewState:initialViewState,getTooltip:styledGetTooltip,controller:!0,layers:[t],children:mapStyle&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(react_map_gl_maplibre__WEBPACK_IMPORTED_MODULE_1__.T5,{reuseMaps:!0,mapStyle:i})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)(DemoSourceLink,{onClick:()=>(0,_codepen_automation__WEBPACK_IMPORTED_MODULE_3__.i)(config,t),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path",{d:"M0 0h24v24H0V0z",fill:"none"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)("path",{fill:"currentcolor",d:"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z"})]}),"Edit on Codepen"]})]})}return react__WEBPACK_IMPORTED_MODULE_0__.memo(Demo)}},29586:(e,t,i)=>{i.d(t,{A:()=>r});var n=i(33847),o=i(1570);class s extends n.A{get isDrawable(){return!0}initializeState(){this.getAttributeManager().remove(["instancePickingColors"])}updateState(e){super.updateState(e);const t=this.getAggregatorType();if(e.changeFlags.extensionsChanged||this.state.aggregatorType!==t){var i,n;null==(i=this.state.aggregator)||i.destroy();const e=this.createAggregator(t);return e.setProps({attributes:null==(n=this.getAttributeManager())?void 0:n.attributes}),this.setState({aggregator:e,aggregatorType:t}),!0}return!1}finalizeState(e){super.finalizeState(e),this.state.aggregator.destroy()}updateAttributes(e){const{aggregator:t}=this.state;t.setProps({attributes:e});for(const i in e)this.onAttributeChange(i);t.update()}draw(e){let{shaderModuleProps:t}=e;const{aggregator:i}=this.state;i.setProps({shaderModuleProps:t}),i.preDraw()}_getAttributeManager(){return new o.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}s.layerName="AggregationLayer";const r=s},52601:(e,t,i)=>{i.d(t,{M:()=>c});var n=i(50111);const o=(e,t)=>{let i=0;for(const n of e)i+=t(n);return i},s={COUNT:e=>e.length,SUM:o,MEAN:(e,t)=>0===e.length?NaN:o(e,t)/e.length,MIN:(e,t)=>{let i=1/0;for(const n of e){const e=t(n);e<i&&(i=e)}return i},MAX:(e,t)=>{let i=-1/0;for(const n of e){const e=t(n);e>i&&(i=e)}return i}};function r(e){let{bins:t,getValue:i,operation:n,target:o}=e;(!o||o.length<t.length)&&(o=new Float32Array(t.length));let s=1/0,r=-1/0;for(let a=0;a<t.length;a++){const{points:e}=t[a];o[a]=n(e,i),o[a]<s&&(s=o[a]),o[a]>r&&(r=o[a])}return{value:o,domain:[s,r]}}function a(e,t,i){const n={};for(const s of e.sources||[]){const e=t[s];if(!e)throw new Error("Cannot find attribute "+s);n[s]=l(e)}const o={};return t=>{for(const e in n)o[e]=n[e](t);return e.getValue(o,t,i)}}function l(e){const t=e.value,{offset:i=0,stride:n,size:o}=e.getAccessor(),s=t.BYTES_PER_ELEMENT,r=i/s,a=n?n/s:o;if(1===o)return e.isConstant?()=>t[0]:e=>t[r+a*e];let l;return e.isConstant?(l=Array.from(t),()=>l):(l=new Array(o),e=>{const i=r+a*e;for(let n=0;n<o;n++)l[n]=t[i+n];return l})}class c{constructor(e){this.bins=[],this.binIds=null,this.results=[],this.dimensions=e.dimensions,this.channelCount=e.getValue.length,this.props=Object.assign({},e,{binOptions:{},pointCount:0,operations:[],customOperations:[],attributes:{}}),this.needsUpdate=!0,this.setProps(e)}destroy(){}get binCount(){return this.bins.length}setProps(e){const t=this.props;if(e.binOptions&&((0,n.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate()),e.operations)for(let i=0;i<this.channelCount;i++)e.operations[i]!==t.operations[i]&&this.setNeedsUpdate(i);if(e.customOperations)for(let i=0;i<this.channelCount;i++)Boolean(e.customOperations[i])!==Boolean(t.customOperations[i])&&this.setNeedsUpdate(i);void 0!==e.pointCount&&e.pointCount!==t.pointCount&&this.setNeedsUpdate(),e.attributes&&(e.attributes=Object.assign({},t.attributes,e.attributes)),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate=!0:!0!==this.needsUpdate&&(this.needsUpdate=this.needsUpdate||[],this.needsUpdate[e]=!0)}update(){if(!0===this.needsUpdate){var e;this.bins=function(e){let{pointCount:t,getBinId:i}=e;const n=new Map;for(let o=0;o<t;o++){const e=i(o);if(null===e)continue;let t=n.get(String(e));t?t.points.push(o):(t={id:e,index:n.size,points:[o]},n.set(String(e),t))}return Array.from(n.values())}({pointCount:this.props.pointCount,getBinId:a(this.props.getBin,this.props.attributes,this.props.binOptions)});const t=function(e){let{bins:t,dimensions:i,target:n}=e;const o=t.length*i;(!n||n.length<o)&&(n=new Float32Array(o));for(let s=0;s<t.length;s++){const{id:e}=t[s];Array.isArray(e)?n.set(e,s*i):n[s]=e}return n}({bins:this.bins,dimensions:this.dimensions,target:null==(e=this.binIds)?void 0:e.value});this.binIds={value:t,type:"float32",size:this.dimensions}}for(let o=0;o<this.channelCount;o++)if(!0===this.needsUpdate||this.needsUpdate[o]){var t,i,n;const e=this.props.customOperations[o]||s[this.props.operations[o]],{value:l,domain:c}=r({bins:this.bins,getValue:a(this.props.getValue[o],this.props.attributes,void 0),operation:e,target:null==(t=this.results[o])?void 0:t.value});this.results[o]={value:l,domain:c,type:"float32",size:1},null==(i=(n=this.props).onUpdate)||i.call(n,{channel:o})}this.needsUpdate=!1}preDraw(){}getBins(){return this.binIds}getResult(e){return this.results[e]}getResultDomain(e){var t,i;return null!=(t=null==(i=this.results[e])?void 0:i.domain)?t:[1/0,-1/0]}getBin(e){const t=this.bins[e];if(!t)return null;const i=new Array(this.channelCount);for(let n=0;n<i.length;n++){const t=this.results[n];i[n]=null==t?void 0:t.value[e]}return{id:t.id,value:i,count:t.points.length,pointIndices:t.points}}}},57149:(e,t,i)=>{i.d(t,{V:()=>m});var n=i(8274);function o(e,t,i){return e.createFramebuffer({width:t,height:i,colorAttachments:[e.createTexture({width:t,height:i,format:"rgba32float",sampler:{minFilter:"nearest",magFilter:"nearest"}})]})}const s={name:"binSorter",vs:"uniform binSorterUniforms {\n  ivec4 binIdRange;\n  ivec2 targetSize;\n} binSorter;\n",uniformTypes:{binIdRange:"vec4<i32>",targetSize:"vec2<i32>"}},r=[1,2,4,8],a=3e38,l={SUM:0,MEAN:0,MIN:0,MAX:0,COUNT:0},c=1024;class d{constructor(e,t){this.binsFBO=null,this.device=e,this.model=function(e,t){let i=t.vs;2===t.dimensions&&(i+="\nvoid getBin(out int binId) {\n  ivec2 binId2;\n  getBin(binId2);\n  if (binId2.x < binSorter.binIdRange.x || binId2.x >= binSorter.binIdRange.y) {\n    binId = -1;\n  } else {\n    binId = (binId2.y - binSorter.binIdRange.z) * (binSorter.binIdRange.y - binSorter.binIdRange.x) + binId2.x;\n  }\n}\n");const o="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-vertex\n\n"+i+"\n\nout vec3 v_Value;\n\nvoid main() {\n  int binIndex;\n  getBin(binIndex);\n  binIndex = binIndex - binSorter.binIdRange.x;\n  if (binIndex < 0) {\n    gl_Position = vec4(0.);\n    return;\n  }\n  int row = binIndex / binSorter.targetSize.x;\n  int col = binIndex - row * binSorter.targetSize.x;\n  vec2 position = (vec2(col, row) + 0.5) / vec2(binSorter.targetSize) * 2.0 - 1.0;\n  gl_Position = vec4(position, 0.0, 1.0);\n  gl_PointSize = 1.0;\n\n#if NUM_CHANNELS == 3\n  getValue(v_Value);\n#elif NUM_CHANNELS == 2\n  getValue(v_Value.xy);\n#else\n  getValue(v_Value.x);\n#endif\n}\n",r="#version 300 es\n#define SHADER_NAME gpu-aggregation-sort-bins-fragment\n\nprecision highp float;\n\nin vec3 v_Value;\nout vec4 fragColor;\n\nvoid main() {\n  fragColor.xyz = v_Value;\n\n  #ifdef MODULE_GEOMETRY\n  geometry.uv = vec2(0.);\n  DECKGL_FILTER_COLOR(fragColor, geometry);\n  #endif\n\n  fragColor.w = 1.0;\n}\n",a=new n.K(e,{bufferLayout:t.bufferLayout,modules:[...t.modules||[],s],defines:Object.assign({},t.defines,{NON_INSTANCED_MODEL:1,NUM_CHANNELS:t.channelCount}),isInstanced:!1,vs:o,fs:r,topology:"point-list",disableWarnings:!0});return a}(e,t)}get texture(){return this.binsFBO?this.binsFBO.colorAttachments[0].texture:null}destroy(){var e,t;this.model.destroy(),null==(e=this.binsFBO)||e.colorAttachments[0].texture.destroy(),null==(t=this.binsFBO)||t.destroy()}getBinValues(e){if(!this.binsFBO)return null;const t=e%c,i=Math.floor(e/c),n=this.device.readPixelsToArrayWebGL(this.binsFBO,{sourceX:t,sourceY:i,sourceWidth:1,sourceHeight:1}).buffer;return new Float32Array(n)}setDimensions(e,t){var i,n;const s=c,r=Math.ceil(e/s);this.binsFBO?this.binsFBO.height<r&&this.binsFBO.resize({width:s,height:r}):this.binsFBO=o(this.device,s,r);const a={binIdRange:[t[0][0],t[0][1],(null==(i=t[1])?void 0:i[0])||0,(null==(n=t[1])?void 0:n[1])||0],targetSize:[this.binsFBO.width,this.binsFBO.height]};this.model.shaderInputs.setProps({binSorter:a})}setModelProps(e){const t=this.model;e.attributes&&t.setAttributes(e.attributes),e.constantAttributes&&t.setConstantAttributes(e.constantAttributes),void 0!==e.vertexCount&&t.setVertexCount(e.vertexCount),e.shaderModuleProps&&t.shaderInputs.setProps(e.shaderModuleProps)}update(e){if(!this.binsFBO)return;const t=function(e){const t=Object.assign({},l);for(let i=0;i<e.length;i++){const n=e[i];n&&(t[n]+=r[i])}return t}(e);this._updateBins("SUM",t.SUM+t.MEAN),this._updateBins("MIN",t.MIN),this._updateBins("MAX",t.MAX)}_updateBins(e,t){if(0===t)return;t|=r[3];const i=this.model,n=this.binsFBO,o="MAX"===e?-a:"MIN"===e?a:0,s=this.device.beginRenderPass({id:"gpu-aggregation-"+e,framebuffer:n,parameters:{viewport:[0,0,n.width,n.height],colorMask:t},clearColor:[o,o,o,0],clearDepth:!1,clearStencil:!1});i.setParameters({blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendColorOperation:"MAX"===e?"max":"MIN"===e?"min":"add",blendAlphaOperation:"add"}),i.draw(s),s.end()}}var h=i(68475);const u={name:"aggregatorTransform",vs:"uniform aggregatorTransformUniforms {\n  ivec4 binIdRange;\n  bvec3 isCount;\n  bvec3 isMean;\n  float naN;\n} aggregatorTransform;\n",uniformTypes:{binIdRange:"vec4<i32>",isCount:"vec3<f32>",isMean:"vec3<f32>"}};class p{constructor(e,t){this.binBuffer=null,this.valueBuffer=null,this._domains=null,this.device=e,this.channelCount=t.channelCount,this.transform=function(e,t){const i="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-vertex\n\nuniform sampler2D bins;\n\n#if NUM_DIMS == 1\nout float binIds;\n#else\nout vec2 binIds;\n#endif\n\n#if NUM_CHANNELS == 1\nflat out float values;\n#elif NUM_CHANNELS == 2\nflat out vec2 values;\n#else\nflat out vec3 values;\n#endif\n\nconst float NAN = intBitsToFloat(-1);\n\nvoid main() {\n  int row = gl_VertexID / SAMPLER_WIDTH;\n  int col = gl_VertexID - row * SAMPLER_WIDTH;\n  vec4 weights = texelFetch(bins, ivec2(col, row), 0);\n  vec3 value3 = mix(\n    mix(weights.rgb, vec3(weights.a), aggregatorTransform.isCount),\n    weights.rgb / max(weights.a, 1.0),\n    aggregatorTransform.isMean\n  );\n  if (weights.a == 0.0) {\n    value3 = vec3(NAN);\n  }\n\n#if NUM_DIMS == 1\n  binIds = float(gl_VertexID + aggregatorTransform.binIdRange.x);\n#else\n  int y = gl_VertexID / (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  int x = gl_VertexID - y * (aggregatorTransform.binIdRange.y - aggregatorTransform.binIdRange.x);\n  binIds.y = float(y + aggregatorTransform.binIdRange.z);\n  binIds.x = float(x + aggregatorTransform.binIdRange.x);\n#endif\n\n#if NUM_CHANNELS == 3\n  values = value3;\n#elif NUM_CHANNELS == 2\n  values = value3.xy;\n#else\n  values = value3.x;\n#endif\n\n  gl_Position = vec4(0., 0., 0., 1.);\n  // This model renders into a 2x1 texture to obtain min and max simultaneously.\n  // See comments in fragment shader\n  gl_PointSize = 2.0;\n}\n",n="#version 300 es\n#define SHADER_NAME gpu-aggregation-domain-fragment\n\nprecision highp float;\n\n#if NUM_CHANNELS == 1\nflat in float values;\n#elif NUM_CHANNELS == 2\nflat in vec2 values;\n#else\nflat in vec3 values;\n#endif\n\nout vec4 fragColor;\n\nvoid main() {\n  vec3 value3;\n#if NUM_CHANNELS == 3\n  value3 = values;\n#elif NUM_CHANNELS == 2\n  value3.xy = values;\n#else\n  value3.x = values;\n#endif\n  if (isnan(value3.x)) discard;\n  // This shader renders into a 2x1 texture with blending=max\n  // The left pixel yields the max value of each channel\n  // The right pixel yields the min value of each channel\n  if (gl_FragCoord.x < 1.0) {\n    fragColor = vec4(value3, 1.0);\n  } else {\n    fragColor = vec4(-value3, 1.0);\n  }\n}\n";return new h.p(e,{vs:i,fs:n,topology:"point-list",modules:[u],parameters:{blend:!0,blendColorSrcFactor:"one",blendColorDstFactor:"one",blendColorOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one",blendAlphaOperation:"max"},defines:{NUM_DIMS:t.dimensions,NUM_CHANNELS:t.channelCount,SAMPLER_WIDTH:c},varyings:["binIds","values"],disableWarnings:!0})}(e,t),this.domainFBO=o(e,2,1)}destroy(){var e,t;this.transform.destroy(),null==(e=this.binBuffer)||e.destroy(),null==(t=this.valueBuffer)||t.destroy(),this.domainFBO.colorAttachments[0].texture.destroy(),this.domainFBO.destroy()}get domains(){if(!this._domains){const e=this.device.readPixelsToArrayWebGL(this.domainFBO).buffer,t=new Float32Array(e);this._domains=[[-t[4],t[0]],[-t[5],t[1]],[-t[6],t[2]]].slice(0,this.channelCount)}return this._domains}setDimensions(e,t){var i,n;const{model:o,transformFeedback:s}=this.transform;o.setVertexCount(e);const r={binIdRange:[t[0][0],t[0][1],(null==(i=t[1])?void 0:i[0])||0,(null==(n=t[1])?void 0:n[1])||0]};o.shaderInputs.setProps({aggregatorTransform:r});const a=e*t.length*4;var l;(!this.binBuffer||this.binBuffer.byteLength<a)&&(null==(l=this.binBuffer)||l.destroy(),this.binBuffer=this.device.createBuffer({byteLength:a}),s.setBuffer("binIds",this.binBuffer));const c=e*this.channelCount*4;var d;(!this.valueBuffer||this.valueBuffer.byteLength<c)&&(null==(d=this.valueBuffer)||d.destroy(),this.valueBuffer=this.device.createBuffer({byteLength:c}),s.setBuffer("values",this.valueBuffer))}update(e,t){if(!e)return;const i=this.transform,n=this.domainFBO,o={isCount:[0,1,2].map((e=>"COUNT"===t[e]?1:0)),isMean:[0,1,2].map((e=>"MEAN"===t[e]?1:0)),bins:e};i.model.shaderInputs.setProps({aggregatorTransform:o}),i.run({id:"gpu-aggregation-domain",framebuffer:n,parameters:{viewport:[0,0,2,1]},clearColor:[-3e38,-3e38,-3e38,0],clearDepth:!1,clearStencil:!1}),this._domains=null}}var g=i(50111),f=i(18120);class m{static isSupported(e){return e.features.has("float32-renderable-webgl")&&e.features.has("texture-blend-float-webgl")}constructor(e,t){this.binCount=0,this.binIds=null,this.results=[],this.device=e,this.dimensions=t.dimensions,this.channelCount=t.channelCount,this.props=Object.assign({},t,{pointCount:0,binIdRange:[[0,0]],operations:[],attributes:{},binOptions:{}}),this.needsUpdate=new Array(this.channelCount).fill(!0),this.binSorter=new d(e,t),this.aggregationTransform=new p(e,t),this.setProps(t)}getBins(){var e;const t=this.aggregationTransform.binBuffer;return t?((null==(e=this.binIds)?void 0:e.buffer)!==t&&(this.binIds={buffer:t,type:"float32",size:this.dimensions}),this.binIds):null}getResult(e){var t;const i=this.aggregationTransform.valueBuffer;return!i||e>=this.channelCount?null:((null==(t=this.results[e])?void 0:t.buffer)!==i&&(this.results[e]={buffer:i,type:"float32",size:1,stride:4*this.channelCount,offset:4*e}),this.results[e])}getResultDomain(e){return this.aggregationTransform.domains[e]}getBin(e){if(e<0||e>=this.binCount)return null;const{binIdRange:t}=this.props;let i;if(1===this.dimensions)i=[e+t[0][0]];else{const[[n,o],[s]]=t,r=o-n;i=[e%r+n,Math.floor(e/r)+s]}const n=this.binSorter.getBinValues(e);if(!n)return null;const o=n[3],s=[];for(let r=0;r<this.channelCount;r++){const e=this.props.operations[r];s[r]="COUNT"===e?o:0===o?NaN:"MEAN"===e?n[r]/o:n[r]}return{id:i,value:s,count:o}}destroy(){this.binSorter.destroy(),this.aggregationTransform.destroy()}setProps(e){const t=this.props;if("binIdRange"in e&&!(0,g.b)(e.binIdRange,t.binIdRange,2)){const t=e.binIdRange;if(f.A.assert(t.length===this.dimensions),1===this.dimensions){const[[e,i]]=t;this.binCount=i-e}else{const[[e,i],[n,o]]=t;this.binCount=(i-e)*(o-n)}this.binSorter.setDimensions(this.binCount,t),this.aggregationTransform.setDimensions(this.binCount,t),this.setNeedsUpdate()}if(e.operations)for(let i=0;i<this.channelCount;i++)e.operations[i]!==t.operations[i]&&this.setNeedsUpdate(i);if(void 0!==e.pointCount&&e.pointCount!==t.pointCount&&(this.binSorter.setModelProps({vertexCount:e.pointCount}),this.setNeedsUpdate()),e.binOptions&&((0,g.b)(e.binOptions,t.binOptions,2)||this.setNeedsUpdate(),this.binSorter.model.shaderInputs.setProps({binOptions:e.binOptions})),e.attributes){const t={},i={};for(const n of Object.values(e.attributes))for(const[e,o]of Object.entries(n.getValue()))ArrayBuffer.isView(o)?i[e]=o:o&&(t[e]=o);this.binSorter.setModelProps({attributes:t,constantAttributes:i})}e.shaderModuleProps&&this.binSorter.setModelProps({shaderModuleProps:e.shaderModuleProps}),Object.assign(this.props,e)}setNeedsUpdate(e){void 0===e?this.needsUpdate.fill(!0):this.needsUpdate[e]=!0}update(){}preDraw(){if(!this.needsUpdate.some(Boolean))return;const{operations:e}=this.props,t=this.needsUpdate.map(((t,i)=>t?e[i]:null));this.binSorter.update(t),this.aggregationTransform.update(this.binSorter.texture,e);for(let o=0;o<this.channelCount;o++){var i,n;if(this.needsUpdate[o])this.needsUpdate[o]=!1,null==(i=(n=this.props).onUpdate)||i.call(n,{channel:o})}}}},7017:(e,t,i)=>{function n(e){let{dataBounds:t,getBinId:i,padding:n=0}=e;const o=[t[0],t[1],[t[0][0],t[1][1]],[t[1][0],t[0][1]]].map((e=>i(e))),s=Math.min(...o.map((e=>e[0])))-n,r=Math.min(...o.map((e=>e[1])))-n;return[[s,Math.max(...o.map((e=>e[0])))+n+1],[r,Math.max(...o.map((e=>e[1])))+n+1]]}i.d(t,{O:()=>n})},58213:(e,t,i)=>{i.d(t,{Pu:()=>r,QO:()=>n,Y5:()=>o,cp:()=>a});const n=[[255,255,178],[254,217,118],[254,178,76],[253,141,60],[240,59,32],[189,0,38]];function o(e,t,i){let n;if(void 0===t&&(t=!1),void 0===i&&(i=Float32Array),Number.isFinite(e[0]))n=new i(e);else{n=new i(4*e.length);let t=0;for(let i=0;i<e.length;i++){const o=e[i];n[t++]=o[0],n[t++]=o[1],n[t++]=o[2],n[t++]=Number.isFinite(o[3])?o[3]:255}}if(t)for(let o=0;o<n.length;o++)n[o]/=255;return n}const s={linear:"linear",quantile:"nearest",quantize:"nearest",ordinal:"nearest"};function r(e,t){e.setSampler({minFilter:s[t],magFilter:s[t]})}function a(e,t,i){void 0===i&&(i="linear");const n=o(t,!1,Uint8Array);return e.createTexture({format:"rgba8unorm",sampler:{minFilter:s[i],magFilter:s[i],addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},data:n,width:n.length/4,height:1})}},39792:(e,t,i)=>{i.d(t,{bg:()=>n});class n{constructor(e,t){this.props={scaleType:"linear",lowerPercentile:0,upperPercentile:100},this.domain=null,this.cutoff=null,this.input=e,this.inputLength=t,this.attribute=e}getScalePercentile(){if(!this._percentile){const e=o(this.input,this.inputLength);this._percentile=function(e,t){void 0===t&&(t=100);const i=Array.from(e).filter(Number.isFinite).sort(s);let n=0;const o=Math.max(1,t),a=new Array(o-1);for(;++n<o;)a[n-1]=r(i,n/o);return{attribute:{value:e.map((e=>Number.isFinite(e)?function(e,t){let i=0,n=e.length;for(;i<n;){const o=i+n>>>1;e[o]>t?n=o:i=o+1}return i}(a,e):NaN)),type:"float32",size:1},domain:a}}(e)}return this._percentile}getScaleOrdinal(){if(!this._ordinal){const e=o(this.input,this.inputLength);this._ordinal=function(e){const t=new Set;for(const o of e)Number.isFinite(o)&&t.add(o);const i=Array.from(t).sort(),n=new Map;for(let o=0;o<i.length;o++)n.set(i[o],o);return{attribute:{value:e.map((e=>Number.isFinite(e)?n.get(e):NaN)),type:"float32",size:1},domain:i}}(e)}return this._ordinal}getCutoff(e){let{scaleType:t,lowerPercentile:i,upperPercentile:n}=e;if("quantile"===t)return[i,n-1];if(i>0||n<100){var o,s;const{domain:e}=this.getScalePercentile();let r=null!=(o=e[Math.floor(i)-1])?o:-1/0,a=null!=(s=e[Math.floor(n)-1])?s:1/0;if("ordinal"===t){const{domain:e}=this.getScaleOrdinal();r=e.findIndex((e=>e>=r)),a=e.findIndex((e=>e>a))-1,-2===a&&(a=e.length-1)}return[r,a]}return null}update(e){const t=this.props;if(e.scaleType!==t.scaleType)switch(e.scaleType){case"quantile":{const{attribute:e}=this.getScalePercentile();this.attribute=e,this.domain=[0,99];break}case"ordinal":{const{attribute:e,domain:t}=this.getScaleOrdinal();this.attribute=e,this.domain=[0,t.length-1];break}default:this.attribute=this.input,this.domain=null}return e.scaleType===t.scaleType&&e.lowerPercentile===t.lowerPercentile&&e.upperPercentile===t.upperPercentile||(this.cutoff=this.getCutoff(e)),this.props=e,this}}function o(e,t){var i,n;const o=(null!=(i=e.stride)?i:4)/4,s=(null!=(n=e.offset)?n:0)/4;let r=e.value;if(!r){var a;const i=null==(a=e.buffer)?void 0:a.readSyncWebGL(0,4*o*t);i&&(r=new Float32Array(i.buffer),e.value=r)}if(1===o)return r.subarray(0,t);const l=new Float32Array(t);for(let c=0;c<t;c++)l[c]=r[c*o+s];return l}function s(e,t){return e-t}function r(e,t){const i=e.length;if(t<=0||i<2)return e[0];if(t>=1)return e[i-1];const n=(i-1)*t,o=Math.floor(n),s=e[o];return s+(e[o+1]-s)*(n-o)}},74759:(e,t,i)=>{i.d(t,{A:()=>ue});var n=i(30428),o=i(50111),s=i(43976),r=i(8961),a=i(21410),l=i(39738),c=i(57149),d=i(52601),h=i(29586);const u=.5,p=1/6,g={N:[0,u],E:[u,0],S:[0,-.5],W:[-.5,0],NE:[u,u],NW:[-.5,u],SE:[u,-.5],SW:[-.5,-.5]},f=[g.W,g.SW,g.S],m=[g.S,g.SE,g.E],v=[g.E,g.NE,g.N],y=[g.NW,g.W,g.N],_=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5]],w=[[-p,-.5],[p,-.5],[u,-p],[u,p]],b=[[u,-p],[u,p],[p,u],[-p,u]],x=[[-.5,p],[-.5,-p],[p,u],[-p,u]],P=[g.W,g.SW,g.SE,g.E],S=[g.S,g.SE,g.NE,g.N],C=[g.NW,g.W,g.E,g.NE],A=[g.NW,g.SW,g.S,g.N],M=[[-.5,p],[-.5,-p],[u,-p],[u,p]],T=[[-p,-.5],[p,-.5],[p,u],[-p,u]],j=[g.NW,g.SW,g.SE,g.NE],E=[g.NW,g.SW,g.SE,g.E,g.N],O=[g.W,g.SW,g.SE,g.NE,g.N],L=[g.NW,g.W,g.S,g.SE,g.NE],I=[g.NW,g.SW,g.S,g.E,g.NE],R=[g.NW,g.W,[u,-p],[u,p],g.N],k=[[-p,-.5],[p,-.5],g.E,g.NE,g.N],z=[[-.5,p],[-.5,-p],g.S,g.SE,g.E],D=[g.W,g.SW,g.S,[p,u],[-p,u]],N=[g.NW,g.W,[-p,-.5],[p,-.5],g.N],V=[[-.5,p],[-.5,-p],g.E,g.NE,g.N],U=[g.S,g.SE,g.E,[p,u],[-p,u]],F=[g.W,g.SW,g.S,[u,-p],[u,p]],B=[g.W,g.SW,g.SE,g.E,[p,u],[-p,u]],W=[[-.5,p],[-.5,-p],g.S,g.SE,g.NE,g.N],G=[g.NW,g.W,[-p,-.5],[p,-.5],g.E,g.NE],H=[g.NW,g.SW,g.S,[u,-p],[u,p],g.N],K=[g.W,g.SW,g.S,g.E,g.NE,g.N],Y=[g.NW,g.W,g.S,g.SE,g.E,g.N],Z=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5],g.E,g.NE,g.N],q=[g.W,g.SW,g.S,[u,-p],[u,p],[p,u],[-p,u]],J=[g.NW,g.W,[-p,-.5],[p,-.5],[u,-p],[u,p],g.N],X=[[-.5,p],[-.5,-p],g.S,g.SE,g.E,[p,u],[-p,u]],$=[[-.5,p],[-.5,-p],[-p,-.5],[p,-.5],[u,-p],[u,p],[p,u],[-p,u]],Q={0:[],1:[[g.W,g.S]],2:[[g.S,g.E]],3:[[g.W,g.E]],4:[[g.N,g.E]],5:{0:[[g.W,g.S],[g.N,g.E]],1:[[g.W,g.N],[g.S,g.E]]},6:[[g.N,g.S]],7:[[g.W,g.N]],8:[[g.W,g.N]],9:[[g.N,g.S]],10:{0:[[g.W,g.N],[g.S,g.E]],1:[[g.W,g.S],[g.N,g.E]]},11:[[g.N,g.E]],12:[[g.W,g.E]],13:[[g.S,g.E]],14:[[g.W,g.S]],15:[]};function ee(e){return parseInt(e,4)}const te={[ee("0000")]:[],[ee("2222")]:[],[ee("2221")]:[f],[ee("2212")]:[m],[ee("2122")]:[v],[ee("1222")]:[y],[ee("0001")]:[f],[ee("0010")]:[m],[ee("0100")]:[v],[ee("1000")]:[y],[ee("2220")]:[_],[ee("2202")]:[w],[ee("2022")]:[b],[ee("0222")]:[x],[ee("0002")]:[_],[ee("0020")]:[w],[ee("0200")]:[b],[ee("2000")]:[x],[ee("0011")]:[P],[ee("0110")]:[S],[ee("1100")]:[C],[ee("1001")]:[A],[ee("2211")]:[P],[ee("2112")]:[S],[ee("1122")]:[C],[ee("1221")]:[A],[ee("2200")]:[M],[ee("2002")]:[T],[ee("0022")]:[M],[ee("0220")]:[T],[ee("1111")]:[j],[ee("1211")]:[E],[ee("2111")]:[O],[ee("1112")]:[L],[ee("1121")]:[I],[ee("1011")]:[E],[ee("0111")]:[O],[ee("1110")]:[L],[ee("1101")]:[I],[ee("1200")]:[R],[ee("0120")]:[k],[ee("0012")]:[z],[ee("2001")]:[D],[ee("1022")]:[R],[ee("2102")]:[k],[ee("2210")]:[z],[ee("0221")]:[D],[ee("1002")]:[N],[ee("2100")]:[V],[ee("0210")]:[U],[ee("0021")]:[F],[ee("1220")]:[N],[ee("0122")]:[V],[ee("2012")]:[U],[ee("2201")]:[F],[ee("0211")]:[B],[ee("2110")]:[W],[ee("1102")]:[G],[ee("1021")]:[H],[ee("2011")]:[B],[ee("0112")]:[W],[ee("1120")]:[G],[ee("1201")]:[H],[ee("2101")]:[K],[ee("0121")]:[K],[ee("1012")]:[Y],[ee("1210")]:[Y],[ee("0101")]:{0:[f,v],1:[K],2:[K]},[ee("1010")]:{0:[y,m],1:[Y],2:[Y]},[ee("2121")]:{0:[K],1:[K],2:[f,v]},[ee("1212")]:{0:[Y],1:[Y],2:[y,m]},[ee("2120")]:{0:[Z],1:[Z],2:[_,v]},[ee("2021")]:{0:[q],1:[q],2:[f,b]},[ee("1202")]:{0:[J],1:[J],2:[y,w]},[ee("0212")]:{0:[X],1:[X],2:[m,x]},[ee("0102")]:{0:[_,v],1:[Z],2:[Z]},[ee("0201")]:{0:[f,b],1:[q],2:[q]},[ee("1020")]:{0:[y,w],1:[J],2:[J]},[ee("2010")]:{0:[m,x],1:[X],2:[X]},[ee("2020")]:{0:[x,w],1:[$],2:[_,b]},[ee("0202")]:{0:[b,_],1:[$],2:[x,w]}};function ie(e,t){return Number.isNaN(e)?0:Array.isArray(t)?e<t[0]?0:e<t[1]?1:2:e>=t?1:0}function ne(e){const{x:t,y:i,xRange:n,yRange:o,getValue:s,threshold:r}=e,a=t<n[0],l=t>=n[1]-1,c=i<o[0],d=i>=o[1]-1,h=a||l||c||d;let u,p,g,f,m=0;if(a||d)g=0;else{const e=s(t,i+1);g=ie(e,r),m+=e}if(l||d)f=0;else{const e=s(t+1,i+1);f=ie(e,r),m+=e}if(l||c)p=0;else{const e=s(t+1,i);p=ie(e,r),m+=e}if(a||c)u=0;else{const e=s(t,i);u=ie(e,r),m+=e}let v=-1;Number.isFinite(r)&&(v=g<<3|f<<2|p<<1|u),Array.isArray(r)&&(v=g<<6|f<<4|p<<2|u);let y=0;return h||(y=ie(m/4,r)),{code:v,meanCode:y}}function oe(e){const{x:t,y:i,z:n,code:o,meanCode:s}=e;let r=te[o];Array.isArray(r)||(r=r[s]);const a=t+1,l=i+1,c=[];return r.forEach((e=>{const t=[];e.forEach((e=>{const i=a+e[0],o=l+e[1];t.push([i,o,n])})),c.push(t)})),c}function se(e){const{x:t,y:i,z:n,code:o,meanCode:s}=e;let r=Q[o];Array.isArray(r)||(r=r[s]);const a=t+1,l=i+1,c=[];return r.forEach((e=>{e.forEach((e=>{const t=a+e[0],i=l+e[1];c.push([t,i,n])}))})),c}function re(e){const{aggregator:t,binIdRange:i,channel:n}=e;if(t instanceof c.V){var o;const e=null==(o=t.getResult(n))?void 0:o.buffer;if(e){return function(e,t){const[[i,n],[o,s]]=t,r=n-i,a=s-o;return(t,n)=>(n-=o,(t-=i)<0||t>=r||n<0||n>=a?NaN:e[n*r+t])}(new Float32Array(e.readSyncWebGL().buffer),i)}}if(t instanceof d.M){var s,r;const e=null==(s=t.getResult(n))?void 0:s.value,i=null==(r=t.getBins())?void 0:r.value;if(i&&e)return function(e,t,i){const n={};for(let o=0;o<i;o++){const i=t[2*o],s=t[2*o+1];n[i]=n[i]||{},n[i][s]=e[o]}return(e,t)=>{var i,o;return null!=(i=null==(o=n[e])?void 0:o[t])?i:NaN}}(e,i,t.binCount)}return null}var ae=i(7017),le=i(31886);const ce={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}},de=[255,255,255,255];class he extends h.A{getAggregatorType(){return this.props.gpuAggregation&&c.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"===e?new d.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,i)=>{let{positions:n}=e;const o=this.state.aggregatorViewport.projectPosition(n),{cellSizeCommon:s,cellOriginCommon:r}=i;return[Math.floor((o[0]-r[0])/s[0]),Math.floor((o[1]-r[1])/s[1])]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}],onUpdate:this._onAggregationUpdate.bind(this)}):new c.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[n.A,ce],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float value) {\n    value = counts;\n  }\n  "}),{onUpdate:this._onAggregationUpdate.bind(this)}))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:s}=e,{aggregator:r}=this.state;if(t||s.dataChanged||i.cellSize!==n.cellSize||!(0,o.b)(i.gridOrigin,n.gridOrigin,1)||i.aggregation!==n.aggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:n}=this.state;r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.aggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t}})}return(0,o.b)(n.contours,i.contours,2)||this.setState({contourData:null}),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let r=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a,gridOrigin:l}=this.props,{unitsPerMeter:c}=o.getDistanceScales(r);t[0]=c[0]*a,t[1]=c[1]*a;const d=o.projectFlat(r);i=[Math.floor((d[0]-l[0])/t[0])*t[0]+l[0],Math.floor((d[1]-l[1])/t[1])*t[1]+l[1]],r=o.unprojectFlat(i);const h=o.constructor;o=o.isGeospatial?new h({longitude:r[0],latitude:r[1],zoom:12}):new s.A({position:[r[0],r[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,ae.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return[Math.floor((n[0]-i[0])/t[0]),Math.floor((n[1]-i[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(){const{aggregator:e,binIdRange:t}=this.state;this.setState({aggregatedValueReader:re({aggregator:e,binIdRange:t,channel:0}),contourData:null})}_getContours(){const{aggregatedValueReader:e}=this.state;if(!e)return null;if(!this.state.contourData){const{binIdRange:t}=this.state,{contours:i}=this.props,n=function(e){let{contours:t,getValue:i,xRange:n,yRange:o}=e;const s=[],r=[];let a=0,l=0;for(let d=0;d<t.length;d++){var c;const e=t[d],h=null!=(c=e.zIndex)?c:d,{threshold:u}=e;for(let t=n[0]-1;t<n[1];t++)for(let c=o[0]-1;c<o[1];c++){const{code:d,meanCode:p}=ne({getValue:i,threshold:u,x:t,y:c,xRange:n,yRange:o}),g={x:t,y:c,z:h,code:d,meanCode:p};if(Array.isArray(u)){const t=oe(g);for(const i of t)r[l++]={vertices:i,contour:e}}else{const t=se(g);t.length>0&&(s[a++]={vertices:t,contour:e})}}}return{lines:s,polygons:r}}({contours:i,getValue:e,xRange:t[0],yRange:t[1]});this.state.contourData=n}return this.state.contourData}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{cellSizeCommon:e,cellOriginCommon:i}});break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const e=this._getContours();if(!e)return null;const{lines:t,polygons:i}=e,{zOffset:n}=this.props,{cellOriginCommon:o,cellSizeCommon:s}=this.state,c=this.getSubLayerClass("lines",a.A),d=this.getSubLayerClass("bands",l.A),h=(new le.k).translate([o[0],o[1],0]).scale([s[0],s[1],n]);return[t&&t.length>0&&new c(this.getSubLayerProps({id:"lines"}),{data:t,coordinateSystem:r.rf.CARTESIAN,modelMatrix:h,getPath:e=>e.vertices,getColor:e=>{var t;return null!=(t=e.contour.color)?t:de},getWidth:e=>{var t;return null!=(t=e.contour.strokeWidth)?t:1},widthUnits:"pixels"}),i&&i.length>0&&new d(this.getSubLayerProps({id:"bands"}),{data:i,coordinateSystem:r.rf.CARTESIAN,modelMatrix:h,getPolygon:e=>e.vertices,getFillColor:e=>{var t;return null!=(t=e.contour.color)?t:de}})]}getPickingInfo(e){const t=e.info,{object:i}=t;return i&&(t.object={contour:i.contour}),t}}he.layerName="ContourLayer",he.defaultProps={cellSize:{type:"number",min:1,value:1e3},gridOrigin:{type:"array",compare:!0,value:[0,0]},getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM",contours:{type:"object",value:[{threshold:1}],optional:!0,compare:3},zOffset:.005};const ue=he},99550:(e,t,i)=>{i.d(t,{A:()=>b});var n=i(18120),o=i(30428),s=i(33698),r=i(43976),a=i(57149),l=i(52601),c=i(29586),d=i(58213),h=i(39792),u=i(7017),p=i(34651),g=i(8145);const f={name:"grid",vs:"uniform gridUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n  vec2 sizeCommon;\n} grid;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>",sizeCommon:"vec2<f32>"}};class m extends p.A{getShaders(){const e=super.getShaders();return e.modules.push(f),Object.assign({},e,{vs:"#version 300 es\n#define SHADER_NAME grid-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < grid.colorDomain.z ||\ninstanceColorValues > grid.colorDomain.w ||\ninstanceElevationValues < grid.elevationDomain.z ||\ninstanceElevationValues > grid.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = (instancePositions + (positions.xy + 1.0) / 2.0 * column.coverage) * grid.sizeCommon + grid.originCommon - project.commonOrigin.xy;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, grid.elevationDomain.xy, grid.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, grid.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n"})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e,n=this.state.fillModel;if(i.colorRange!==t.colorRange){var o;null==(o=this.state.colorTexture)||o.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};n.shaderInputs.setProps({grid:e})}else i.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}_updateGeometry(){const e=new g.c9;this.state.fillModel.setGeometry(e)}draw(e){let{uniforms:t}=e;const{cellOriginCommon:i,cellSizeCommon:n,elevationRange:o,elevationScale:s,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel,p={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],h[0]),Math.min(c[1],h[1]),Math.max(c[0]-1,h[0]),Math.min(c[1]+1,h[1])],elevationRange:[o[0]*s,o[1]*s],originCommon:i,sizeCommon:n};u.shaderInputs.setProps({column:{extruded:r,coverage:a},grid:p}),u.draw(this.context.renderPass)}}m.layerName="GridCellLayer";const v={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 cellOriginCommon;\n  vec2 cellSizeCommon;\n} binOptions;\n",uniformTypes:{cellOriginCommon:"vec2<f32>",cellSizeCommon:"vec2<f32>"}};function y(){}const _={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:y,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:y,cellSize:{type:"number",min:0,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},gridAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class w extends c.A{getAggregatorType(){const{gpuAggregation:e,gridAggregator:t,getColorValue:i,getElevationValue:o}=this.props;return e&&(t||i||o)?(n.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{gridAggregator:e,cellSize:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(i,n,o)=>{let{positions:s}=i;if(e)return e(s,t);const r=this.state.aggregatorViewport.projectPosition(s),{cellSizeCommon:a,cellOriginCommon:l}=o;return[Math.floor((r[0]-l[0])/a[0]),Math.floor((r[1]-l[1])/a[1])]}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[o.A,v],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    vec2 gridCoords = floor(positionCommon.xy / binOptions.cellSizeCommon);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:o}=e,{aggregator:r}=this.state;if(!o.dataChanged&&this.state.dataAsArray||!i.getColorValue&&!i.getElevationValue||(this.state.dataAsArray=Array.from((0,s.X)(i.data).iterable)),t||o.dataChanged||i.cellSize!==n.cellSize||i.getColorValue!==n.getColorValue||i.getElevationValue!==n.getElevationValue||i.colorAggregation!==n.colorAggregation||i.elevationAggregation!==n.elevationAggregation){this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:t,binIdRange:n,dataAsArray:o}=this.state;if(r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.colorAggregation,i.elevationAggregation],binOptions:{cellSizeCommon:e,cellOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),o){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>o[e])),{indices:t,data:i.data})),t&&(e=>t(e.map((e=>o[e])),{indices:e,data:i.data}))]})}}return o.updateTriggersChanged&&o.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),o.updateTriggersChanged&&o.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds(),t=[1,1];let i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let s=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{cellSize:a}=this.props,{unitsPerMeter:l}=o.getDistanceScales(s);t[0]=l[0]*a,t[1]=l[1]*a;const c=o.projectFlat(s);i=[Math.floor(c[0]/t[0])*t[0],Math.floor(c[1]/t[1])*t[1]],s=o.unprojectFlat(i);const d=o.constructor;o=o.isGeospatial?new d({longitude:s[0],latitude:s[1],zoom:12}):new r.A({position:[s[0],s[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,u.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return[Math.floor((n[0]-i[0])/t[0]),Math.floor((n[1]-i[1])/t[1])]}})}this.setState({cellSizeCommon:t,cellOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const i=this.getCurrentLayer().props,{aggregator:n}=this.state;if(0===t){const e=n.getResult(0);this.setState({colors:new h.bg(e,n.binCount)}),i.onSetColorDomain(n.getResultDomain(0))}else if(1===t){const e=n.getResult(1);this.setState({elevations:new h.bg(e,n.binCount)}),i.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{cellSizeCommon:e,cellOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{cellSizeCommon:e,cellOriginCommon:i}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:i,cellOriginCommon:n,cellSizeCommon:o}=this.state,{elevationScale:s,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:h,colorScaleType:u,lowerPercentile:p,upperPercentile:g,colorDomain:f,elevationScaleType:v,elevationLowerPercentile:y,elevationUpperPercentile:_,elevationDomain:w}=this.props,b=this.getSubLayerClass("cells",m),x=i.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:u,lowerPercentile:p,upperPercentile:g}),S=null==(t=this.state.elevations)?void 0:t.update({scaleType:v,lowerPercentile:y,upperPercentile:_});return P&&S?new b(this.getSubLayerProps({id:"cells"}),{data:{length:i.binCount,attributes:{getBin:x,getColorValue:P.attribute,getElevationValue:S.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[x],getColorValue:[P.attribute],getElevationValue:[S.attribute]},cellOriginCommon:n,cellSizeCommon:o,elevationScale:s,colorRange:r,colorScaleType:u,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||i.getResultDomain(0),elevationDomain:S.domain||w||i.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:S.cutoff,transitions:h&&{getFillColor:h.getColorValue||h.getColorWeight,getElevation:h.getElevationValue||h.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;e&&(n={col:e.id[0],row:e.id[1],colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=n}return t}}w.layerName="GridLayer",w.defaultProps=_;const b=w},69703:(e,t,i)=>{i.d(t,{A:()=>I});const n=new Float32Array(12);function o(e,t){void 0===t&&(t=2);let i=0;for(const o of e)for(let e=0;e<t;e++)n[i++]=o[e]||0;return n}var s=i(66652),r=i(30428),a=i(8961),l=i(1570),c=i(18120),d=i(8274),h=i(3002);const u="uniform triangleUniforms {\n  float aggregationMode;\n  vec2 colorDomain;\n  float intensity;\n  float threshold;\n} triangle;\n",p={name:"triangle",vs:u,fs:u,uniformTypes:{aggregationMode:"f32",colorDomain:"vec2<f32>",intensity:"f32",threshold:"f32"}};class g extends h.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME heatp-map-layer-vertex-shader\nuniform sampler2D maxTexture;\nin vec3 positions;\nin vec2 texCoords;\nout vec2 vTexCoords;\nout float vIntensityMin;\nout float vIntensityMax;\nvoid main(void) {\ngl_Position = project_position_to_clipspace(positions, vec3(0.0), vec3(0.0));\nvTexCoords = texCoords;\nvec4 maxTexture = texture(maxTexture, vec2(0.5));\nfloat maxValue = triangle.aggregationMode < 0.5 ? maxTexture.r : maxTexture.g;\nfloat minValue = maxValue * triangle.threshold;\nif (triangle.colorDomain[1] > 0.) {\nmaxValue = triangle.colorDomain[1];\nminValue = triangle.colorDomain[0];\n}\nvIntensityMax = triangle.intensity / maxValue;\nvIntensityMin = triangle.intensity / minValue;\n}\n",fs:"#version 300 es\n#define SHADER_NAME triangle-layer-fragment-shader\nprecision highp float;\nuniform sampler2D weightsTexture;\nuniform sampler2D colorTexture;\nin vec2 vTexCoords;\nin float vIntensityMin;\nin float vIntensityMax;\nout vec4 fragColor;\nvec4 getLinearColor(float value) {\nfloat factor = clamp(value * vIntensityMax, 0., 1.);\nvec4 color = texture(colorTexture, vec2(factor, 0.5));\ncolor.a *= min(value * vIntensityMin, 1.0);\nreturn color;\n}\nvoid main(void) {\nvec4 weights = texture(weightsTexture, vTexCoords);\nfloat weight = weights.r;\nif (triangle.aggregationMode > 0.5) {\nweight /= max(1.0, weights.a);\n}\nif (weight <= 0.) {\ndiscard;\n}\nvec4 linearColor = getLinearColor(weight);\nlinearColor.a *= layer.opacity;\nfragColor = linearColor;\n}\n",modules:[r.A,p]})}initializeState(e){let{device:t}=e;this.setState({model:this._getModel(t)})}_getModel(e){const{vertexCount:t,data:i}=this.props;return new d.K(e,Object.assign({},this.getShaders(),{id:this.props.id,attributes:i.attributes,bufferLayout:[{name:"positions",format:"float32x3"},{name:"texCoords",format:"float32x2"}],topology:"triangle-strip",vertexCount:t}))}draw(){const{model:e}=this.state,{aggregationMode:t,colorDomain:i,intensity:n,threshold:o,colorTexture:s,maxTexture:r,weightsTexture:a}=this.props,l={aggregationMode:t,colorDomain:i,intensity:n,threshold:o,colorTexture:s,maxTexture:r,weightsTexture:a};e.shaderInputs.setProps({triangle:l}),e.draw(this.context.renderPass)}}g.layerName="TriangleLayer";const f=g;var m=i(33847),v=i(9649);function y(e,t){const i={};for(const n in e)t.includes(n)||(i[n]=e[n]);return i}class _ extends m.A{initializeAggregationLayer(e){super.initializeState(this.context),this.setState({ignoreProps:y(this.constructor._propTypes,e.data.props),dimensions:e})}updateState(e){super.updateState(e);const{changeFlags:t}=e;if(t.extensionsChanged){const e=this.getShaders({});e&&e.defines&&(e.defines.NON_INSTANCED_MODEL=1),this.updateShaders(e)}this._updateAttributes()}updateAttributes(e){this.setState({changedAttributes:e})}getAttributes(){return this.getAttributeManager().getAttributes()}getModuleSettings(){const{viewport:e,mousePosition:t,device:i}=this.context;return Object.assign(Object.create(this.props),{viewport:e,mousePosition:t,picking:{isActive:0},devicePixelRatio:i.canvasContext.cssToDeviceRatio()})}updateShaders(e){}isAggregationDirty(e,t){void 0===t&&(t={});const{props:i,oldProps:n,changeFlags:o}=e,{compareAll:s=!1,dimension:r}=t,{ignoreProps:a}=this.state,{props:l,accessors:c=[]}=r,{updateTriggersChanged:d}=o;if(o.dataChanged)return!0;if(d){if(d.all)return!0;for(const e of c)if(d[e])return!0}if(s)return!!o.extensionsChanged||(0,v.Me)({oldProps:n,newProps:i,ignoreProps:a,propTypes:this.constructor._propTypes});for(const h of l)if(i[h]!==n[h])return!0;return!1}isAttributeChanged(e){const{changedAttributes:t}=this.state;return e?t&&void 0!==t[e]:!function(e){let t=!0;for(const i in e){t=!1;break}return t}(t)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}}_.layerName="AggregationLayer";const w=_;var b=i(58213);const x="#version 300 es\nin vec3 positions;\nin vec3 positions64Low;\nin float weights;\nout vec4 weightsTexture;\nvoid main()\n{\nweightsTexture = vec4(weights * weight.weightsScale, 0., 0., 1.);\nfloat radiusTexels = project_pixel_size(weight.radiusPixels) * weight.textureWidth / (weight.commonBounds.z - weight.commonBounds.x);\ngl_PointSize = radiusTexels * 2.;\nvec3 commonPosition = project_position(positions, positions64Low);\ngl_Position.xy = (commonPosition.xy - weight.commonBounds.xy) / (weight.commonBounds.zw - weight.commonBounds.xy) ;\ngl_Position.xy = (gl_Position.xy * 2.) - (1.);\ngl_Position.w = 1.0;\n}\n",P="#version 300 es\nin vec4 weightsTexture;\nout vec4 fragColor;\nfloat gaussianKDE(float u){\nreturn pow(2.71828, -u*u/0.05555)/(1.77245385*0.166666);\n}\nvoid main()\n{\nfloat dist = length(gl_PointCoord - vec2(0.5, 0.5));\nif (dist > 0.5) {\ndiscard;\n}\nfragColor = weightsTexture * gaussianKDE(2. * dist);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",S={name:"weight",vs:"uniform weightUniforms {\n  vec4 commonBounds;\n  float radiusPixels;\n  float textureWidth;\n  float weightsScale;\n} weight;\n",uniformTypes:{commonBounds:"vec4<f32>",radiusPixels:"f32",textureWidth:"f32",weightsScale:"f32"}},C={name:"maxWeight",vs:"uniform maxWeightUniforms {\n  float textureSize;\n} maxWeight;\n",uniformTypes:{textureSize:"f32"}},A={format:"rgba8unorm",dimension:"2d",width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}},M=[0,0],T={SUM:0,MEAN:1},j={getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},intensity:{type:"number",min:0,value:1},radiusPixels:{type:"number",min:1,max:100,value:50},colorRange:b.QO,threshold:{type:"number",min:0,max:1,value:.05},colorDomain:{type:"array",value:null,optional:!0},aggregation:"SUM",weightsTextureSize:{type:"number",min:128,max:2048,value:2048},debounceTimeout:{type:"number",min:0,max:1e3,value:500}},E=["float32-renderable-webgl","texture-blend-float-webgl"],O={data:{props:["radiusPixels"]}};class L extends w{getShaders(e){let t=[r.A];return e.modules&&(t=[...t,...e.modules]),super.getShaders(Object.assign({},e,{modules:t}))}initializeState(){super.initializeAggregationLayer(O),this.setState({colorDomain:M}),this._setupTextureParams(),this._setupAttributes(),this._setupResources()}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){super.updateState(e),this._updateHeatmapState(e)}_updateHeatmapState(e){const{props:t,oldProps:i}=e,n=this._getChangeFlags(e);if((n.dataChanged||n.viewportChanged)&&(n.boundsChanged=this._updateBounds(n.dataChanged),this._updateTextureRenderingBounds()),n.dataChanged||n.boundsChanged){if(clearTimeout(this.state.updateTimer),this.setState({isWeightMapDirty:!0}),n.dataChanged){const e=this.getShaders({vs:x,fs:P});this._createWeightsTransform(e)}}else n.viewportZoomChanged&&this._debouncedUpdateWeightmap();t.colorRange!==i.colorRange&&this._updateColorTexture(e),this.state.isWeightMapDirty&&this._updateWeightmap(),this.setState({zoom:e.context.viewport.zoom})}renderLayers(){const{weightsTexture:e,triPositionBuffer:t,triTexCoordBuffer:i,maxWeightsTexture:n,colorTexture:o,colorDomain:s}=this.state,{updateTriggers:r,intensity:l,threshold:c,aggregation:d}=this.props;return new(this.getSubLayerClass("triangle",f))(this.getSubLayerProps({id:"triangle-layer",updateTriggers:r}),{coordinateSystem:a.rf.DEFAULT,data:{attributes:{positions:t,texCoords:i}},vertexCount:4,maxTexture:n,colorTexture:o,aggregationMode:T[d]||0,weightsTexture:e,intensity:l,threshold:c,colorDomain:s})}finalizeState(e){super.finalizeState(e);const{weightsTransform:t,weightsTexture:i,maxWeightTransform:n,maxWeightsTexture:o,triPositionBuffer:s,triTexCoordBuffer:r,colorTexture:a,updateTimer:l}=this.state;null==t||t.destroy(),null==i||i.destroy(),null==n||n.destroy(),null==o||o.destroy(),null==s||s.destroy(),null==r||r.destroy(),null==a||a.destroy(),l&&clearTimeout(l)}_getAttributeManager(){return new l.A(this.context.device,{id:this.props.id,stats:this.context.stats})}_getChangeFlags(e){const t={},{dimensions:i}=this.state;t.dataChanged=this.isAttributeChanged()?"attribute changed":this.isAggregationDirty(e,{compareAll:!0,dimension:i.data})&&"aggregation is dirty",t.viewportChanged=e.changeFlags.viewportChanged;const{zoom:n}=this.state;return e.context.viewport&&e.context.viewport.zoom===n||(t.viewportZoomChanged=!0),t}_createTextures(){const{textureSize:e,format:t}=this.state;this.setState({weightsTexture:this.context.device.createTexture(Object.assign({},A,{width:e,height:e,format:t})),maxWeightsTexture:this.context.device.createTexture(Object.assign({},A,{width:1,height:1,format:t}))})}_setupAttributes(){this.getAttributeManager().add({positions:{size:3,type:"float64",accessor:"getPosition"},weights:{size:1,accessor:"getWeight"}}),this.setState({positionAttributeName:"positions"})}_setupTextureParams(){const{device:e}=this.context,{weightsTextureSize:t}=this.props,i=Math.min(t,e.limits.maxTextureDimension2D),n=E.every((t=>e.features.has(t))),o=n?"rgba32float":"rgba8unorm",s=n?1:1/255;this.setState({textureSize:i,format:o,weightsScale:s}),n||c.A.warn("HeatmapLayer: "+this.id+" rendering to float texture not supported, falling back to low precision format")()}_createWeightsTransform(e){var t;let{weightsTransform:i}=this.state;const{weightsTexture:n}=this.state,o=this.getAttributeManager();null==(t=i)||t.destroy(),i=new s.G(this.context.device,Object.assign({id:this.id+"-weights-transform",bufferLayout:o.getBufferLayouts(),vertexCount:1,targetTexture:n,parameters:{depthWriteEnabled:!1,blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"},topology:"point-list"},e,{modules:[...e.modules,S]})),this.setState({weightsTransform:i})}_setupResources(){this._createTextures();const{device:e}=this.context,{textureSize:t,weightsTexture:i,maxWeightsTexture:n}=this.state,o=this.getShaders({vs:x,fs:P});this._createWeightsTransform(o);const r=this.getShaders({vs:"#version 300 es\nuniform sampler2D inTexture;\nout vec4 outTexture;\nvoid main()\n{\nint yIndex = gl_VertexID / int(maxWeight.textureSize);\nint xIndex = gl_VertexID - (yIndex * int(maxWeight.textureSize));\nvec2 uv = (0.5 + vec2(float(xIndex), float(yIndex))) / maxWeight.textureSize;\noutTexture = texture(inTexture, uv);\ngl_Position = vec4(0.0, 0.0, 0.0, 1.0);\ngl_PointSize = 1.0;\n}\n",fs:"#version 300 es\nin vec4 outTexture;\nout vec4 fragColor;\nvoid main() {\nfragColor = outTexture;\nfragColor.g = outTexture.r / max(1.0, outTexture.a);\n}\n",modules:[C]}),a=new s.G(e,Object.assign({id:this.id+"-max-weights-transform",targetTexture:n},r,{vertexCount:t*t,topology:"point-list",parameters:{depthWriteEnabled:!1,blendColorOperation:"max",blendAlphaOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})),l={inTexture:i,textureSize:t};a.model.shaderInputs.setProps({maxWeight:l}),this.setState({weightsTexture:i,maxWeightsTexture:n,maxWeightTransform:a,zoom:null,triPositionBuffer:e.createBuffer({byteLength:48}),triTexCoordBuffer:e.createBuffer({byteLength:48})})}updateShaders(e){this._createWeightsTransform(Object.assign({vs:x,fs:P},e))}_updateMaxWeightValue(){const{maxWeightTransform:e}=this.state;e.run({parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]})}_updateBounds(e){void 0===e&&(e=!1);const{viewport:t}=this.context,i=[t.unproject([0,0]),t.unproject([t.width,0]),t.unproject([0,t.height]),t.unproject([t.width,t.height])].map((e=>e.map(Math.fround))),n=function(e){const t=e.map((e=>e[0])),i=e.map((e=>e[1])),n=Math.min.apply(null,t),o=Math.max.apply(null,t);return[n,Math.min.apply(null,i),o,Math.max.apply(null,i)]}(i),o={visibleWorldBounds:n,viewportCorners:i};let s=!1;if(e||!this.state.worldBounds||(r=this.state.worldBounds,!((l=n)[0]>=r[0]&&l[2]<=r[2]&&l[1]>=r[1]&&l[3]<=r[3]))){const e=this._worldToCommonBounds(n),t=this._commonToWorldBounds(e);this.props.coordinateSystem===a.rf.LNGLAT&&(t[1]=Math.max(t[1],-85.051129),t[3]=Math.min(t[3],85.051129),t[0]=Math.max(t[0],-360),t[2]=Math.min(t[2],360));const i=this._worldToCommonBounds(t);o.worldBounds=t,o.normalizedCommonBounds=i,s=!0}var r,l;return this.setState(o),s}_updateTextureRenderingBounds(){const{triPositionBuffer:e,triTexCoordBuffer:t,normalizedCommonBounds:i,viewportCorners:n}=this.state,{viewport:s}=this.context;e.write(o(n,3));const r=n.map((e=>function(e,t){const[i,n,o,s]=t;return[(e[0]-i)/(o-i),(e[1]-n)/(s-n)]}(s.projectPosition(e),i)));t.write(o(r,2))}_updateColorTexture(e){var t;const{colorRange:i}=e.props;let{colorTexture:n}=this.state;const o=(0,b.Y5)(i,!1,Uint8Array);null==(t=n)||t.destroy(),n=this.context.device.createTexture(Object.assign({},A,{data:o,width:i.length,height:1})),this.setState({colorTexture:n})}_updateWeightmap(){const{radiusPixels:e,colorDomain:t,aggregation:i}=this.props,{worldBounds:n,textureSize:o,weightsScale:s,weightsTexture:r}=this.state,a=this.state.weightsTransform;this.state.isWeightMapDirty=!1;const l=this._worldToCommonBounds(n,{useLayerCoordinateSystem:!0});if(t&&"SUM"===i){const{viewport:e}=this.context,i=e.distanceScales.metersPerUnit[2]*(l[2]-l[0])/o;this.state.colorDomain=t.map((e=>e*i*s))}else this.state.colorDomain=t||M;const c=this.getAttributeManager().getAttributes(),d=this.getModuleSettings();this._setModelAttributes(a.model,c),a.model.setVertexCount(this.getNumInstances());const h={radiusPixels:e,commonBounds:l,textureWidth:o,weightsScale:s,weightsTexture:r},{viewport:u,devicePixelRatio:p,coordinateSystem:g,coordinateOrigin:f}=d,{modelMatrix:m}=this.props;a.model.shaderInputs.setProps({project:{viewport:u,devicePixelRatio:p,modelMatrix:m,coordinateSystem:g,coordinateOrigin:f},weight:h}),a.run({parameters:{viewport:[0,0,o,o]},clearColor:[0,0,0,0]}),this._updateMaxWeightValue()}_debouncedUpdateWeightmap(e){void 0===e&&(e=!1);let{updateTimer:t}=this.state;const{debounceTimeout:i}=this.props;e?(t=null,this._updateBounds(!0),this._updateTextureRenderingBounds(),this.setState({isWeightMapDirty:!0})):(this.setState({isWeightMapDirty:!1}),clearTimeout(t),t=setTimeout(this._debouncedUpdateWeightmap.bind(this,!0),i)),this.setState({updateTimer:t})}_worldToCommonBounds(e,t){void 0===t&&(t={});const{useLayerCoordinateSystem:i=!1}=t,[n,o,s,r]=e,{viewport:l}=this.context,{textureSize:c}=this.state,{coordinateSystem:d}=this.props,h=i&&(d===a.rf.LNGLAT_OFFSETS||d===a.rf.METER_OFFSETS),u=h?l.projectPosition(this.props.coordinateOrigin):[0,0],p=2*c/l.scale;let g,f;return i&&!h?(g=this.projectPosition([n,o,0]),f=this.projectPosition([s,r,0])):(g=l.projectPosition([n,o,0]),f=l.projectPosition([s,r,0])),function(e,t,i){const[n,o,s,r]=e,a=s-n,l=r-o;let c=a,d=l;a/l<t/i?c=t/i*l:d=i/t*a,c<t&&(c=t,d=i);const h=(s+n)/2,u=(r+o)/2;return[h-c/2,u-d/2,h+c/2,u+d/2]}([g[0]-u[0],g[1]-u[1],f[0]-u[0],f[1]-u[1]],p,p)}_commonToWorldBounds(e){const[t,i,n,o]=e,{viewport:s}=this.context,r=s.unprojectPosition([t,i]),a=s.unprojectPosition([n,o]);return r.slice(0,2).concat(a.slice(0,2))}}L.layerName="HeatmapLayer",L.defaultProps=j;const I=L},77075:(e,t,i)=>{i.d(t,{A:()=>j});var n=i(18120),o=i(30428),s=i(33698),r=i(43976),a=i(57149),l=i(52601),c=i(29586),d=i(58213),h=i(39792),u=i(7017),p=i(34651);const g=Math.PI/3,f=2*Math.sin(g),m=1.5,v=Array.from({length:6},((e,t)=>{const i=t*g;return[Math.sin(i),-Math.cos(i)]}));function y(e,t){let[i,n]=e,o=Math.round(n=n/t/m),s=Math.round(i=i/t/f-(1&o)/2);const r=n-o;if(3*Math.abs(r)>1){const e=i-s,t=s+(i<s?-1:1)/2,a=o+(n<o?-1:1),l=i-t,c=n-a;e*e+r*r>l*l+c*c&&(s=t+(1&o?1:-1)/2,o=a)}return[s,o]}const _="\nconst vec2 DIST = vec2("+f+", "+m+");\n\nivec2 pointToHexbin(vec2 p, float radius) {\n  p /= radius * DIST;\n  float pj = round(p.y);\n  float pjm2 = mod(pj, 2.0);\n  p.x -= pjm2 * 0.5;\n  float pi = round(p.x);\n  vec2 d1 = p - vec2(pi, pj);\n\n  if (abs(d1.y) * 3. > 1.) {\n    vec2 v2 = step(0.0, d1) - 0.5;\n    v2.y *= 2.0;\n    vec2 d2 = d1 - v2;\n    if (dot(d1, d1) > dot(d2, d2)) {\n      pi += v2.x + pjm2 - 0.5;\n      pj += v2.y;\n    }\n  }\n  return ivec2(pi, pj);\n}\n";function w(e,t){let[i,n]=e;return[(i+(1&n)/2)*t*f,n*t*m]}const b="#version 300 es\n#define SHADER_NAME hexagon-cell-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec2 instancePositions;\nin float instanceElevationValues;\nin float instanceColorValues;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\n"+("\nconst vec2 DIST = vec2("+f+", "+m+");\n\nvec2 hexbinCentroid(vec2 binId, float radius) {\n  binId.x += fract(binId.y * 0.5);\n  return binId * DIST * radius;\n}\n")+"\nfloat interp(float value, vec2 domain, vec2 range) {\nfloat r = min(max((value - domain.x) / (domain.y - domain.x), 0.), 1.);\nreturn mix(range.x, range.y, r);\n}\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\ngeometry.pickingColor = instancePickingColors;\nif (isnan(instanceColorValues) ||\ninstanceColorValues < hexagon.colorDomain.z ||\ninstanceColorValues > hexagon.colorDomain.w ||\ninstanceElevationValues < hexagon.elevationDomain.z ||\ninstanceElevationValues > hexagon.elevationDomain.w\n) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 commonPosition = hexbinCentroid(instancePositions, column.radius) + (hexagon.originCommon - project.commonOrigin.xy);\ncommonPosition += positions.xy * column.radius * column.coverage;\ngeometry.position = vec4(commonPosition, 0.0, 1.0);\ngeometry.normal = project_normal(normals);\nfloat elevation = 0.0;\nif (column.extruded) {\nelevation = interp(instanceElevationValues, hexagon.elevationDomain.xy, hexagon.elevationRange);\nelevation = project_size(elevation);\ngeometry.position.z = (positions.z + 1.0) / 2.0 * elevation;\n}\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nvColor = interp(instanceColorValues, hexagon.colorDomain.xy, colorRange);\nvColor.a *= layer.opacity;\nif (column.extruded) {\nvColor.rgb = lighting_getLightColor(vColor.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",x={name:"hexagon",vs:"uniform hexagonUniforms {\n  vec4 colorDomain;\n  vec4 elevationDomain;\n  vec2 elevationRange;\n  vec2 originCommon;\n} hexagon;\n",uniformTypes:{colorDomain:"vec4<f32>",elevationDomain:"vec4<f32>",elevationRange:"vec2<f32>",originCommon:"vec2<f32>"}};class P extends p.A{getShaders(){const e=super.getShaders();return e.modules.push(x),Object.assign({},e,{vs:b})}initializeState(){super.initializeState();const e=this.getAttributeManager();e.remove(["instanceElevations","instanceFillColors","instanceLineColors","instanceStrokeWidths"]),e.addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceColorValues:{size:1,type:"float32",accessor:"getColorValue"},instanceElevationValues:{size:1,type:"float32",accessor:"getElevationValue"}})}updateState(e){super.updateState(e);const{props:t,oldProps:i}=e,n=this.state.fillModel;if(i.colorRange!==t.colorRange){var o;null==(o=this.state.colorTexture)||o.destroy(),this.state.colorTexture=(0,d.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};n.shaderInputs.setProps({hexagon:e})}else i.colorScaleType!==t.colorScaleType&&(0,d.Pu)(this.state.colorTexture,t.colorScaleType)}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const{radius:i,hexOriginCommon:n,elevationRange:o,elevationScale:s,extruded:r,coverage:a,colorDomain:l,elevationDomain:c}=this.props,d=this.props.colorCutoff||[-1/0,1/0],h=this.props.elevationCutoff||[-1/0,1/0],u=this.state.fillModel;u.vertexArray.indexBuffer&&u.setIndexBuffer(null),u.setVertexCount(this.state.fillVertexCount);const p={colorDomain:[Math.max(l[0],d[0]),Math.min(l[1],d[1]),Math.max(l[0]-1,d[0]),Math.min(l[1]+1,d[1])],elevationDomain:[Math.max(c[0],h[0]),Math.min(c[1],h[1]),Math.max(c[0]-1,h[0]),Math.min(c[1]+1,h[1])],elevationRange:[o[0]*s,o[1]*s],originCommon:n};u.shaderInputs.setProps({column:{extruded:r,coverage:a,radius:i},hexagon:p}),u.draw(this.context.renderPass)}}P.layerName="HexagonCellLayer";const S=P,C={name:"binOptions",vs:"uniform binOptionsUniforms {\n  vec2 hexOriginCommon;\n  float radiusCommon;\n} binOptions;\n",uniformTypes:{hexOriginCommon:"vec2<f32>",radiusCommon:"f32"}};function A(){}const M={gpuAggregation:!0,colorDomain:null,colorRange:d.QO,getColorValue:{type:"accessor",value:null},getColorWeight:{type:"accessor",value:1},colorAggregation:"SUM",lowerPercentile:{type:"number",min:0,max:100,value:0},upperPercentile:{type:"number",min:0,max:100,value:100},colorScaleType:"quantize",onSetColorDomain:A,elevationDomain:null,elevationRange:[0,1e3],getElevationValue:{type:"accessor",value:null},getElevationWeight:{type:"accessor",value:1},elevationAggregation:"SUM",elevationScale:{type:"number",min:0,value:1},elevationLowerPercentile:{type:"number",min:0,max:100,value:0},elevationUpperPercentile:{type:"number",min:0,max:100,value:100},elevationScaleType:"linear",onSetElevationDomain:A,radius:{type:"number",min:1,value:1e3},coverage:{type:"number",min:0,max:1,value:1},getPosition:{type:"accessor",value:e=>e.position},hexagonAggregator:{type:"function",optional:!0,value:null},extruded:!1,material:!0};class T extends c.A{getAggregatorType(){const{gpuAggregation:e,hexagonAggregator:t,getColorValue:i,getElevationValue:o}=this.props;return e&&(t||i||o)?(n.A.warn("Features not supported by GPU aggregation, falling back to CPU")(),"cpu"):e&&a.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){if("cpu"===e){const{hexagonAggregator:e,radius:t}=this.props;return new l.M({dimensions:2,getBin:{sources:["positions"],getValue:(i,n,o)=>{let{positions:s}=i;if(e)return e(s,t);const r=this.state.aggregatorViewport.projectPosition(s),{radiusCommon:a,hexOriginCommon:l}=o;return y([r[0]-l[0],r[1]-l[1]],a)}},getValue:[{sources:["colorWeights"],getValue:e=>{let{colorWeights:t}=e;return t}},{sources:["elevationWeights"],getValue:e=>{let{elevationWeights:t}=e;return t}}]})}return new a.V(this.context.device,Object.assign({dimensions:2,channelCount:2,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[o.A,C],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float colorWeights;\n  in float elevationWeights;\n  \n  "+_+"\n\n  void getBin(out ivec2 binId) {\n    vec3 positionCommon = project_position(positions, positions64Low);\n    binId = pointToHexbin(positionCommon.xy, binOptions.radiusCommon);\n  }\n  void getValue(out vec2 value) {\n    value = vec2(colorWeights, elevationWeights);\n  }\n  "})))}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},colorWeights:{size:1,accessor:"getColorWeight"},elevationWeights:{size:1,accessor:"getElevationWeight"}})}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:o}=e,{aggregator:r}=this.state;if(!o.dataChanged&&this.state.dataAsArray||!i.getColorValue&&!i.getElevationValue||(this.state.dataAsArray=Array.from((0,s.X)(i.data).iterable)),t||o.dataChanged||i.radius!==n.radius||i.getColorValue!==n.getColorValue||i.getElevationValue!==n.getElevationValue||i.colorAggregation!==n.colorAggregation||i.elevationAggregation!==n.elevationAggregation){this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:t,binIdRange:n,dataAsArray:o}=this.state;if(r.setProps({binIdRange:n,pointCount:this.getNumInstances(),operations:[i.colorAggregation,i.elevationAggregation],binOptions:{radiusCommon:e,hexOriginCommon:t},onUpdate:this._onAggregationUpdate.bind(this)}),o){const{getColorValue:e,getElevationValue:t}=this.props;r.setProps({customOperations:[e&&(t=>e(t.map((e=>o[e])),{indices:t,data:i.data})),t&&(e=>t(e.map((e=>o[e])),{indices:e,data:i.data}))]})}}return o.updateTriggersChanged&&o.updateTriggersChanged.getColorValue&&r.setNeedsUpdate(0),o.updateTriggersChanged&&o.updateTriggersChanged.getElevationValue&&r.setNeedsUpdate(1),t}_updateBinOptions(){const e=this.getBounds();let t=1,i=[0,0],n=[[0,1],[0,1]],o=this.context.viewport;if(e&&Number.isFinite(e[0][0])){let s=[(e[0][0]+e[1][0])/2,(e[0][1]+e[1][1])/2];const{radius:a}=this.props,{unitsPerMeter:l}=o.getDistanceScales(s);t=l[0]*a;const c=y(o.projectFlat(s),t);s=o.unprojectFlat(w(c,t));const d=o.constructor;o=o.isGeospatial?new d({longitude:s[0],latitude:s[1],zoom:12}):new r.A({position:[s[0],s[1],0],zoom:12}),i=[Math.fround(o.center[0]),Math.fround(o.center[1])],n=(0,u.O)({dataBounds:e,getBinId:e=>{const n=o.projectFlat(e);return n[0]-=i[0],n[1]-=i[1],y(n,t)},padding:1})}this.setState({radiusCommon:t,hexOriginCommon:i,binIdRange:n,aggregatorViewport:o})}draw(e){e.shaderModuleProps.project&&(e.shaderModuleProps.project.viewport=this.state.aggregatorViewport),super.draw(e)}_onAggregationUpdate(e){let{channel:t}=e;const i=this.getCurrentLayer().props,{aggregator:n}=this.state;if(0===t){const e=n.getResult(0);this.setState({colors:new h.bg(e,n.binCount)}),i.onSetColorDomain(n.getResultDomain(0))}else if(1===t){const e=n.getResult(1);this.setState({elevations:new h.bg(e,n.binCount)}),i.onSetElevationDomain(n.getResultDomain(1))}}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate(),this._updateBinOptions();const{radiusCommon:e,hexOriginCommon:i,binIdRange:n}=this.state;t.setProps({binIdRange:n,binOptions:{radiusCommon:e,hexOriginCommon:i}});break;case"colorWeights":t.setNeedsUpdate(0);break;case"elevationWeights":t.setNeedsUpdate(1)}}renderLayers(){var e,t;const{aggregator:i,radiusCommon:n,hexOriginCommon:o}=this.state,{elevationScale:s,colorRange:r,elevationRange:a,extruded:l,coverage:c,material:d,transitions:h,colorScaleType:u,lowerPercentile:p,upperPercentile:g,colorDomain:f,elevationScaleType:m,elevationLowerPercentile:y,elevationUpperPercentile:_,elevationDomain:w}=this.props,b=this.getSubLayerClass("cells",S),x=i.getBins(),P=null==(e=this.state.colors)?void 0:e.update({scaleType:u,lowerPercentile:p,upperPercentile:g}),C=null==(t=this.state.elevations)?void 0:t.update({scaleType:m,lowerPercentile:y,upperPercentile:_});return P&&C?new b(this.getSubLayerProps({id:"cells"}),{data:{length:i.binCount,attributes:{getBin:x,getColorValue:P.attribute,getElevationValue:C.attribute}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[x],getColorValue:[P.attribute],getElevationValue:[C.attribute]},diskResolution:6,vertices:v,radius:n,hexOriginCommon:o,elevationScale:s,colorRange:r,colorScaleType:u,elevationRange:a,extruded:l,coverage:c,material:d,colorDomain:P.domain||f||i.getResultDomain(0),elevationDomain:C.domain||w||i.getResultDomain(1),colorCutoff:P.cutoff,elevationCutoff:C.cutoff,transitions:h&&{getFillColor:h.getColorValue||h.getColorWeight,getElevation:h.getElevationValue||h.getElevationWeight},extensions:[]}):null}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;if(e){const t=w(e.id,this.state.radiusCommon),i=this.context.viewport.unprojectFlat(t);n={col:e.id[0],row:e.id[1],position:i,colorValue:e.value[0],elevationValue:e.value[1],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])}t.object=n}return t}}T.layerName="HexagonLayer",T.defaultProps=M;const j=T},44274:(e,t,i)=>{i.d(t,{A:()=>y});var n=i(30428),o=i(57149),s=i(52601),r=i(29586),a=i(8274),l=i(25337),c=i(3002),d=i(28756),h=i(58213);const u={name:"screenGrid",vs:"uniform screenGridUniforms {\n  vec2 cellSizeClipspace;\n  vec2 gridSizeClipspace;\n  vec2 colorDomain;\n} screenGrid;\n",uniformTypes:{cellSizeClipspace:"vec2<f32>",gridSizeClipspace:"vec2<f32>",colorDomain:"vec2<f32>"}};class p extends c.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-vertex-shader\n#define RANGE_COUNT 6\nin vec2 positions;\nin vec2 instancePositions;\nin float instanceWeights;\nin vec3 instancePickingColors;\nuniform sampler2D colorRange;\nout vec4 vColor;\nvec4 interp(float value, vec2 domain, sampler2D range) {\nfloat r = (value - domain.x) / (domain.y - domain.x);\nreturn texture(range, vec2(r, 0.5));\n}\nvoid main(void) {\nif (isnan(instanceWeights)) {\ngl_Position = vec4(0.);\nreturn;\n}\nvec2 pos = instancePositions * screenGrid.gridSizeClipspace + positions * screenGrid.cellSizeClipspace;\npos.x = pos.x - 1.0;\npos.y = 1.0 - pos.y;\ngl_Position = vec4(pos, 0., 1.);\nvColor = interp(instanceWeights, screenGrid.colorDomain, colorRange);\nvColor.a *= layer.opacity;\npicking_setPickingColor(instancePickingColors);\n}\n",fs:"#version 300 es\n#define SHADER_NAME screen-grid-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[d.A,u]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:2,type:"float32",accessor:"getBin"},instanceWeights:{size:1,type:"float32",accessor:"getWeight"}}),this.state.model=this._getModel()}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e,o=this.state.model;if(i.colorRange!==t.colorRange){var s;null==(s=this.state.colorTexture)||s.destroy(),this.state.colorTexture=(0,h.cp)(this.context.device,t.colorRange,t.colorScaleType);const e={colorRange:this.state.colorTexture};o.shaderInputs.setProps({screenGrid:e})}else i.colorScaleType!==t.colorScaleType&&(0,h.Pu)(this.state.colorTexture,t.colorScaleType);if(i.cellMarginPixels!==t.cellMarginPixels||i.cellSizePixels!==t.cellSizePixels||n.viewportChanged){const{width:e,height:t}=this.context.viewport,{cellSizePixels:i,cellMarginPixels:n}=this.props,s=Math.max(i-n,0),r={gridSizeClipspace:[i/e*2,i/t*2],cellSizeClipspace:[s/e*2,s/t*2]};o.shaderInputs.setProps({screenGrid:r})}}finalizeState(e){var t;super.finalizeState(e),null==(t=this.state.colorTexture)||t.destroy()}draw(e){let{uniforms:t}=e;const i=this.props.colorDomain(),n=this.state.model,o={colorDomain:i};n.shaderInputs.setProps({screenGrid:o}),n.draw(this.context.renderPass)}_getModel(){return new a.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new l.V({topology:"triangle-strip",attributes:{positions:{value:new Float32Array([0,0,1,0,0,1,1,1]),size:2}}}),isInstanced:!0}))}}p.layerName="ScreenGridCellLayer";const g=p,f={name:"binOptions",vs:"uniform binOptionsUniforms {\n  float cellSizePixels;\n} binOptions;\n",uniformTypes:{cellSizePixels:"f32"}},m={cellSizePixels:{type:"number",value:100,min:1},cellMarginPixels:{type:"number",value:2,min:0},colorRange:h.QO,colorScaleType:"linear",getPosition:{type:"accessor",value:e=>e.position},getWeight:{type:"accessor",value:1},gpuAggregation:!0,aggregation:"SUM"};class v extends r.A{getAggregatorType(){return this.props.gpuAggregation&&o.V.isSupported(this.context.device)?"gpu":"cpu"}createAggregator(e){return"cpu"!==e&&o.V.isSupported(this.context.device)?new o.V(this.context.device,Object.assign({dimensions:2,channelCount:1,bufferLayout:this.getAttributeManager().getBufferLayouts({isInstanced:!1})},super.getShaders({modules:[n.A,f],vs:"\n  in vec3 positions;\n  in vec3 positions64Low;\n  in float counts;\n  \n  void getBin(out ivec2 binId) {\n    vec4 pos = project_position_to_clipspace(positions, positions64Low, vec3(0.0));\n    vec2 screenCoords = vec2(pos.x / pos.w + 1.0, 1.0 - pos.y / pos.w) / 2.0 * project.viewportSize / project.devicePixelRatio;\n    vec2 gridCoords = floor(screenCoords / binOptions.cellSizePixels);\n    binId = ivec2(gridCoords);\n  }\n  void getValue(out float weight) {\n    weight = counts;\n  }\n  "}))):new s.M({dimensions:2,getBin:{sources:["positions"],getValue:(e,t,i)=>{let{positions:n}=e;const o=this.context.viewport,s=o.project(n),r=i.cellSizePixels;return s[0]<0||s[0]>=o.width||s[1]<0||s[1]>=o.height?null:[Math.floor(s[0]/r),Math.floor(s[1]/r)]}},getValue:[{sources:["counts"],getValue:e=>{let{counts:t}=e;return t}}]})}initializeState(){super.initializeState();this.getAttributeManager().add({positions:{size:3,accessor:"getPosition",type:"float64",fp64:this.use64bitPositions()},counts:{size:1,accessor:"getWeight"}})}shouldUpdateState(e){let{changeFlags:t}=e;return t.somethingChanged}updateState(e){const t=super.updateState(e),{props:i,oldProps:n,changeFlags:s}=e,{cellSizePixels:r,aggregation:a}=i;if(t||s.dataChanged||s.updateTriggersChanged||s.viewportChanged||a!==n.aggregation||r!==n.cellSizePixels){const{width:e,height:t}=this.context.viewport,{aggregator:i}=this.state;i instanceof o.V&&i.setProps({binIdRange:[[0,Math.ceil(e/r)],[0,Math.ceil(t/r)]]}),i.setProps({pointCount:this.getNumInstances(),operations:[a],binOptions:{cellSizePixels:r}})}return s.viewportChanged&&this.state.aggregator.setNeedsUpdate(),t}onAttributeChange(e){const{aggregator:t}=this.state;switch(e){case"positions":t.setNeedsUpdate();break;case"counts":t.setNeedsUpdate(0)}}renderLayers(){const{aggregator:e}=this.state,t=this.getSubLayerClass("cells",g),i=e.getBins(),n=e.getResult(0);return new t(this.props,this.getSubLayerProps({id:"cell-layer"}),{data:{length:e.binCount,attributes:{getBin:i,getWeight:n}},dataComparator:(e,t)=>e.length===t.length,updateTriggers:{getBin:[i],getWeight:[n]},parameters:Object.assign({depthWriteEnabled:!1},this.props.parameters),colorDomain:()=>this.props.colorDomain||e.getResultDomain(0),extensions:[]})}getPickingInfo(e){const t=e.info,{index:i}=t;if(i>=0){const e=this.state.aggregator.getBin(i);let n;e&&(n={col:e.id[0],row:e.id[1],value:e.value[0],count:e.count},e.pointIndices&&(n.pointIndices=e.pointIndices,n.points=Array.isArray(this.props.data)?e.pointIndices.map((e=>this.props.data[e])):[])),t.object=n}return t}}v.layerName="ScreenGridLayer",v.defaultProps=m;const y=v},27962:(e,t,i)=>{i.d(t,{A:()=>w});var n=i(50948);const o=()=>{},s=2,r=3,a=e=>e,l=1;class c{constructor(e){this._onTransitionUpdate=e=>{const{time:t,settings:{interpolator:i,startProps:n,endProps:o,duration:s,easing:r}}=e,a=r(t/s),l=i.interpolateProps(n,o,a);this.propsInTransition=this.getControllerState(Object.assign({},this.props,l)).getViewportProps(),this.onViewStateChange({viewState:this.propsInTransition,oldViewState:this.props})},this.getControllerState=e.getControllerState,this.propsInTransition=null,this.transition=new n.A(e.timeline),this.onViewStateChange=e.onViewStateChange||o,this.onStateChange=e.onStateChange||o}finalize(){this.transition.cancel()}getViewportInTransition(){return this.propsInTransition}processViewStateChange(e){let t=!1;const i=this.props;if(this.props=e,!i||this._shouldIgnoreViewportChange(i,e))return!1;if(this._isTransitionEnabled(e)){let n=i;if(this.transition.inProgress){const{interruption:e,endProps:t}=this.transition.settings;n=Object.assign({},i,e===s?t:this.propsInTransition||i)}this._triggerTransition(n,e),t=!0}else this.transition.cancel();return t}updateTransition(){this.transition.update()}_isTransitionEnabled(e){const{transitionDuration:t,transitionInterpolator:i}=e;return(t>0||"auto"===t)&&Boolean(i)}_isUpdateDueToCurrentTransition(e){return!(!this.transition.inProgress||!this.propsInTransition)&&this.transition.settings.interpolator.arePropsEqual(e,this.propsInTransition)}_shouldIgnoreViewportChange(e,t){if(this.transition.inProgress){return this.transition.settings.interruption===r||this._isUpdateDueToCurrentTransition(t)}return!this._isTransitionEnabled(t)||t.transitionInterpolator.arePropsEqual(e,t)}_triggerTransition(e,t){const i=this.getControllerState(e),n=this.getControllerState(t).shortestPathFrom(i),o=t.transitionInterpolator,s=o.getDuration?o.getDuration(e,t):t.transitionDuration;if(0===s)return;const r=o.initializeProps(e,n);this.propsInTransition={};const c={duration:s,easing:t.transitionEasing||a,interpolator:o,interruption:t.transitionInterruption||l,startProps:r.start,endProps:r.end,onStart:t.onTransitionStart,onUpdate:this._onTransitionUpdate,onInterrupt:this._onTransitionEnd(t.onTransitionInterrupt),onEnd:this._onTransitionEnd(t.onTransitionEnd)};this.transition.start(c),this.onStateChange({inTransition:!0}),this.updateTransition()}_onTransitionEnd(e){return t=>{this.propsInTransition=null,this.onStateChange({inTransition:!1,isZooming:!1,isPanning:!1,isRotating:!1}),null==e||e(t)}}}var d=i(58662);const h={transitionDuration:0},u=e=>1-(1-e)*(1-e),p=["wheel"],g=["panstart","panmove","panend"],f=["pinchstart","pinchmove","pinchend"],m=["multipanstart","multipanmove","multipanend"],v=["dblclick"],y=["keydown"],_={};class w{constructor(e){this.state={},this._events={},this._interactionState={isDragging:!1},this._customEvents=[],this._eventStartBlocked=null,this._panMove=!1,this.invertPan=!1,this.dragMode="rotate",this.inertia=0,this.scrollZoom=!0,this.dragPan=!0,this.dragRotate=!0,this.doubleClickZoom=!0,this.touchZoom=!0,this.touchRotate=!1,this.keyboard=!0,this.transitionManager=new c(Object.assign({},e,{getControllerState:e=>new this.ControllerState(e),onViewStateChange:this._onTransition.bind(this),onStateChange:this._setInteractionState.bind(this)})),this.handleEvent=this.handleEvent.bind(this),this.eventManager=e.eventManager,this.onViewStateChange=e.onViewStateChange||(()=>{}),this.onStateChange=e.onStateChange||(()=>{}),this.makeViewport=e.makeViewport}set events(e){this.toggleEvents(this._customEvents,!1),this.toggleEvents(e,!0),this._customEvents=e,this.props&&this.setProps(this.props)}finalize(){for(const t in this._events){var e;if(this._events[t])null==(e=this.eventManager)||e.off(t,this.handleEvent)}this.transitionManager.finalize()}handleEvent(e){this._controllerState=void 0;const t=this._eventStartBlocked;switch(e.type){case"panstart":return!t&&this._onPanStart(e);case"panmove":return this._onPan(e);case"panend":return this._onPanEnd(e);case"pinchstart":return!t&&this._onPinchStart(e);case"pinchmove":return this._onPinch(e);case"pinchend":return this._onPinchEnd(e);case"multipanstart":return!t&&this._onMultiPanStart(e);case"multipanmove":return this._onMultiPan(e);case"multipanend":return this._onMultiPanEnd(e);case"dblclick":return this._onDoubleClick(e);case"wheel":return this._onWheel(e);case"keydown":return this._onKeyDown(e);default:return!1}}get controllerState(){return this._controllerState=this._controllerState||new this.ControllerState(Object.assign({makeViewport:this.makeViewport},this.props,this.state)),this._controllerState}getCenter(e){const{x:t,y:i}=this.props,{offsetCenter:n}=e;return[n.x-t,n.y-i]}isPointInBounds(e,t){const{width:i,height:n}=this.props;if(t&&t.handled)return!1;const o=e[0]>=0&&e[0]<=i&&e[1]>=0&&e[1]<=n;return o&&t&&t.stopPropagation(),o}isFunctionKeyPressed(e){const{srcEvent:t}=e;return Boolean(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}isDragging(){return this._interactionState.isDragging||!1}blockEvents(e){const t=setTimeout((()=>{this._eventStartBlocked===t&&(this._eventStartBlocked=null)}),e);this._eventStartBlocked=t}setProps(e){e.dragMode&&(this.dragMode=e.dragMode),this.props=e,"transitionInterpolator"in e||(e.transitionInterpolator=this._getTransitionProps().transitionInterpolator),this.transitionManager.processViewStateChange(e);const{inertia:t}=e;this.inertia=Number.isFinite(t)?t:!0===t?300:0;const{scrollZoom:i=!0,dragPan:n=!0,dragRotate:o=!0,doubleClickZoom:s=!0,touchZoom:r=!0,touchRotate:a=!1,keyboard:l=!0}=e,c=Boolean(this.onViewStateChange);this.toggleEvents(p,c&&i),this.toggleEvents(g,c),this.toggleEvents(f,c&&(r||a)),this.toggleEvents(m,c&&a),this.toggleEvents(v,c&&s),this.toggleEvents(y,c&&l),this.scrollZoom=i,this.dragPan=n,this.dragRotate=o,this.doubleClickZoom=s,this.touchZoom=r,this.touchRotate=a,this.keyboard=l}updateTransition(){this.transitionManager.updateTransition()}toggleEvents(e,t){this.eventManager&&e.forEach((e=>{this._events[e]!==t&&(this._events[e]=t,t?this.eventManager.on(e,this.handleEvent):this.eventManager.off(e,this.handleEvent))}))}updateViewport(e,t,i){void 0===t&&(t=null),void 0===i&&(i={});const n=Object.assign({},e.getViewportProps(),t),o=this.controllerState!==e;if(this.state=e.getState(),this._setInteractionState(i),o){const e=this.controllerState&&this.controllerState.getViewportProps();this.onViewStateChange&&this.onViewStateChange({viewState:n,interactionState:this._interactionState,oldViewState:e,viewId:this.props.id})}}_onTransition(e){this.onViewStateChange(Object.assign({},e,{interactionState:this._interactionState,viewId:this.props.id}))}_setInteractionState(e){Object.assign(this._interactionState,e),this.onStateChange(this._interactionState)}_onPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;let i=this.isFunctionKeyPressed(e)||e.rightButton||!1;(this.invertPan||"pan"===this.dragMode)&&(i=!i);const n=this.controllerState[i?"panStart":"rotateStart"]({pos:t});return this._panMove=i,this.updateViewport(n,h,{isDragging:!0}),!0}_onPan(e){return!!this.isDragging()&&(this._panMove?this._onPanMove(e):this._onPanRotate(e))}_onPanEnd(e){return!!this.isDragging()&&(this._panMove?this._onPanMoveEnd(e):this._onPanRotateEnd(e))}_onPanMove(e){if(!this.dragPan)return!1;const t=this.getCenter(e),i=this.controllerState.pan({pos:t});return this.updateViewport(i,h,{isDragging:!0,isPanning:!0}),!0}_onPanMoveEnd(e){const{inertia:t}=this;if(this.dragPan&&t&&e.velocity){const i=this.getCenter(e),n=[i[0]+e.velocityX*t/2,i[1]+e.velocityY*t/2],o=this.controllerState.pan({pos:n}).panEnd();this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isPanning:!0})}else{const e=this.controllerState.panEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1})}return!0}_onPanRotate(e){if(!this.dragRotate)return!1;const t=this.getCenter(e),i=this.controllerState.rotate({pos:t});return this.updateViewport(i,h,{isDragging:!0,isRotating:!0}),!0}_onPanRotateEnd(e){const{inertia:t}=this;if(this.dragRotate&&t&&e.velocity){const i=this.getCenter(e),n=[i[0]+e.velocityX*t/2,i[1]+e.velocityY*t/2],o=this.controllerState.rotate({pos:n}).rotateEnd();this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isRotating:!0})}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onWheel(e){if(!this.scrollZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;e.srcEvent.preventDefault();const{speed:i=.01,smooth:n=!1}=!0===this.scrollZoom?{}:this.scrollZoom,{delta:o}=e;let s=2/(1+Math.exp(-Math.abs(o*i)));o<0&&0!==s&&(s=1/s);const r=n?Object.assign({},this._getTransitionProps({around:t}),{transitionDuration:250}):h,a=this.controllerState.zoom({pos:t,scale:s});return this.updateViewport(a,r,{isZooming:!0,isPanning:!0}),!0}_onMultiPanStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.controllerState.rotateStart({pos:t});return this.updateViewport(i,h,{isDragging:!0}),!0}_onMultiPan(e){if(!this.touchRotate)return!1;if(!this.isDragging())return!1;const t=this.getCenter(e);t[0]-=e.deltaX;const i=this.controllerState.rotate({pos:t});return this.updateViewport(i,h,{isDragging:!0,isRotating:!0}),!0}_onMultiPanEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this;if(this.touchRotate&&t&&e.velocityY){const i=this.getCenter(e),n=[i[0],i[1]+=e.velocityY*t/2],o=this.controllerState.rotate({pos:n});this.updateViewport(o,Object.assign({},this._getTransitionProps(),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isRotating:!0}),this.blockEvents(t)}else{const e=this.controllerState.rotateEnd();this.updateViewport(e,null,{isDragging:!1,isRotating:!1})}return!0}_onPinchStart(e){const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.controllerState.zoomStart({pos:t}).rotateStart({pos:t});return _._startPinchRotation=e.rotation,_._lastPinchEvent=e,this.updateViewport(i,h,{isDragging:!0}),!0}_onPinch(e){if(!this.touchZoom&&!this.touchRotate)return!1;if(!this.isDragging())return!1;let t=this.controllerState;if(this.touchZoom){const{scale:i}=e,n=this.getCenter(e);t=t.zoom({pos:n,scale:i})}if(this.touchRotate){const{rotation:i}=e;t=t.rotate({deltaAngleX:_._startPinchRotation-i})}return this.updateViewport(t,h,{isDragging:!0,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:this.touchRotate}),_._lastPinchEvent=e,!0}_onPinchEnd(e){if(!this.isDragging())return!1;const{inertia:t}=this,{_lastPinchEvent:i}=_;if(this.touchZoom&&t&&i&&e.scale!==i.scale){const n=this.getCenter(e);let o=this.controllerState.rotateEnd();const s=Math.log2(e.scale),r=(s-Math.log2(i.scale))/(e.deltaTime-i.deltaTime),a=Math.pow(2,s+r*t/2);o=o.zoom({pos:n,scale:a}).zoomEnd(),this.updateViewport(o,Object.assign({},this._getTransitionProps({around:n}),{transitionDuration:t,transitionEasing:u}),{isDragging:!1,isPanning:this.touchZoom,isZooming:this.touchZoom,isRotating:!1}),this.blockEvents(t)}else{const e=this.controllerState.zoomEnd().rotateEnd();this.updateViewport(e,null,{isDragging:!1,isPanning:!1,isZooming:!1,isRotating:!1})}return _._startPinchRotation=null,_._lastPinchEvent=null,!0}_onDoubleClick(e){if(!this.doubleClickZoom)return!1;const t=this.getCenter(e);if(!this.isPointInBounds(t,e))return!1;const i=this.isFunctionKeyPressed(e),n=this.controllerState.zoom({pos:t,scale:i?.5:2});return this.updateViewport(n,this._getTransitionProps({around:t}),{isZooming:!0,isPanning:!0}),this.blockEvents(100),!0}_onKeyDown(e){if(!this.keyboard)return!1;const t=this.isFunctionKeyPressed(e),{zoomSpeed:i,moveSpeed:n,rotateSpeedX:o,rotateSpeedY:s}=!0===this.keyboard?{}:this.keyboard,{controllerState:r}=this;let a;const l={};switch(e.srcEvent.code){case"Minus":a=t?r.zoomOut(i).zoomOut(i):r.zoomOut(i),l.isZooming=!0;break;case"Equal":a=t?r.zoomIn(i).zoomIn(i):r.zoomIn(i),l.isZooming=!0;break;case"ArrowLeft":t?(a=r.rotateLeft(o),l.isRotating=!0):(a=r.moveLeft(n),l.isPanning=!0);break;case"ArrowRight":t?(a=r.rotateRight(o),l.isRotating=!0):(a=r.moveRight(n),l.isPanning=!0);break;case"ArrowUp":t?(a=r.rotateUp(s),l.isRotating=!0):(a=r.moveUp(n),l.isPanning=!0);break;case"ArrowDown":t?(a=r.rotateDown(s),l.isRotating=!0):(a=r.moveDown(n),l.isPanning=!0);break;default:return!1}return this.updateViewport(a,this._getTransitionProps(),l),!0}_getTransitionProps(e){const{transition:t}=this;return t&&t.transitionInterpolator?e?Object.assign({},t,{transitionInterpolator:new d.A(Object.assign({},e,t.transitionInterpolator.opts,{makeViewport:this.controllerState.makeViewport}))}):t:h}}},67797:(e,t,i)=>{i.d(t,{A:()=>d,y:()=>c});var n=i(54901),o=i(27962),s=i(43221),r=i(73279),a=i(95238),l=i(58662);class c extends s.A{constructor(e){const{width:t,height:i,latitude:n,longitude:o,zoom:s,bearing:r=0,pitch:l=0,altitude:c=1.5,position:d=[0,0,0],maxZoom:h=20,minZoom:u=0,maxPitch:p=60,minPitch:g=0,startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:_,startZoom:w,normalize:b=!0}=e;(0,a.A)(Number.isFinite(o)),(0,a.A)(Number.isFinite(n)),(0,a.A)(Number.isFinite(s)),super({width:t,height:i,latitude:n,longitude:o,zoom:s,bearing:r,pitch:l,altitude:c,maxZoom:h,minZoom:u,maxPitch:p,minPitch:g,normalize:b,position:d},{startPanLngLat:f,startZoomLngLat:m,startRotatePos:v,startBearing:y,startPitch:_,startZoom:w}),this.makeViewport=e.makeViewport}panStart(e){let{pos:t}=e;return this._getUpdatedState({startPanLngLat:this._unproject(t)})}pan(e){let{pos:t,startPos:i}=e;const n=this.getState().startPanLngLat||this._unproject(i);if(!n)return this;const o=this.makeViewport(this.getViewportProps()).panByPosition(n,t);return this._getUpdatedState(o)}panEnd(){return this._getUpdatedState({startPanLngLat:null})}rotateStart(e){let{pos:t}=e;return this._getUpdatedState({startRotatePos:t,startBearing:this.getViewportProps().bearing,startPitch:this.getViewportProps().pitch})}rotate(e){let{pos:t,deltaAngleX:i=0,deltaAngleY:n=0}=e;const{startRotatePos:o,startBearing:s,startPitch:r}=this.getState();if(!o||void 0===s||void 0===r)return this;let a;return a=t?this._getNewRotation(t,o,r,s):{bearing:s+i,pitch:r+n},this._getUpdatedState(a)}rotateEnd(){return this._getUpdatedState({startBearing:null,startPitch:null})}zoomStart(e){let{pos:t}=e;return this._getUpdatedState({startZoomLngLat:this._unproject(t),startZoom:this.getViewportProps().zoom})}zoom(e){let{pos:t,startPos:i,scale:o}=e,{startZoom:s,startZoomLngLat:r}=this.getState();if(r||(s=this.getViewportProps().zoom,r=this._unproject(i)||this._unproject(t)),!r)return this;const{maxZoom:a,minZoom:l}=this.getViewportProps();let c=s+Math.log2(o);c=(0,n.qE)(c,l,a);const d=this.makeViewport(Object.assign({},this.getViewportProps(),{zoom:c}));return this._getUpdatedState(Object.assign({zoom:c},d.panByPosition(r,t)))}zoomEnd(){return this._getUpdatedState({startZoomLngLat:null,startZoom:null})}zoomIn(e){return void 0===e&&(e=2),this._zoomFromCenter(e)}zoomOut(e){return void 0===e&&(e=2),this._zoomFromCenter(1/e)}moveLeft(e){return void 0===e&&(e=100),this._panFromCenter([e,0])}moveRight(e){return void 0===e&&(e=100),this._panFromCenter([-e,0])}moveUp(e){return void 0===e&&(e=100),this._panFromCenter([0,e])}moveDown(e){return void 0===e&&(e=100),this._panFromCenter([0,-e])}rotateLeft(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing-e})}rotateRight(e){return void 0===e&&(e=15),this._getUpdatedState({bearing:this.getViewportProps().bearing+e})}rotateUp(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch+e})}rotateDown(e){return void 0===e&&(e=10),this._getUpdatedState({pitch:this.getViewportProps().pitch-e})}shortestPathFrom(e){const t=e.getViewportProps(),i=Object.assign({},this.getViewportProps()),{bearing:n,longitude:o}=i;return Math.abs(n-t.bearing)>180&&(i.bearing=n<0?n+360:n-360),Math.abs(o-t.longitude)>180&&(i.longitude=o<0?o+360:o-360),i}applyConstraints(e){const{maxZoom:t,minZoom:i,zoom:o}=e;e.zoom=(0,n.qE)(o,i,t);const{maxPitch:s,minPitch:a,pitch:l}=e;e.pitch=(0,n.qE)(l,a,s);const{normalize:c=!0}=e;return c&&Object.assign(e,(0,r.CK)(e)),e}_zoomFromCenter(e){const{width:t,height:i}=this.getViewportProps();return this.zoom({pos:[t/2,i/2],scale:e})}_panFromCenter(e){const{width:t,height:i}=this.getViewportProps();return this.pan({startPos:[t/2,i/2],pos:[t/2+e[0],i/2+e[1]]})}_getUpdatedState(e){return new this.constructor(Object.assign({makeViewport:this.makeViewport},this.getViewportProps(),this.getState(),e))}_unproject(e){const t=this.makeViewport(this.getViewportProps());return e&&t.unproject(e)}_getNewRotation(e,t,i,o){const s=e[0]-t[0],r=e[1]-t[1],a=e[1],l=t[1],{width:c,height:d}=this.getViewportProps(),h=s/c;let u=0;r>0?Math.abs(d-l)>5&&(u=r/(l-d)*1.2):r<0&&l>5&&(u=1-a/l),u=(0,n.qE)(u,-1,1);const{minPitch:p,maxPitch:g}=this.getViewportProps();let f=i;return u>0?f=i+u*(g-i):u<0&&(f=i-u*(p-i)),{pitch:f,bearing:o+180*h}}}class d extends o.A{constructor(){super(...arguments),this.ControllerState=c,this.transition={transitionDuration:300,transitionInterpolator:new l.A({transitionProps:{compare:["longitude","latitude","zoom","bearing","pitch","position"],required:["longitude","latitude","zoom"]}})},this.dragMode="pan"}setProps(e){e.position=e.position||[0,0,0];const t=this.props;super.setProps(e);(!t||t.height!==e.height)&&this.updateViewport(new this.ControllerState(Object.assign({makeViewport:this.makeViewport},e,this.state)))}}},43221:(e,t,i)=>{i.d(t,{A:()=>n});class n{constructor(e,t){this._viewportProps=this.applyConstraints(e),this._state=t}getViewportProps(){return this._viewportProps}getState(){return this._state}}},95656:(e,t,i)=>{i.d(t,{A:()=>r,k:()=>s});var n=i(18120);let o={};function s(e){o=e}function r(e,t,i,s){n.A.level>0&&o[e]&&o[e].call(null,t,i,s)}},58035:(e,t,i)=>{i.d(t,{$:()=>r});const n=[255,255,255],o=1;let s=0;class r{constructor(e){void 0===e&&(e={}),this.type="ambient";const{color:t=n}=e,{intensity:i=o}=e;this.id=e.id||"ambient-"+s++,this.color=t,this.intensity=i}}},55207:(e,t,i)=>{i.d(t,{Z:()=>l});var n=i(87597);const o=[255,255,255],s=1,r=[0,0,-1];let a=0;class l{constructor(e){void 0===e&&(e={}),this.type="directional";const{color:t=o}=e,{intensity:i=s}=e,{direction:l=r}=e,{_shadow:c=!1}=e;this.id=e.id||"directional-"+a++,this.color=t,this.intensity=i,this.type="directional",this.direction=new n.P(l).normalize().toArray(),this.shadow=c}getProjectedLight(e){return this}}},55443:(e,t,i)=>{i.d(t,{A:()=>S});var n=i(58035),o=i(55207),s=i(31886),r=i(87597),a=i(44584);class l extends a.A{constructor(e,t){super(e,t);const i=e.createTexture({format:"rgba8unorm",width:1,height:1,sampler:{minFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"}}),n=e.createTexture({format:"depth16unorm",width:1,height:1});this.fbo=e.createFramebuffer({id:"shadowmap",width:1,height:1,colorAttachments:[i],depthStencilAttachment:n})}delete(){this.fbo&&(this.fbo.destroy(),this.fbo=null)}getShadowMap(){return this.fbo.colorAttachments[0].texture}render(e){const t=this.fbo,i=this.device.canvasContext.cssToDeviceRatio(),n=e.viewports[0],o=n.width*i,s=n.height*i;o===t.width&&s===t.height||t.resize({width:o,height:s}),super.render(Object.assign({},e,{clearColor:[1,1,1,1],target:t,pass:"shadow"}))}getLayerParameters(e,t,i){return Object.assign({},e.props.parameters,{blend:!1,depthWriteEnabled:!0,depthCompare:"less-equal"})}shouldDrawLayer(e){return!1!==e.props.shadowEnabled}getShaderModuleProps(e,t,i){return{shadow:{project:i.project,drawToShadowMap:!0}}}}var c=i(8961),d=i(40281),h=i(63190),u=i(73279);const p="\nuniform shadowUniforms {\n  bool drawShadowMap;\n  bool useShadowMap;\n  vec4 color;\n  highp int lightId;\n  float lightCount;\n  mat4 viewProjectionMatrix0;\n  mat4 viewProjectionMatrix1;\n  vec4 projectCenter0;\n  vec4 projectCenter1;\n} shadow;\n",g="\n"+p+"\n\nconst int max_lights = 2;\n\nout vec3 shadow_vPosition[max_lights];\n\nvec4 shadow_setVertexPosition(vec4 position_commonspace) {\n  mat4 viewProjectionMatrices[max_lights];\n  viewProjectionMatrices[0] = shadow.viewProjectionMatrix0;\n  viewProjectionMatrices[1] = shadow.viewProjectionMatrix1;\n  vec4 projectCenters[max_lights];\n  projectCenters[0] = shadow.projectCenter0;\n  projectCenters[1] = shadow.projectCenter1;\n\n  if (shadow.drawShadowMap) {\n    return project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[shadow.lightId], projectCenters[shadow.lightId]);\n  }\n  if (shadow.useShadowMap) {\n    for (int i = 0; i < max_lights; i++) {\n      if(i < int(shadow.lightCount)) {\n        vec4 shadowMap_position = project_common_position_to_clipspace(position_commonspace, viewProjectionMatrices[i], projectCenters[i]);\n        shadow_vPosition[i] = (shadowMap_position.xyz / shadowMap_position.w + 1.0) / 2.0;\n      }\n    }\n  }\n  return gl_Position;\n}\n\n",f="\n"+p+"\n\nconst int max_lights = 2;\nuniform sampler2D shadow_uShadowMap0;\nuniform sampler2D shadow_uShadowMap1;\n\nin vec3 shadow_vPosition[max_lights];\n\nconst vec4 bitPackShift = vec4(1.0, 255.0, 65025.0, 16581375.0);\nconst vec4 bitUnpackShift = 1.0 / bitPackShift;\nconst vec4 bitMask = vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0,  0.0);\n\nfloat shadow_getShadowWeight(vec3 position, sampler2D shadowMap) {\n  vec4 rgbaDepth = texture(shadowMap, position.xy);\n\n  float z = dot(rgbaDepth, bitUnpackShift);\n  return smoothstep(0.001, 0.01, position.z - z);\n}\n\nvec4 shadow_filterShadowColor(vec4 color) {\n  if (shadow.drawShadowMap) {\n    vec4 rgbaDepth = fract(gl_FragCoord.z * bitPackShift);\n    rgbaDepth -= rgbaDepth.gbaa * bitMask;\n    return rgbaDepth;\n  }\n  if (shadow.useShadowMap) {\n    float shadowAlpha = 0.0;\n    shadowAlpha += shadow_getShadowWeight(shadow_vPosition[0], shadow_uShadowMap0);\n    if(shadow.lightCount > 1.0) {\n      shadowAlpha += shadow_getShadowWeight(shadow_vPosition[1], shadow_uShadowMap1);\n    }\n    shadowAlpha *= shadow.color.a / shadow.lightCount;\n    float blendedAlpha = shadowAlpha + color.a * (1.0 - shadowAlpha);\n\n    return vec4(\n      mix(color.rgb, shadow.color.rgb, shadowAlpha / blendedAlpha),\n      blendedAlpha\n    );\n  }\n  return color;\n}\n\n",m=(0,h.A)((function(e){let{viewport:t,center:i}=e;return new s.k(t.viewProjectionMatrix).invert().transform(i)})),v=(0,h.A)((function(e){let{viewport:t,shadowMatrices:i}=e;const n=[],o=t.pixelUnprojectionMatrix,a=t.isGeospatial?void 0:1,l=[[0,0,a],[t.width,0,a],[0,t.height,a],[t.width,t.height,a],[0,0,-1],[t.width,0,-1],[0,t.height,-1],[t.width,t.height,-1]].map((e=>function(e,t){const[i,n,o]=e,s=(0,u.xJ)([i,n,o],t);if(Number.isFinite(o))return s;return[s[0],s[1],0]}(e,o)));for(const c of i){const e=c.clone().translate(new r.P(t.center).negate()),i=l.map((t=>e.transform(t))),o=(new s.k).ortho({left:Math.min(...i.map((e=>e[0]))),right:Math.max(...i.map((e=>e[0]))),bottom:Math.min(...i.map((e=>e[1]))),top:Math.max(...i.map((e=>e[1]))),near:Math.min(...i.map((e=>-e[2]))),far:Math.max(...i.map((e=>-e[2])))});n.push(o.multiplyRight(c))}return n})),y=[0,0,0,1],_=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0];const w={name:"shadow",dependencies:[d.A],vs:g,fs:f,inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    position = shadow_setVertexPosition(geometry.position);\n    ","fs:DECKGL_FILTER_COLOR":"\n    color = shadow_filterShadowColor(color);\n    "},getUniforms:function(e){const{shadowEnabled:t=!0,project:i}=e;if(!(t&&i&&e.shadowMatrices&&e.shadowMatrices.length))return{drawShadowMap:!1,useShadowMap:!1,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};const n=d.A.getUniforms(i),o=m({viewport:i.viewport,center:n.center}),s=[],a=v({shadowMatrices:e.shadowMatrices,viewport:i.viewport}).slice();for(let d=0;d<e.shadowMatrices.length;d++){const e=a[d],t=e.clone().translate(new r.P(i.viewport.center).negate());n.coordinateSystem===c.rf.LNGLAT&&n.projectionMode===c.Kx.WEB_MERCATOR?(a[d]=t,s[d]=o):(a[d]=e.clone().multiplyRight(_),s[d]=t.transform(o))}const l={drawShadowMap:Boolean(e.drawToShadowMap),useShadowMap:!!e.shadowMaps&&e.shadowMaps.length>0,color:e.shadowColor||y,lightId:e.shadowLightId||0,lightCount:e.shadowMatrices.length,shadow_uShadowMap0:e.dummyShadowMap,shadow_uShadowMap1:e.dummyShadowMap};for(let r=0;r<a.length;r++)l["viewProjectionMatrix"+r]=a[r],l["projectCenter"+r]=s[r];for(let r=0;r<2;r++)l["shadow_uShadowMap"+r]=e.shadowMaps&&e.shadowMaps[r]||e.dummyShadowMap;return l},uniformTypes:{drawShadowMap:"f32",useShadowMap:"f32",color:"vec4<f32>",lightId:"i32",lightCount:"f32",viewProjectionMatrix0:"mat4x4<f32>",viewProjectionMatrix1:"mat4x4<f32>",projectCenter0:"vec4<f32>",projectCenter1:"vec4<f32>"}},b={color:[255,255,255],intensity:1},x=[{color:[255,255,255],intensity:1,direction:[-1,3,-1]},{color:[255,255,255],intensity:.9,direction:[1,-8,-2.5]}],P=[0,0,0,200/255];class S{constructor(e){void 0===e&&(e={}),this.id="lighting-effect",this.shadowColor=P,this.shadow=!1,this.directionalLights=[],this.pointLights=[],this.shadowPasses=[],this.dummyShadowMap=null,this.setProps(e)}setup(e){this.context=e;const{device:t,deck:i}=e;this.shadow&&!this.dummyShadowMap&&(this._createShadowPasses(t),i._addDefaultShaderModule(w),this.dummyShadowMap=t.createTexture({width:1,height:1}))}setProps(e){this.ambientLight=void 0,this.directionalLights=[],this.pointLights=[];for(const t in e){const i=e[t];switch(i.type){case"ambient":this.ambientLight=i;break;case"directional":this.directionalLights.push(i);break;case"point":this.pointLights.push(i)}}this._applyDefaultLights(),this.shadow=this.directionalLights.some((e=>e.shadow)),this.context&&this.setup(this.context),this.props=e}preRender(e){let{layers:t,layerFilter:i,viewports:n,onViewportActive:o,views:s}=e;if(this.shadow){this.shadowMatrices=this._calculateMatrices();for(let e=0;e<this.shadowPasses.length;e++){this.shadowPasses[e].render({layers:t,layerFilter:i,viewports:n,onViewportActive:o,views:s,shaderModuleProps:{shadow:{shadowLightId:e,dummyShadowMap:this.dummyShadowMap,shadowMatrices:this.shadowMatrices}}})}}}getShaderModuleProps(e,t){const i=this.shadow?{project:t.project,shadowMaps:this.shadowPasses.map((e=>e.getShadowMap())),dummyShadowMap:this.dummyShadowMap,shadowColor:this.shadowColor,shadowMatrices:this.shadowMatrices}:{},n={enabled:!0,ambientLight:this.ambientLight,directionalLights:this.directionalLights.map((t=>t.getProjectedLight({layer:e}))),pointLights:this.pointLights.map((t=>t.getProjectedLight({layer:e})))},o=e.props.material;return{shadow:i,lighting:n,phongMaterial:o,gouraudMaterial:o}}cleanup(e){for(const t of this.shadowPasses)t.delete();this.shadowPasses.length=0,this.dummyShadowMap&&(this.dummyShadowMap.destroy(),this.dummyShadowMap=null,e.deck._removeDefaultShaderModule(w))}_calculateMatrices(){const e=[];for(const t of this.directionalLights){const i=(new s.k).lookAt({eye:new r.P(t.direction).negate()});e.push(i)}return e}_createShadowPasses(e){for(let t=0;t<this.directionalLights.length;t++){const i=new l(e);this.shadowPasses[t]=i}}_applyDefaultLights(){const{ambientLight:e,pointLights:t,directionalLights:i}=this;e||0!==t.length||0!==i.length||(this.ambientLight=new n.$(b),this.directionalLights.push(new o.Z(x[0]),new o.Z(x[1])))}}},1570:(e,t,i)=>{i.d(t,{A:()=>B});var n=i(26839),o=i(72246);const s=o.h1;function r(e,t,i){const n="webgpu"===i&&"uint8"===t.type?"unorm8":t.type;return{attribute:e,format:t.size>1?n+"x"+t.size:t.type,byteOffset:t.offset||0}}function a(e){return e.stride||e.size*e.bytesPerElement}var l=i(81052),c=i(87350),d=i(18120);function h(e,t){t.offset&&d.A.removed("shaderAttribute.offset","vertexOffset, elementOffset")();const i=a(e),n=(void 0!==t.vertexOffset?t.vertexOffset:e.vertexOffset||0)*i+(t.elementOffset||0)*e.bytesPerElement+(e.offset||0);return Object.assign({},t,{offset:n,stride:i})}class u{constructor(e,t,i){this._buffer=null,this.device=e,this.id=t.id||"",this.size=t.size||1;const n=t.logicalType||t.type,s="float64"===n;let r,{defaultValue:a}=t;a=Number.isFinite(a)?[a]:a||new Array(this.size).fill(0),r=s?"float32":!n&&t.isIndexed?"uint32":n||"float32";let l=function(e){switch(e){case"float64":return Float64Array;case"uint8":case"unorm8":return Uint8ClampedArray;default:return(0,o.Ak)(e)}}(n||r);this.doublePrecision=s,s&&!1===t.fp64&&(l=Float32Array),this.value=null,this.settings=Object.assign({},t,{defaultType:l,defaultValue:a,logicalType:n,type:r,normalized:r.includes("norm"),size:this.size,bytesPerElement:l.BYTES_PER_ELEMENT}),this.state=Object.assign({},i,{externalBuffer:null,bufferAccessor:this.settings,allocatedValue:null,numInstances:0,bounds:null,constant:!1})}get isConstant(){return this.state.constant}get buffer(){return this._buffer}get byteOffset(){const e=this.getAccessor();return e.vertexOffset?e.vertexOffset*a(e):0}get numInstances(){return this.state.numInstances}set numInstances(e){this.state.numInstances=e}delete(){this._buffer&&(this._buffer.delete(),this._buffer=null),l.A.release(this.state.allocatedValue)}getBuffer(){return this.state.constant?null:this.state.externalBuffer||this._buffer}getValue(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const i={};if(this.state.constant){const n=this.value;if(t){const o=h(this.getAccessor(),t),s=o.offset/n.BYTES_PER_ELEMENT,r=o.size||this.size;i[e]=n.subarray(s,s+r)}else i[e]=n}else i[e]=this.getBuffer();return this.doublePrecision&&(this.value instanceof Float64Array?i[e+"64Low"]=i[e]:i[e+"64Low"]=new Float32Array(this.size)),i}_getBufferLayout(e,t){void 0===e&&(e=this.id),void 0===t&&(t=null);const i=this.getAccessor(),n=[],o={name:this.id,byteStride:a(i),attributes:n};if(this.doublePrecision){const o=function(e,t){const i=h(e,t);return{high:i,low:Object.assign({},i,{offset:i.offset+4*e.size})}}(i,t||{});n.push(r(e,Object.assign({},i,o.high),this.device.type),r(e+"64Low",Object.assign({},i,o.low),this.device.type))}else if(t){const o=h(i,t);n.push(r(e,Object.assign({},i,o),this.device.type))}else n.push(r(e,i,this.device.type));return o}setAccessor(e){this.state.bufferAccessor=e}getAccessor(){return this.state.bufferAccessor}getBounds(){if(this.state.bounds)return this.state.bounds;let e=null;if(this.state.constant&&this.value){const t=Array.from(this.value);e=[t,t]}else{const{value:t,numInstances:i,size:n}=this,o=i*n;if(t&&o&&t.length>=o){const i=new Array(n).fill(1/0),s=new Array(n).fill(-1/0);for(let e=0;e<o;)for(let o=0;o<n;o++){const n=t[e++];n<i[o]&&(i[o]=n),n>s[o]&&(s[o]=n)}e=[i,s]}}return this.state.bounds=e,e}setData(e){const{state:t}=this;let i;i=ArrayBuffer.isView(e)?{value:e}:e instanceof n.h?{buffer:e}:e;const o=Object.assign({},this.settings,i);if(ArrayBuffer.isView(i.value)){if(!i.type){if(this.doublePrecision&&i.value instanceof Float64Array)o.type="float32";else{const e=s(i.value);o.type=o.normalized?e.replace("int","norm"):e}}o.bytesPerElement=i.value.BYTES_PER_ELEMENT,o.stride=a(o)}if(t.bounds=null,i.constant){let e=i.value;e=this._normalizeValue(e,[],0),this.settings.normalized&&(e=this.normalizeConstant(e));if(!(!t.constant||!this._areValuesEqual(e,this.value)))return!1;t.externalBuffer=null,t.constant=!0,this.value=ArrayBuffer.isView(e)?e:new Float32Array(e)}else if(i.buffer){const e=i.buffer;t.externalBuffer=e,t.constant=!1,this.value=i.value||null}else if(i.value){this._checkExternalBuffer(i);let e=i.value;t.externalBuffer=null,t.constant=!1,this.value=e;let{buffer:n}=this;const s=a(o),r=(o.vertexOffset||0)*s;if(this.doublePrecision&&e instanceof Float64Array&&(e=(0,c.cT)(e,o)),this.settings.isIndexed){const t=this.settings.defaultType;e.constructor!==t&&(e=new t(e))}const l=e.byteLength+r+2*s;(!n||n.byteLength<l)&&(n=this._createBuffer(l)),n.write(e,r)}return this.setAccessor(o),!0}updateSubBuffer(e){void 0===e&&(e={}),this.state.bounds=null;const t=this.value,{startOffset:i=0,endOffset:n}=e;this.buffer.write(this.doublePrecision&&t instanceof Float64Array?(0,c.cT)(t,{size:this.size,startIndex:i,endIndex:n}):t.subarray(i,n),i*t.BYTES_PER_ELEMENT+this.byteOffset)}allocate(e,t){void 0===t&&(t=!1);const{state:i}=this,n=i.allocatedValue,o=l.A.allocate(n,e+1,{size:this.size,type:this.settings.defaultType,copy:t});this.value=o;const{byteOffset:s}=this;let{buffer:r}=this;return(!r||r.byteLength<o.byteLength+s)&&(r=this._createBuffer(o.byteLength+s),t&&n&&r.write(n instanceof Float64Array?(0,c.cT)(n,this):n,s)),i.allocatedValue=o,i.constant=!1,i.externalBuffer=null,this.setAccessor(this.settings),!0}_checkExternalBuffer(e){const{value:t}=e;if(!ArrayBuffer.isView(t))throw new Error("Attribute "+this.id+" value is not TypedArray");const i=this.settings.defaultType;let n=!1;if(this.doublePrecision&&(n=t.BYTES_PER_ELEMENT<4),n)throw new Error("Attribute "+this.id+" does not support "+t.constructor.name);t instanceof i||!this.settings.normalized||"normalized"in e||d.A.warn("Attribute "+this.id+" is normalized")()}normalizeConstant(e){switch(this.settings.type){case"snorm8":return new Float32Array(e).map((e=>(e+128)/255*2-1));case"snorm16":return new Float32Array(e).map((e=>(e+32768)/65535*2-1));case"unorm8":return new Float32Array(e).map((e=>e/255));case"unorm16":return new Float32Array(e).map((e=>e/65535));default:return e}}_normalizeValue(e,t,i){const{defaultValue:n,size:o}=this.settings;if(Number.isFinite(e))return t[i]=e,t;if(!e){let e=o;for(;--e>=0;)t[i+e]=n[e];return t}switch(o){case 4:t[i+3]=Number.isFinite(e[3])?e[3]:n[3];case 3:t[i+2]=Number.isFinite(e[2])?e[2]:n[2];case 2:t[i+1]=Number.isFinite(e[1])?e[1]:n[1];case 1:t[i+0]=Number.isFinite(e[0])?e[0]:n[0];break;default:let s=o;for(;--s>=0;)t[i+s]=Number.isFinite(e[s])?e[s]:n[s]}return t}_areValuesEqual(e,t){if(!e||!t)return!1;const{size:i}=this;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}_createBuffer(e){var t;this._buffer&&this._buffer.destroy();const{isIndexed:i,type:o}=this.settings;return this._buffer=this.device.createBuffer(Object.assign({},null==(t=this._buffer)?void 0:t.props,{id:this.id,usage:(i?n.h.INDEX:n.h.VERTEX)|n.h.COPY_DST,indexType:i?o:void 0,byteLength:e})),this._buffer}}var p=i(95238),g=i(33698),f=i(13696);const m=[],v=[[0,1/0]];var y=i(39976);class _ extends u{constructor(e,t){super(e,t,{startIndices:null,lastExternalBuffer:null,binaryValue:null,binaryAccessor:null,needsUpdate:!0,needsRedraw:!1,layoutChanged:!1,updateRanges:v}),this.constant=!1,this.settings.update=t.update||(t.accessor?this._autoUpdater:void 0),Object.seal(this.settings),Object.seal(this.state),this._validateAttributeUpdaters()}get startIndices(){return this.state.startIndices}set startIndices(e){this.state.startIndices=e}needsUpdate(){return this.state.needsUpdate}needsRedraw(e){let{clearChangedFlags:t=!1}=void 0===e?{}:e;const i=this.state.needsRedraw;return this.state.needsRedraw=i&&!t,i}layoutChanged(){return this.state.layoutChanged}setAccessor(e){var t,i,n;(t=this.state).layoutChanged||(t.layoutChanged=(i=e,n=this.getAccessor(),!(i.type===n.type&&i.size===n.size&&a(i)===a(n)&&(i.offset||0)===(n.offset||0)))),super.setAccessor(e)}getUpdateTriggers(){const{accessor:e}=this.settings;return[this.id].concat("function"!=typeof e&&e||[])}supportsTransition(){return Boolean(this.settings.transition)}getTransitionSetting(e){if(!e||!this.supportsTransition())return null;const{accessor:t}=this.settings,i=this.settings.transition,n=Array.isArray(t)?e[t.find((t=>e[t]))]:e[t];return(0,y.K)(n,i)}setNeedsUpdate(e,t){if(void 0===e&&(e=this.id),this.state.needsUpdate=this.state.needsUpdate||e,this.setNeedsRedraw(e),t){const{startRow:e=0,endRow:i=1/0}=t;this.state.updateRanges=function(e,t){if(e===v)return e;if(t[0]<0&&(t[0]=0),t[0]>=t[1])return e;const i=[],n=e.length;let o=0;for(let s=0;s<n;s++){const n=e[s];n[1]<t[0]?(i.push(n),o=s+1):n[0]>t[1]?i.push(n):t=[Math.min(n[0],t[0]),Math.max(n[1],t[1])]}return i.splice(o,0,t),i}(this.state.updateRanges,[e,i])}else this.state.updateRanges=v}clearNeedsUpdate(){this.state.needsUpdate=!1,this.state.updateRanges=m}setNeedsRedraw(e){void 0===e&&(e=this.id),this.state.needsRedraw=this.state.needsRedraw||e}allocate(e){const{state:t,settings:i}=this;return!i.noAlloc&&(!!i.update&&(super.allocate(e,t.updateRanges!==v),!0))}updateBuffer(e){let{numInstances:t,data:i,props:n,context:o}=e;if(!this.needsUpdate())return!1;const{state:{updateRanges:s},settings:{update:r,noAlloc:a}}=this;let l=!0;if(r){for(const[e,a]of s)r.call(o,this,{data:i,startRow:e,endRow:a,props:n,numInstances:t});if(this.value)if(this.constant||!this.buffer||this.buffer.byteLength<this.value.byteLength+this.byteOffset)this.setData({value:this.value,constant:this.constant}),this.constant=!1;else for(const[e,i]of s){const n=Number.isFinite(e)?this.getVertexOffset(e):0,o=Number.isFinite(i)?this.getVertexOffset(i):a||!Number.isFinite(t)?this.value.length:t*this.size;super.updateSubBuffer({startOffset:n,endOffset:o})}else;this._checkAttributeArray()}else l=!1;return this.clearNeedsUpdate(),this.setNeedsRedraw(),l}setConstantValue(e,t){const i="webgpu"===this.device.type;if(i||void 0===t||"function"==typeof t){if(i&&"function"!=typeof t){const e=this._normalizeValue(t,[],0);this._areValuesEqual(e,this.value)||this.setNeedsUpdate("WebGPU constant updated")}return!1}const n=this.settings.transform&&e?this.settings.transform.call(e,t):t;return this.setData({constant:!0,value:n})&&this.setNeedsRedraw(),this.clearNeedsUpdate(),!0}setExternalBuffer(e){const{state:t}=this;return e?(this.clearNeedsUpdate(),t.lastExternalBuffer===e||(t.lastExternalBuffer=e,this.setNeedsRedraw(),this.setData(e)),!0):(t.lastExternalBuffer=null,!1)}setBinaryValue(e,t){void 0===t&&(t=null);const{state:i,settings:n}=this;if(!e)return i.binaryValue=null,i.binaryAccessor=null,!1;if(n.noAlloc)return!1;if(i.binaryValue===e)return this.clearNeedsUpdate(),!0;i.binaryValue=e,this.setNeedsRedraw();if(n.transform||t!==this.startIndices){ArrayBuffer.isView(e)&&(e={value:e});const o=e;(0,p.A)(ArrayBuffer.isView(o.value),"invalid "+n.accessor);const s=Boolean(o.size)&&o.size!==this.size;return i.binaryAccessor=(0,g.I)(o.value,{size:o.size||this.size,stride:o.stride,offset:o.offset,startIndices:t,nested:s}),!1}return this.clearNeedsUpdate(),this.setData(e),!0}getVertexOffset(e){const{startIndices:t}=this;return(t?e<t.length?t[e]:this.numInstances:e)*this.size}getValue(){const e=this.settings.shaderAttributes,t=super.getValue();if(!e)return t;for(const i in e)Object.assign(t,super.getValue(i,e[i]));return t}getBufferLayout(e){this.state.layoutChanged=!1;const t=this.settings.shaderAttributes,i=super._getBufferLayout(),{stepMode:n}=this.settings;if(i.stepMode="dynamic"===n?e?e.isInstanced?"instance":"vertex":"instance":null!=n?n:"vertex",!t)return i;for(const o in t){const e=super._getBufferLayout(o,t[o]);i.attributes.push(...e.attributes)}return i}_autoUpdater(e,t){let{data:i,startRow:n,endRow:o,props:s,numInstances:r}=t;if(e.constant&&"webgpu"!==this.context.device.type)return;const{settings:a,state:l,value:c,size:d,startIndices:h}=e,{accessor:u,transform:m}=a;let v=l.binaryAccessor||("function"==typeof u?u:s[u]);"function"!=typeof v&&"string"==typeof u&&(v=()=>s[u]),(0,p.A)("function"==typeof v,'accessor "'+u+'" is not a function');let y=e.getVertexOffset(n);const{iterable:_,objectInfo:w}=(0,g.X)(i,n,o);for(const p of _){w.index++;let t=v(p,w);if(m&&(t=m.call(this,t)),h){const i=(w.index<h.length-1?h[w.index+1]:r)-h[w.index];if(t&&Array.isArray(t[0])){let i=y;for(const n of t)e._normalizeValue(n,c,i),i+=d}else t&&t.length>d?c.set(t,y):(e._normalizeValue(t,w.target,0),(0,f.R)({target:c,source:w.target,start:y,count:i}));y+=i*d}else e._normalizeValue(t,c,y),y+=d}}_validateAttributeUpdaters(){const{settings:e}=this;if(!(e.noAlloc||"function"==typeof e.update))throw new Error("Attribute "+this.id+" missing update or accessor")}_checkAttributeArray(){const{value:e}=this,t=Math.min(4,this.size);if(e&&e.length>=t){let i=!0;switch(t){case 4:i=i&&Number.isFinite(e[3]);case 3:i=i&&Number.isFinite(e[2]);case 2:i=i&&Number.isFinite(e[1]);case 1:i=i&&Number.isFinite(e[0]);break;default:i=!1}if(!i)throw new Error("Illegal attribute generated for "+this.id)}}}var w=i(63190),b=i(95656),x=i(68475),P=i(22454);function S(e){const{source:t,target:i,start:n=0,size:o,getData:s}=e,r=e.end||i.length,a=t.length,l=r-n;if(a>l)return void i.set(t.subarray(0,l),n);if(i.set(t,n),!s)return;let c=a;for(;c<l;){const e=s(c,t);for(let t=0;t<o;t++)i[n+c]=e[t]||0,c++}}function C(e){switch(e){case 1:return"float";case 2:return"vec2";case 3:return"vec3";case 4:return"vec4";default:throw new Error('No defined attribute type for size "'+e+'"')}}function A(e){switch(e){case 1:return"float32";case 2:return"float32x2";case 3:return"float32x3";case 4:return"float32x4";default:throw new Error("invalid type size")}}function M(e){e.push(e.shift())}function T(e){let{device:t,source:i,target:n}=e;var o;(!n||n.byteLength<i.byteLength)&&(null==(o=n)||o.destroy(),n=t.createBuffer({byteLength:i.byteLength,usage:i.usage}));return n}function j(e){let{device:t,buffer:i,attribute:n,fromLength:o,toLength:s,fromStartIndices:r,getData:a=e=>e}=e;const l=n.doublePrecision&&n.value instanceof Float64Array?2:1,c=n.size*l,d=n.byteOffset,h=n.settings.bytesPerElement<4?d/n.settings.bytesPerElement*4:d,u=n.startIndices,p=r&&u,g=n.isConstant;if(!p&&i&&o>=s)return i;const f=n.value instanceof Float64Array?Float32Array:n.value.constructor,m=g?n.value:new f(n.getBuffer().readSyncWebGL(d,s*f.BYTES_PER_ELEMENT).buffer);if(n.settings.normalized&&!g){const e=a;a=(t,i)=>n.normalizeConstant(e(t,i))}const v=g?(e,t)=>a(m,t):(e,t)=>a(m.subarray(e+d,e+d+c),t),y=i?new Float32Array(i.readSyncWebGL(h,4*o).buffer):new Float32Array(0),_=new Float32Array(s);var w;(function(e){let{source:t,target:i,size:n,getData:o,sourceStartIndices:s,targetStartIndices:r}=e;if(!s||!r)return S({source:t,target:i,size:n,getData:o}),i;let a=0,l=0;const c=o&&((e,t)=>o(e+l,t)),d=Math.min(s.length,r.length);for(let h=1;h<d;h++){const e=s[h]*n,o=r[h]*n;S({source:t.subarray(a,e),target:i,start:l,end:o,size:n,getData:c}),a=e,l=o}l<i.length&&S({source:[],target:i,start:l,size:n,getData:c})}({source:y,target:_,sourceStartIndices:r,targetStartIndices:u,size:c,getData:v}),!i||i.byteLength<_.byteLength+h)&&(null==(w=i)||w.destroy(),i=t.createBuffer({byteLength:_.byteLength+h,usage:35050}));return i.write(_,h),i}var E=i(50948);class O{constructor(e){let{device:t,attribute:i,timeline:n}=e;this.buffers=[],this.currentLength=0,this.device=t,this.transition=new E.A(n),this.attribute=i,this.attributeInTransition=function(e){const{device:t,settings:i,value:n}=e,o=new _(t,i);return o.setData({value:n instanceof Float64Array?new Float64Array(0):new Float32Array(0),normalized:i.normalized}),o}(i),this.currentStartIndices=i.startIndices}get inProgress(){return this.transition.inProgress}start(e,t,i){void 0===i&&(i=1/0),this.settings=e,this.currentStartIndices=this.attribute.startIndices,this.currentLength=function(e,t){const{doublePrecision:i,settings:n,value:o,size:s}=e,r=i&&o instanceof Float64Array?2:1;let a=0;const{shaderAttributes:l}=e.settings;if(l)for(const d of Object.values(l)){var c;a=Math.max(a,null!=(c=d.vertexOffset)?c:0)}return(n.noAlloc?o.length:(t+a)*s)*r}(this.attribute,t),this.transition.start(Object.assign({},e,{duration:i}))}update(){const e=this.transition.update();return e&&this.onUpdate(),e}setBuffer(e){this.attributeInTransition.setData({buffer:e,normalized:this.attribute.settings.normalized,value:this.attributeInTransition.value})}cancel(){this.transition.cancel()}delete(){this.cancel();for(const e of this.buffers)e.destroy();this.buffers.length=0}}const L={name:"interpolation",vs:"uniform interpolationUniforms {\n  float time;\n} interpolation;\n",uniformTypes:{time:"f32"}},I="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vCurrent;\n\nvoid main(void) {\n  vCurrent = mix(aFrom, aTo, interpolation.time);\n  gl_Position = vec4(0.0);\n}\n",R="#version 300 es\n#define SHADER_NAME interpolation-transition-vertex-shader\n\nin ATTRIBUTE_TYPE aFrom;\nin ATTRIBUTE_TYPE aFrom64Low;\nin ATTRIBUTE_TYPE aTo;\nin ATTRIBUTE_TYPE aTo64Low;\nout ATTRIBUTE_TYPE vCurrent;\nout ATTRIBUTE_TYPE vCurrent64Low;\n\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\n  vec2 range = sub_fp64(b, a);\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\n}\n\nvoid main(void) {\n  for (int i=0; i<ATTRIBUTE_SIZE; i++) {\n    vec2 value = mix_fp64(vec2(aFrom[i], aFrom64Low[i]), vec2(aTo[i], aTo64Low[i]), interpolation.time);\n    vCurrent[i] = value.x;\n    vCurrent64Low[i] = value.y;\n  }\n  gl_Position = vec4(0.0);\n}\n";function k(e){return e.doublePrecision&&e.value instanceof Float64Array}const z={name:"spring",vs:"uniform springUniforms {\n  float damping;\n  float stiffness;\n} spring;\n",uniformTypes:{damping:"f32",stiffness:"f32"}},D="#version 300 es\n#define SHADER_NAME spring-transition-vertex-shader\n\n#define EPSILON 0.00001\n\nin ATTRIBUTE_TYPE aPrev;\nin ATTRIBUTE_TYPE aCur;\nin ATTRIBUTE_TYPE aTo;\nout ATTRIBUTE_TYPE vNext;\nout float vIsTransitioningFlag;\n\nATTRIBUTE_TYPE getNextValue(ATTRIBUTE_TYPE cur, ATTRIBUTE_TYPE prev, ATTRIBUTE_TYPE dest) {\n  ATTRIBUTE_TYPE velocity = cur - prev;\n  ATTRIBUTE_TYPE delta = dest - cur;\n  ATTRIBUTE_TYPE force = delta * spring.stiffness;\n  ATTRIBUTE_TYPE resistance = velocity * spring.damping;\n  return force - resistance + velocity + cur;\n}\n\nvoid main(void) {\n  bool isTransitioning = length(aCur - aPrev) > EPSILON || length(aTo - aCur) > EPSILON;\n  vIsTransitioningFlag = isTransitioning ? 1.0 : 0.0;\n\n  vNext = getNextValue(aCur, aPrev, aTo);\n  gl_Position = vec4(0, 0, 0, 1);\n  gl_PointSize = 100.0;\n}\n",N="#version 300 es\n#define SHADER_NAME spring-transition-is-transitioning-fragment-shader\n\nin float vIsTransitioningFlag;\n\nout vec4 fragColor;\n\nvoid main(void) {\n  if (vIsTransitioningFlag == 0.0) {\n    discard;\n  }\n  fragColor = vec4(1.0);\n}";const V={interpolation:class extends O{constructor(e){let{device:t,attribute:i,timeline:n}=e;super({device:t,attribute:i,timeline:n}),this.type="interpolation",this.transform=function(e,t){const i=t.size,n=C(i),o=A(i),s=t.getBufferLayout();if(k(t))return new x.p(e,{vs:R,bufferLayout:[{name:"aFrom",byteStride:8*i,attributes:[{attribute:"aFrom",format:o,byteOffset:0},{attribute:"aFrom64Low",format:o,byteOffset:4*i}]},{name:"aTo",byteStride:8*i,attributes:[{attribute:"aTo",format:o,byteOffset:0},{attribute:"aTo64Low",format:o,byteOffset:4*i}]}],modules:[P.dI,L],defines:{ATTRIBUTE_TYPE:n,ATTRIBUTE_SIZE:i},moduleSettings:{},varyings:["vCurrent","vCurrent64Low"],bufferMode:35980,disableWarnings:!0});return new x.p(e,{vs:I,bufferLayout:[{name:"aFrom",format:o},{name:"aTo",format:s.attributes[0].format}],modules:[L],defines:{ATTRIBUTE_TYPE:n},varyings:["vCurrent"],disableWarnings:!0})}(t,i)}start(e,t){const i=this.currentLength,n=this.currentStartIndices;if(super.start(e,t,e.duration),e.duration<=0)return void this.transition.cancel();const{buffers:o,attribute:s}=this;M(o),o[0]=j({device:this.device,buffer:o[0],attribute:s,fromLength:i,toLength:this.currentLength,fromStartIndices:n,getData:e.enter}),o[1]=T({device:this.device,source:o[0],target:o[1]}),this.setBuffer(o[1]);const{transform:r}=this,a=r.model;let l=Math.floor(this.currentLength/s.size);k(s)&&(l/=2),a.setVertexCount(l),s.isConstant?(a.setAttributes({aFrom:o[0]}),a.setConstantAttributes({aTo:s.value})):a.setAttributes({aFrom:o[0],aTo:s.getBuffer()}),r.transformFeedback.setBuffers({vCurrent:o[1]})}onUpdate(){const{duration:e,easing:t}=this.settings,{time:i}=this.transition;let n=i/e;t&&(n=t(n));const{model:o}=this.transform,s={time:n};o.shaderInputs.setProps({interpolation:s}),this.transform.run({discard:!0})}delete(){super.delete(),this.transform.destroy()}},spring:class extends O{constructor(e){let{device:t,attribute:i,timeline:n}=e;super({device:t,attribute:i,timeline:n}),this.type="spring",this.texture=function(e){return e.createTexture({data:new Uint8Array(4),format:"rgba8unorm",width:1,height:1})}(t),this.framebuffer=function(e,t){return e.createFramebuffer({id:"spring-transition-is-transitioning-framebuffer",width:1,height:1,colorAttachments:[t]})}(t,this.texture),this.transform=function(e,t){const i=C(t.size),n=A(t.size);return new x.p(e,{vs:D,fs:N,bufferLayout:[{name:"aPrev",format:n},{name:"aCur",format:n},{name:"aTo",format:t.getBufferLayout().attributes[0].format}],varyings:["vNext"],modules:[z],defines:{ATTRIBUTE_TYPE:i},parameters:{depthCompare:"always",blendColorOperation:"max",blendColorSrcFactor:"one",blendColorDstFactor:"one",blendAlphaOperation:"max",blendAlphaSrcFactor:"one",blendAlphaDstFactor:"one"}})}(t,i)}start(e,t){const i=this.currentLength,n=this.currentStartIndices;super.start(e,t);const{buffers:o,attribute:s}=this;for(let a=0;a<2;a++)o[a]=j({device:this.device,buffer:o[a],attribute:s,fromLength:i,toLength:this.currentLength,fromStartIndices:n,getData:e.enter});o[2]=T({device:this.device,source:o[0],target:o[2]}),this.setBuffer(o[1]);const{model:r}=this.transform;r.setVertexCount(Math.floor(this.currentLength/s.size)),s.isConstant?r.setConstantAttributes({aTo:s.value}):r.setAttributes({aTo:s.getBuffer()})}onUpdate(){const{buffers:e,transform:t,framebuffer:i,transition:n}=this,o=this.settings;t.model.setAttributes({aPrev:e[0],aCur:e[1]}),t.transformFeedback.setBuffers({vNext:e[2]});const s={stiffness:o.stiffness,damping:o.damping};t.model.shaderInputs.setProps({spring:s}),t.run({framebuffer:i,discard:!1,parameters:{viewport:[0,0,1,1]},clearColor:[0,0,0,0]}),M(e),this.setBuffer(e[1]);this.device.readPixelsToArrayWebGL(i)[0]>0||n.end()}delete(){super.delete(),this.transform.destroy(),this.texture.destroy(),this.framebuffer.destroy()}}};class U{constructor(e,t){let{id:i,timeline:n}=t;if(!e)throw new Error("AttributeTransitionManager is constructed without device");this.id=i,this.device=e,this.timeline=n,this.transitions={},this.needsRedraw=!1,this.numInstances=1}finalize(){for(const e in this.transitions)this._removeTransition(e)}update(e){let{attributes:t,transitions:i,numInstances:n}=e;this.numInstances=n||1;for(const o in t){const e=t[o],n=e.getTransitionSetting(i);n&&this._updateAttribute(o,e,n)}for(const o in this.transitions){const e=t[o];e&&e.getTransitionSetting(i)||this._removeTransition(o)}}hasAttribute(e){const t=this.transitions[e];return t&&t.inProgress}getAttributes(){const e={};for(const t in this.transitions){const i=this.transitions[t];i.inProgress&&(e[t]=i.attributeInTransition)}return e}run(){if(0===this.numInstances)return!1;for(const t in this.transitions){this.transitions[t].update()&&(this.needsRedraw=!0)}const e=this.needsRedraw;return this.needsRedraw=!1,e}_removeTransition(e){this.transitions[e].delete(),delete this.transitions[e]}_updateAttribute(e,t,i){const n=this.transitions[e];let o=!n||n.type!==i.type;if(o){n&&this._removeTransition(e);const s=V[i.type];s?this.transitions[e]=new s({attribute:t,timeline:this.timeline,device:this.device}):(d.A.error("unsupported transition type '"+i.type+"'")(),o=!1)}(o||t.needsRedraw())&&(this.needsRedraw=!0,this.transitions[e].start(i,this.numInstances))}}const F="attributeManager.invalidate";class B{constructor(e,t){let{id:i="attribute-manager",stats:n,timeline:o}=void 0===t?{}:t;this.mergeBoundsMemoized=(0,w.A)(c._Z),this.id=i,this.device=e,this.attributes={},this.updateTriggers={},this.needsRedraw=!0,this.userData={},this.stats=n,this.attributeTransitionManager=new U(e,{id:i+"-transitions",timeline:o}),Object.seal(this)}finalize(){for(const e in this.attributes)this.attributes[e].delete();this.attributeTransitionManager.finalize()}getNeedsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this.needsRedraw;return this.needsRedraw=this.needsRedraw&&!e.clearRedrawFlags,t&&this.id}setNeedsRedraw(){this.needsRedraw=!0}add(e){this._add(e)}addInstanced(e){this._add(e,{stepMode:"instance"})}remove(e){for(const t of e)void 0!==this.attributes[t]&&(this.attributes[t].delete(),delete this.attributes[t])}invalidate(e,t){const i=this._invalidateTrigger(e,t);(0,b.A)(F,this,e,i)}invalidateAll(e){for(const t in this.attributes)this.attributes[t].setNeedsUpdate(t,e);(0,b.A)(F,this,"all")}update(e){let{data:t,numInstances:i,startIndices:n=null,transitions:o,props:s={},buffers:r={},context:a={}}=e,l=!1;(0,b.A)("attributeManager.updateStart",this),this.stats&&this.stats.get("Update Attributes").timeStart();for(const c in this.attributes){const e=this.attributes[c],o=e.settings.accessor;e.startIndices=n,e.numInstances=i,s[c]&&d.A.removed("props."+c,"data.attributes."+c)(),e.setExternalBuffer(r[c])||e.setBinaryValue("string"==typeof o?r[o]:void 0,t.startIndices)||"string"==typeof o&&!r[o]&&e.setConstantValue(a,s[o])||e.needsUpdate()&&(l=!0,this._updateAttribute({attribute:e,numInstances:i,data:t,props:s,context:a})),this.needsRedraw=this.needsRedraw||e.needsRedraw()}l&&(0,b.A)("attributeManager.updateEnd",this,i),this.stats&&this.stats.get("Update Attributes").timeEnd(),this.attributeTransitionManager.update({attributes:this.attributes,numInstances:i,transitions:o})}updateTransition(){const{attributeTransitionManager:e}=this,t=e.run();return this.needsRedraw=this.needsRedraw||t,t}getAttributes(){return Object.assign({},this.attributes,this.attributeTransitionManager.getAttributes())}getBounds(e){const t=e.map((e=>{var t;return null==(t=this.attributes[e])?void 0:t.getBounds()}));return this.mergeBoundsMemoized(t)}getChangedAttributes(e){void 0===e&&(e={clearChangedFlags:!1});const{attributes:t,attributeTransitionManager:i}=this,n=Object.assign({},i.getAttributes());for(const o in t){const s=t[o];s.needsRedraw(e)&&!i.hasAttribute(o)&&(n[o]=s)}return n}getBufferLayouts(e){return Object.values(this.getAttributes()).map((t=>t.getBufferLayout(e)))}_add(e,t){for(const i in e){const n=e[i],o=Object.assign({},n,{id:i,size:(n.isIndexed?1:n.size)||1},t);this.attributes[i]=new _(this.device,o)}this._mapUpdateTriggersToAttributes()}_mapUpdateTriggersToAttributes(){const e={};for(const t in this.attributes){this.attributes[t].getUpdateTriggers().forEach((i=>{e[i]||(e[i]=[]),e[i].push(t)}))}this.updateTriggers=e}_invalidateTrigger(e,t){const{attributes:i,updateTriggers:n}=this,o=n[e];return o&&o.forEach((e=>{const n=i[e];n&&n.setNeedsUpdate(n.id,t)})),o}_updateAttribute(e){const{attribute:t,numInstances:i}=e;if((0,b.A)("attribute.updateStart",t),t.constant)return void t.setConstantValue(e.context,t.value);t.allocate(i)&&(0,b.A)("attribute.allocate",t,i);t.updateBuffer(e)&&(this.needsRedraw=!0,(0,b.A)("attribute.updateEnd",t,i))}}},39976:(e,t,i)=>{i.d(t,{K:()=>o});const n={interpolation:{duration:0,easing:e=>e},spring:{stiffness:.05,damping:.5}};function o(e,t){if(!e)return null;Number.isFinite(e)&&(e={type:"interpolation",duration:e});const i=e.type||"interpolation";return Object.assign({},n[i],t,e,{type:i})}},33847:(e,t,i)=>{i.d(t,{A:()=>l});var n=i(3002),o=i(95656),s=i(13696),r=i(95958);class a extends n.A{get isComposite(){return!0}get isDrawable(){return!1}get isLoaded(){return super.isLoaded&&this.getSubLayers().every((e=>e.isLoaded))}getSubLayers(){return this.internalState&&this.internalState.subLayers||[]}initializeState(e){}setState(e){super.setState(e),this.setNeedsUpdate()}getPickingInfo(e){let{info:t}=e;const{object:i}=t;return i&&i.__source&&i.__source.parent&&i.__source.parent.id===this.id?(t.object=i.__source.object,t.index=i.__source.index,t):t}filterSubLayer(e){return!0}shouldRenderSubLayer(e,t){return t&&t.length}getSubLayerClass(e,t){const{_subLayerProps:i}=this.props;return i&&i[e]&&i[e].type||t}getSubLayerRow(e,t,i){return e.__source={parent:this,object:t,index:i},e}getSubLayerAccessor(e){if("function"==typeof e){const t={index:-1,data:this.props.data,target:[]};return(i,n)=>i&&i.__source?(t.index=i.__source.index,e(i.__source.object,t)):e(i,n)}return e}getSubLayerProps(e){var t;void 0===e&&(e={});const{opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:h,coordinateOrigin:u,wrapLongitude:p,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y,_subLayerProps:_}=this.props,w={id:"",updateTriggers:{},opacity:i,pickable:n,visible:o,parameters:s,getPolygonOffset:a,highlightedObjectIndex:l,autoHighlight:c,highlightColor:d,coordinateSystem:h,coordinateOrigin:u,wrapLongitude:p,positionFormat:g,modelMatrix:f,extensions:m,fetch:v,operation:y},b=_&&e.id&&_[e.id],x=b&&b.updateTriggers,P=e.id||"sublayer";if(b){const t=this.props[r.fW],i=e.type?e.type._propTypes:{};for(const e in b){const n=i[e]||t[e];n&&"accessor"===n.type&&(b[e]=this.getSubLayerAccessor(b[e]))}}Object.assign(w,e,b),w.id=this.props.id+"-"+P,w.updateTriggers=Object.assign({all:null==(t=this.props.updateTriggers)?void 0:t.all},e.updateTriggers,x);for(const r of m){const e=r.getSubLayerProps.call(this,r);e&&Object.assign(w,e,{updateTriggers:Object.assign(w.updateTriggers,e.updateTriggers)})}return w}_updateAutoHighlight(e){for(const t of this.getSubLayers())t.updateAutoHighlight(e)}_getAttributeManager(){return null}_postUpdate(e,t){let i=this.internalState.subLayers;const n=!i||this.needsUpdate();if(n){const e=this.renderLayers();i=(0,s.B)(e,Boolean),this.internalState.subLayers=i}(0,o.A)("compositeLayer.renderLayers",this,n,i);for(const o of i)o.parent=this}}a.layerName="CompositeLayer";const l=a},8961:(e,t,i)=>{i.d(t,{Kx:()=>r,We:()=>c,p5:()=>a,rf:()=>s,tg:()=>l});var n=i(18120),o=i(7853);const s={DEFAULT:-1,LNGLAT:1,METER_OFFSETS:2,LNGLAT_OFFSETS:3,CARTESIAN:0};Object.defineProperty(s,"IDENTITY",{get:()=>(n.A.deprecated("COORDINATE_SYSTEM.IDENTITY","COORDINATE_SYSTEM.CARTESIAN")(),0)});const r={WEB_MERCATOR:1,GLOBE:2,WEB_MERCATOR_AUTO_OFFSET:4,IDENTITY:0},a={common:0,meters:1,pixels:2},l={click:"onClick",dblclick:"onClick",panstart:"onDragStart",panmove:"onDrag",panend:"onDragEnd"},c={multipan:[o.uq,{threshold:10,direction:o.e8.Vertical,pointers:2}],pinch:[o.h1,{},null,["multipan"]],pan:[o.uq,{threshold:1},["pinch"],["multipan"]],dblclick:[o.Cx,{event:"dblclick",taps:2}],click:[o.Cx,{event:"click"},null,["dblclick"]]}},36378:(e,t,i)=>{i.d(t,{A:()=>se});var n=i(3726),o=i(3189);const s=[i(64458).A],r=["vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)","vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)","vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)","fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)"],a=[];function l(e){const t=o._.getDefaultShaderAssembler();for(const n of s)t.addDefaultModule(n);t._hookFunctions.length=0;const i="glsl"===e?r:a;for(const n of i)t.addShaderHook(n);return t}const c="uniform layerUniforms {\n  uniform float opacity;\n} layer;\n",d={name:"layer",vs:c,fs:c,getUniforms:e=>({opacity:Math.pow(e.opacity,1/2.2)}),uniformTypes:{opacity:"f32"}};var h=i(95958),u=i(18120),p=i(95656),g=i(13696),f=i(97983),m=i(327);class v{constructor(e,t,i){this._loadCount=0,this._subscribers=new Set,this.id=e,this.context=i,this.setData(t)}subscribe(e){this._subscribers.add(e)}unsubscribe(e){this._subscribers.delete(e)}inUse(){return this._subscribers.size>0}delete(){}getData(){return this.isLoaded?this._error?Promise.reject(this._error):this._content:this._loader.then((()=>this.getData()))}setData(e,t){if(e===this._data&&!t)return;this._data=e;const i=++this._loadCount;let n=e;"string"==typeof e&&(n=(0,m.H)(e)),n instanceof Promise?(this.isLoaded=!1,this._loader=n.then((e=>{this._loadCount===i&&(this.isLoaded=!0,this._error=void 0,this._content=e)})).catch((e=>{this._loadCount===i&&(this.isLoaded=!0,this._error=e||!0)}))):(this.isLoaded=!0,this._error=void 0,this._content=e);for(const o of this._subscribers)o.onChange(this.getData())}}class y{constructor(e){var t;this.protocol=e.protocol||"resource://",this._context={device:e.device,gl:null==(t=e.device)?void 0:t.gl,resourceManager:this},this._resources={},this._consumers={},this._pruneRequest=null}contains(e){return!!e.startsWith(this.protocol)||e in this._resources}add(e){let{resourceId:t,data:i,forceUpdate:n=!1,persistent:o=!0}=e,s=this._resources[t];s?s.setData(i,n):(s=new v(t,i,this._context),this._resources[t]=s),s.persistent=o}remove(e){const t=this._resources[e];t&&(t.delete(),delete this._resources[e])}unsubscribe(e){let{consumerId:t}=e;const i=this._consumers[t];if(i){for(const e in i){const t=i[e],n=this._resources[t.resourceId];n&&n.unsubscribe(t)}delete this._consumers[t],this.prune()}}subscribe(e){let{resourceId:t,onChange:i,consumerId:n,requestId:o="default"}=e;const{_resources:s,protocol:r}=this;t.startsWith(r)&&(t=t.replace(r,""),s[t]||this.add({resourceId:t,data:null,persistent:!1}));const a=s[t];if(this._track(n,o,a,i),a)return a.getData()}prune(){this._pruneRequest||(this._pruneRequest=setTimeout((()=>this._prune()),0))}finalize(){for(const e in this._resources)this._resources[e].delete()}_track(e,t,i,n){const o=this._consumers,s=o[e]=o[e]||{};let r=s[t];const a=r&&r.resourceId&&this._resources[r.resourceId];a&&(a.unsubscribe(r),this.prune()),i&&(r?(r.onChange=n,r.resourceId=i.id):r={onChange:n,resourceId:i.id},s[t]=r,i.subscribe(r))}_prune(){this._pruneRequest=null;for(const e of Object.keys(this._resources)){const t=this._resources[e];t.persistent||t.inUse()||(t.delete(),delete this._resources[e])}}}var _=i(43976);class w{constructor(e,t){var i;this._lastRenderedLayers=[],this._needsRedraw=!1,this._needsUpdate=!1,this._nextLayers=null,this._debug=!1,this._defaultShaderModulesChanged=!1,this.activateViewport=e=>{(0,p.A)("layerManager.activateViewport",this,e),e&&(this.context.viewport=e)};const{deck:o,stats:s,viewport:r,timeline:a}=t||{};this.layers=[],this.resourceManager=new y({device:e,protocol:"deck://"}),this.context={mousePosition:null,userData:{},layerManager:this,device:e,gl:null==e?void 0:e.gl,deck:o,shaderAssembler:l((null==e||null==(i=e.info)?void 0:i.shadingLanguage)||"glsl"),defaultShaderModules:[d],renderPass:void 0,stats:s||new f.A({id:"deck.gl"}),viewport:r||new _.A({id:"DEFAULT-INITIAL-VIEWPORT"}),timeline:a||new n.K,resourceManager:this.resourceManager,onError:void 0},Object.seal(this)}finalize(){this.resourceManager.finalize();for(const e of this.layers)this._finalizeLayer(e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);for(const i of this.layers){const n=i.getNeedsRedraw(e);t=t||n}return t}needsUpdate(){return this._nextLayers&&this._nextLayers!==this._lastRenderedLayers?"layers changed":this._defaultShaderModulesChanged?"shader modules changed":this._needsUpdate}setNeedsRedraw(e){this._needsRedraw=this._needsRedraw||e}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e}getLayers(e){let{layerIds:t}=void 0===e?{}:e;return t?this.layers.filter((e=>t.find((t=>0===e.id.indexOf(t))))):this.layers}setProps(e){"debug"in e&&(this._debug=e.debug),"userData"in e&&(this.context.userData=e.userData),"layers"in e&&(this._nextLayers=e.layers),"onError"in e&&(this.context.onError=e.onError)}setLayers(e,t){(0,p.A)("layerManager.setLayers",this,t,e),this._lastRenderedLayers=e;const i=(0,g.B)(e,Boolean);for(const n of i)n.context=this.context;this._updateLayers(this.layers,i)}updateLayers(){const e=this.needsUpdate();e&&(this.setNeedsRedraw("updating layers: "+e),this.setLayers(this._nextLayers||this._lastRenderedLayers,e)),this._nextLayers=null}addDefaultShaderModule(e){const{defaultShaderModules:t}=this.context;t.find((t=>t.name===e.name))||(t.push(e),this._defaultShaderModulesChanged=!0)}removeDefaultShaderModule(e){const{defaultShaderModules:t}=this.context,i=t.findIndex((t=>t.name===e.name));i>=0&&(t.splice(i,1),this._defaultShaderModulesChanged=!0)}_handleError(e,t,i){i.raiseError(t,e+" of "+i)}_updateLayers(e,t){const i={};for(const s of e)i[s.id]?u.A.warn("Multiple old layers with same id "+s.id)():i[s.id]=s;if(this._defaultShaderModulesChanged){for(const t of e)t.setNeedsUpdate(),t.setChangeFlags({extensionsChanged:!0});this._defaultShaderModulesChanged=!1}const n=[];this._updateSublayersRecursively(t,i,n),this._finalizeOldLayers(i);let o=!1;for(const s of n)if(s.hasUniformTransition()){o="Uniform transition in "+s;break}this._needsUpdate=o,this.layers=n}_updateSublayersRecursively(e,t,i){for(const o of e){o.context=this.context;const e=t[o.id];null===e&&u.A.warn("Multiple new layers with same id "+o.id)(),t[o.id]=null;let s=null;try{this._debug&&e!==o&&o.validateProps(),e?(this._transferLayerState(e,o),this._updateLayer(o)):this._initializeLayer(o),i.push(o),s=o.isComposite?o.getSubLayers():null}catch(n){this._handleError("matching",n,o)}s&&this._updateSublayersRecursively(s,t,i)}}_finalizeOldLayers(e){for(const t in e){const i=e[t];i&&this._finalizeLayer(i)}}_initializeLayer(e){try{e._initialize(),e.lifecycle=h.VD.INITIALIZED}catch(t){this._handleError("initialization",t,e)}}_transferLayerState(e,t){t._transferState(e),t.lifecycle=h.VD.MATCHED,t!==e&&(e.lifecycle=h.VD.AWAITING_GC)}_updateLayer(e){try{e._update()}catch(t){this._handleError("update",t,e)}}_finalizeLayer(e){this._needsRedraw=this._needsRedraw||"finalized "+e,e.lifecycle=h.VD.AWAITING_FINALIZATION;try{e._finalize(),e.lifecycle=h.VD.FINALIZED}catch(t){this._handleError("finalization",t,e)}}}var b=i(50111);class x{constructor(e){this.views=[],this.width=100,this.height=100,this.viewState={},this.controllers={},this.timeline=e.timeline,this._viewports=[],this._viewportMap={},this._isUpdating=!1,this._needsRedraw="First render",this._needsUpdate="Initialize",this._eventManager=e.eventManager,this._eventCallbacks={onViewStateChange:e.onViewStateChange,onInteractionStateChange:e.onInteractionStateChange},Object.seal(this),this.setProps(e)}finalize(){for(const e in this.controllers){const t=this.controllers[e];t&&t.finalize()}this.controllers={}}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}setNeedsUpdate(e){this._needsUpdate=this._needsUpdate||e,this._needsRedraw=this._needsRedraw||e}updateViewStates(){for(const e in this.controllers){const t=this.controllers[e];t&&t.updateTransition()}}getViewports(e){return e?this._viewports.filter((t=>t.containsPixel(e))):this._viewports}getViews(){const e={};return this.views.forEach((t=>{e[t.id]=t})),e}getView(e){return this.views.find((t=>t.id===e))}getViewState(e){const t="string"==typeof e?this.getView(e):e,i=t&&this.viewState[t.getViewStateId()]||this.viewState;return t?t.filterViewState(i):i}getViewport(e){return this._viewportMap[e]}unproject(e,t){const i=this.getViewports(),n={x:e[0],y:e[1]};for(let o=i.length-1;o>=0;--o){const s=i[o];if(s.containsPixel(n)){const i=e.slice();return i[0]-=s.x,i[1]-=s.y,s.unproject(i,t)}}return null}setProps(e){e.views&&this._setViews(e.views),e.viewState&&this._setViewState(e.viewState),("width"in e||"height"in e)&&this._setSize(e.width,e.height),this._isUpdating||this._update()}_update(){this._isUpdating=!0,this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._needsUpdate&&(this._needsUpdate=!1,this._rebuildViewports()),this._isUpdating=!1}_setSize(e,t){e===this.width&&t===this.height||(this.width=e,this.height=t,this.setNeedsUpdate("Size changed"))}_setViews(e){e=(0,g.B)(e,Boolean);this._diffViews(e,this.views)&&this.setNeedsUpdate("views changed"),this.views=e}_setViewState(e){if(e){!(0,b.b)(e,this.viewState,3)&&this.setNeedsUpdate("viewState changed"),this.viewState=e}else u.A.warn("missing `viewState` or `initialViewState`")()}_createController(e,t){return new(0,t.type)({timeline:this.timeline,eventManager:this._eventManager,onViewStateChange:this._eventCallbacks.onViewStateChange,onStateChange:this._eventCallbacks.onInteractionStateChange,makeViewport:t=>{var i;return null==(i=this.getView(e.id))?void 0:i.makeViewport({viewState:t,width:this.width,height:this.height})}})}_updateController(e,t,i,n){const o=e.controller;if(o&&i){const s=Object.assign({},t,o,{id:e.id,x:i.x,y:i.y,width:i.width,height:i.height});return n&&n.constructor===o.type||(n=this._createController(e,s)),n&&n.setProps(s),n}return null}_rebuildViewports(){const{views:e}=this,t=this.controllers;this._viewports=[],this.controllers={};let i=!1;for(let n=e.length;n--;){const o=e[n],s=this.getViewState(o),r=o.makeViewport({viewState:s,width:this.width,height:this.height});let a=t[o.id];const l=Boolean(o.controller);l&&!a&&(i=!0),!i&&l||!a||(a.finalize(),a=null),this.controllers[o.id]=this._updateController(o,s,r,a),r&&this._viewports.unshift(r)}for(const n in t){const e=t[n];e&&!this.controllers[n]&&e.finalize()}this._buildViewportMap()}_buildViewportMap(){this._viewportMap={},this._viewports.forEach((e=>{e.id&&(this._viewportMap[e.id]=this._viewportMap[e.id]||e)}))}_diffViews(e,t){return e.length!==t.length||e.some(((i,n)=>!e[n].equals(t[n])))}}var P=i(63201),S=i(55443);const C=new S.A;class A{constructor(e){this._resolvedEffects=[],this._defaultEffects=[],this.effects=[],this._context=e,this._needsRedraw="Initial render",this._setEffects([])}addDefaultEffect(e){const t=this._defaultEffects;if(!t.find((t=>t.id===e.id))){const i=t.findIndex((t=>{return i=e,(null!=(n=t.order)?n:1/0)-(null!=(o=i.order)?o:1/0)>0;var i,n,o}));i<0?t.push(e):t.splice(i,0,e),e.setup(this._context),this._setEffects(this.effects)}}setProps(e){"effects"in e&&((0,b.b)(e.effects,this.effects,1)||this._setEffects(e.effects))}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}getEffects(){return this._resolvedEffects}_setEffects(e){const t={};for(const n of this.effects)t[n.id]=n;const i=[];for(const n of e){const e=t[n.id];let o=n;e&&e!==n?e.setProps?(e.setProps(n.props),o=e):e.cleanup(this._context):e||n.setup(this._context),i.push(o),delete t[n.id]}for(const n in t)t[n].cleanup(this._context);this.effects=i,this._resolvedEffects=i.concat(this._defaultEffects),e.some((e=>e instanceof S.A))||this._resolvedEffects.push(C),this._needsRedraw="effects changed"}finalize(){for(const e of this._resolvedEffects)e.cleanup(this._context);this.effects.length=0,this._resolvedEffects.length=0,this._defaultEffects.length=0}}var M=i(44584);class T extends M.A{shouldDrawLayer(e){const{operation:t}=e.props;return t.includes("draw")||t.includes("terrain")}}var j=i(78218);class E{constructor(e){this.device=e,this.layerFilter=null,this.drawPickingColors=!1,this.drawLayersPass=new T(e),this.pickLayersPass=new j.A(e),this.renderCount=0,this._needsRedraw="Initial render",this.renderBuffers=[],this.lastPostProcessEffect=null}setProps(e){this.layerFilter!==e.layerFilter&&(this.layerFilter=e.layerFilter,this._needsRedraw="layerFilter changed"),this.drawPickingColors!==e.drawPickingColors&&(this.drawPickingColors=e.drawPickingColors,this._needsRedraw="drawPickingColors changed")}renderLayers(e){if(!e.viewports.length)return;const t=this.drawPickingColors?this.pickLayersPass:this.drawLayersPass,i=Object.assign({layerFilter:this.layerFilter,isPicking:this.drawPickingColors},e);i.effects&&this._preRender(i.effects,i);const n=this.lastPostProcessEffect?this.renderBuffers[0]:i.target;this.lastPostProcessEffect&&(i.clearColor=[0,0,0,0],i.clearCanvas=!0);const o=t.render(Object.assign({},i,{target:n}));i.effects&&(this.lastPostProcessEffect&&(i.clearCanvas=void 0===e.clearCanvas||e.clearCanvas),this._postRender(i.effects,i)),this.renderCount++,(0,p.A)("deckRenderer.renderLayers",this,o,e)}needsRedraw(e){void 0===e&&(e={clearRedrawFlags:!1});const t=this._needsRedraw;return e.clearRedrawFlags&&(this._needsRedraw=!1),t}finalize(){const{renderBuffers:e}=this;for(const t of e)t.delete();e.length=0}_preRender(e,t){this.lastPostProcessEffect=null,t.preRenderStats=t.preRenderStats||{};for(const i of e)t.preRenderStats[i.id]=i.preRender(t),i.postRender&&(this.lastPostProcessEffect=i.id);this.lastPostProcessEffect&&this._resizeRenderBuffers()}_resizeRenderBuffers(){const{renderBuffers:e}=this,t=this.device.canvasContext.getDrawingBufferSize(),[i,n]=t;0===e.length&&[0,1].map((t=>{const o=this.device.createTexture({sampler:{minFilter:"linear",magFilter:"linear"},width:i,height:n});e.push(this.device.createFramebuffer({id:"deck-renderbuffer-"+t,colorAttachments:[o]}))}));for(const o of e)o.resize(t)}_postRender(e,t){const{renderBuffers:i}=this,n=Object.assign({},t,{inputBuffer:i[0],swapBuffer:i[1]});for(const o of e)if(o.postRender){n.target=o.id===this.lastPostProcessEffect?t.target:void 0;const e=o.postRender(n);n.inputBuffer=e,n.swapBuffer=e===i[0]?i[1]:i[0]}}}const O={pickedColor:null,pickedObjectIndex:-1};function L(e){let{pickedColors:t,decodePickingColor:i,deviceX:n,deviceY:o,deviceRadius:s,deviceRect:r}=e;const{x:a,y:l,width:c,height:d}=r;let h=s*s,p=-1,g=0;for(let u=0;u<d;u++){const e=u+l-o,i=e*e;if(i>h)g+=4*c;else for(let o=0;o<c;o++){if(t[g+3]-1>=0){const e=o+a-n,t=e*e+i;t<=h&&(h=t,p=g)}g+=4}}if(p>=0){const e=t.slice(p,p+4),n=i(e);if(n){const t=Math.floor(p/4/c),i=p/4-t*c;return Object.assign({},n,{pickedColor:e,pickedX:a+i,pickedY:l+t})}u.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}return O}function I(e){let{pickedColors:t,decodePickingColor:i}=e;const n=new Map;if(t)for(let o=0;o<t.length;o+=4){if(t[o+3]-1>=0){const e=t.slice(o,o+4),s=e.join(",");if(!n.has(s)){const t=i(e);t?n.set(s,Object.assign({},t,{color:e})):u.A.error("Picked non-existent layer. Is picking buffer corrupt?")()}}}return Array.from(n.values())}function R(e){let t,{pickInfo:i,viewports:n,pixelRatio:o,x:s,y:r,z:a}=e,l=n[0];if(n.length>1&&(l=function(e,t){for(let i=e.length-1;i>=0;i--){const n=e[i];if(n.containsPixel(t))return n}return e[0]}((null==i?void 0:i.pickedViewports)||n,{x:s,y:r})),l){const e=[s-l.x,r-l.y];void 0!==a&&(e[2]=a),t=l.unproject(e)}return{color:null,layer:null,viewport:l,index:-1,picked:!1,x:s,y:r,pixel:[s,r],coordinate:t,devicePixel:i&&"pickedX"in i?[i.pickedX,i.pickedY]:void 0,pixelRatio:o}}function k(e){const{pickInfo:t,lastPickedInfo:i,mode:n,layers:o}=e,{pickedColor:s,pickedLayer:r,pickedObjectIndex:a}=t,l=r?[r]:[];if("hover"===n){const e=i.index,t=i.layerId,n=r?r.props.id:null;if(n!==t||a!==e){if(n!==t){const e=o.find((e=>e.props.id===t));e&&l.unshift(e)}i.layerId=n,i.index=a,i.info=null}}const c=R(e),d=new Map;return d.set(null,c),l.forEach((e=>{let t=Object.assign({},c);e===r&&(t.color=s,t.index=a,t.picked=!0),t=z({layer:e,info:t,mode:n});const o=t.layer;e===r&&"hover"===n&&(i.info=t),d.set(o.id,t),"hover"===n&&o.updateAutoHighlight(t)})),d}function z(e){let{layer:t,info:i,mode:n}=e;for(;t&&i;){const e=i.layer||null;i.sourceLayer=e,i.layer=t,i=t.getPickingInfo({info:i,mode:n,sourceLayer:e}),t=t.parent}return i}class D{constructor(e){this._pickable=!0,this.device=e,this.pickLayersPass=new j.A(e),this.lastPickedInfo={index:-1,layerId:null,info:null}}setProps(e){"layerFilter"in e&&(this.layerFilter=e.layerFilter),"_pickable"in e&&(this._pickable=e._pickable)}finalize(){this.pickingFBO&&this.pickingFBO.destroy(),this.depthFBO&&this.depthFBO.destroy()}pickObjectAsync(e){return this._pickClosestObjectAsync(e)}pickObjectsAsync(e){return this._pickVisibleObjectsAsync(e)}pickObject(e){return this._pickClosestObject(e)}pickObjects(e){return this._pickVisibleObjects(e)}getLastPickedObject(e,t){let{x:i,y:n,layers:o,viewports:s}=e;void 0===t&&(t=this.lastPickedInfo.info);const r=t&&t.layer&&t.layer.id,a=t&&t.viewport&&t.viewport.id,l=r?o.find((e=>e.id===r)):null,c=a&&s.find((e=>e.id===a))||s[0],d=c&&c.unproject([i-c.x,n-c.y]),h={x:i,y:n,viewport:c,coordinate:d,layer:l};return Object.assign({},t,h)}_resizeBuffer(){var e,t;if(!this.pickingFBO&&(this.pickingFBO=this.device.createFramebuffer({colorAttachments:["rgba8unorm"],depthStencilAttachment:"depth16unorm"}),this.device.isTextureFormatRenderable("rgba32float"))){const e=this.device.createFramebuffer({colorAttachments:["rgba32float"],depthStencilAttachment:"depth16unorm"});this.depthFBO=e}const{canvas:i}=this.device.getDefaultCanvasContext();null==(e=this.pickingFBO)||e.resize({width:i.width,height:i.height}),null==(t=this.depthFBO)||t.resize({width:i.width,height:i.height})}_getPickable(e){if(!1===this._pickable)return null;const t=e.filter((e=>this.pickLayersPass.shouldDrawLayer(e)&&!e.isComposite));return t.length?t:null}async _pickClosestObjectAsync(e){let{layers:t,views:i,viewports:n,x:o,y:s,radius:r=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:h}=e;const u=this.device.canvasContext.cssToDeviceRatio(),p=this._getPickable(t);if(!p||0===n.length)return{result:[],emptyInfo:R({viewports:n,x:o,y:s,pixelRatio:u})};this._resizeBuffer();const g=this.device.canvasContext.cssToDevicePixels([o,s],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(r*u),{width:v,height:y}=this.pickingFBO,_=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:v,deviceHeight:y}),w={x:o-r,y:s-r,width:2*r+1,height:2*r+1};let b;const x=[],P=new Set;for(let S=0;S<a;S++){let e,t;if(_){const t=this._drawAndSample({layers:p,views:i,viewports:n,onViewportActive:d,deviceRect:_,cullRect:w,effects:h,pass:"picking:"+l});e=L(Object.assign({},t,{deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:_}))}else e={pickedColor:null,pickedObjectIndex:-1};if(e.pickedLayer&&c&&this.depthFBO){const{pickedColors:o}=this._drawAndSample({layers:[e.pickedLayer],views:i,viewports:n,onViewportActive:d,deviceRect:{x:e.pickedX,y:e.pickedY,width:1,height:1},cullRect:w,effects:h,pass:"picking:"+l+":z"},!0);o[3]&&(t=o[0])}e.pickedLayer&&S+1<a&&(P.add(e.pickedLayer),e.pickedLayer.disablePickingIndex(e.pickedObjectIndex)),b=k({pickInfo:e,lastPickedInfo:this.lastPickedInfo,mode:l,layers:p,viewports:n,x:o,y:s,z:t,pixelRatio:u});for(const i of b.values())i.layer&&x.push(i);if(!e.pickedColor)break}for(const S of P)S.restorePickingColors();return{result:x,emptyInfo:b.get(null)}}_pickClosestObject(e){let{layers:t,views:i,viewports:n,x:o,y:s,radius:r=0,depth:a=1,mode:l="query",unproject3D:c,onViewportActive:d,effects:h}=e;const u=this.device.canvasContext.cssToDeviceRatio(),p=this._getPickable(t);if(!p||0===n.length)return{result:[],emptyInfo:R({viewports:n,x:o,y:s,pixelRatio:u})};this._resizeBuffer();const g=this.device.canvasContext.cssToDevicePixels([o,s],!0),f=[g.x+Math.floor(g.width/2),g.y+Math.floor(g.height/2)],m=Math.round(r*u),{width:v,height:y}=this.pickingFBO,_=this._getPickingRect({deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceWidth:v,deviceHeight:y}),w={x:o-r,y:s-r,width:2*r+1,height:2*r+1};let b;const x=[],P=new Set;for(let S=0;S<a;S++){let e,t;if(_){const t=this._drawAndSample({layers:p,views:i,viewports:n,onViewportActive:d,deviceRect:_,cullRect:w,effects:h,pass:"picking:"+l});e=L(Object.assign({},t,{deviceX:f[0],deviceY:f[1],deviceRadius:m,deviceRect:_}))}else e={pickedColor:null,pickedObjectIndex:-1};if(e.pickedLayer&&c&&this.depthFBO){const{pickedColors:o}=this._drawAndSample({layers:[e.pickedLayer],views:i,viewports:n,onViewportActive:d,deviceRect:{x:e.pickedX,y:e.pickedY,width:1,height:1},cullRect:w,effects:h,pass:"picking:"+l+":z"},!0);o[3]&&(t=o[0])}e.pickedLayer&&S+1<a&&(P.add(e.pickedLayer),e.pickedLayer.disablePickingIndex(e.pickedObjectIndex)),b=k({pickInfo:e,lastPickedInfo:this.lastPickedInfo,mode:l,layers:p,viewports:n,x:o,y:s,z:t,pixelRatio:u});for(const i of b.values())i.layer&&x.push(i);if(!e.pickedColor)break}for(const S of P)S.restorePickingColors();return{result:x,emptyInfo:b.get(null)}}async _pickVisibleObjectsAsync(e){let{layers:t,views:i,viewports:n,x:o,y:s,width:r=1,height:a=1,mode:l="query",maxObjects:c=null,onViewportActive:d,effects:h}=e;const u=this._getPickable(t);if(!u||0===n.length)return[];this._resizeBuffer();const p=this.device.canvasContext.cssToDeviceRatio(),g=this.device.canvasContext.cssToDevicePixels([o,s],!0),f=g.x,m=g.y+g.height,v=this.device.canvasContext.cssToDevicePixels([o+r,s+a],!0),y=v.x+v.width,_=v.y,w={x:f,y:_,width:y-f,height:m-_},b=I(this._drawAndSample({layers:u,views:i,viewports:n,onViewportActive:d,deviceRect:w,cullRect:{x:o,y:s,width:r,height:a},effects:h,pass:"picking:"+l})),x=new Map,P=[],S=Number.isFinite(c);for(let A=0;A<b.length;A++){var C;if(S&&P.length>=c)break;const e=b[A];let t={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:o,y:s,pixelRatio:p};t=z({layer:e.pickedLayer,info:t,mode:l});const i=t.layer.id;x.has(i)||x.set(i,new Set);const n=x.get(i),r=null!=(C=t.object)?C:t.index;n.has(r)||(n.add(r),P.push(t))}return P}_pickVisibleObjects(e){let{layers:t,views:i,viewports:n,x:o,y:s,width:r=1,height:a=1,mode:l="query",maxObjects:c=null,onViewportActive:d,effects:h}=e;const u=this._getPickable(t);if(!u||0===n.length)return[];this._resizeBuffer();const p=this.device.canvasContext.cssToDeviceRatio(),g=this.device.canvasContext.cssToDevicePixels([o,s],!0),f=g.x,m=g.y+g.height,v=this.device.canvasContext.cssToDevicePixels([o+r,s+a],!0),y=v.x+v.width,_=v.y,w={x:f,y:_,width:y-f,height:m-_},b=I(this._drawAndSample({layers:u,views:i,viewports:n,onViewportActive:d,deviceRect:w,cullRect:{x:o,y:s,width:r,height:a},effects:h,pass:"picking:"+l})),x=new Map,P=[],S=Number.isFinite(c);for(let A=0;A<b.length;A++){var C;if(S&&P.length>=c)break;const e=b[A];let t={color:e.pickedColor,layer:null,index:e.pickedObjectIndex,picked:!0,x:o,y:s,pixelRatio:p};t=z({layer:e.pickedLayer,info:t,mode:l});const i=t.layer.id;x.has(i)||x.set(i,new Set);const n=x.get(i),r=null!=(C=t.object)?C:t.index;n.has(r)||(n.add(r),P.push(t))}return P}async _drawAndSampleAsync(e,t){let{layers:i,views:n,viewports:o,onViewportActive:s,deviceRect:r,cullRect:a,effects:l,pass:c}=e;void 0===t&&(t=!1);const d=t?this.depthFBO:this.pickingFBO,h={layers:i,layerFilter:this.layerFilter,views:n,viewports:o,onViewportActive:s,pickingFBO:d,deviceRect:r,cullRect:a,effects:l,pass:c,pickZ:t,preRenderStats:{},isPicking:!0};for(const y of l)y.useInPicking&&(h.preRenderStats[y.id]=y.preRender(h));const{decodePickingColor:u}=this.pickLayersPass.render(h),{x:p,y:g,width:f,height:m}=r,v=new(t?Float32Array:Uint8Array)(f*m*4);return this.device.readPixelsToArrayWebGL(d,{sourceX:p,sourceY:g,sourceWidth:f,sourceHeight:m,target:v}),{pickedColors:v,decodePickingColor:u}}_drawAndSample(e,t){let{layers:i,views:n,viewports:o,onViewportActive:s,deviceRect:r,cullRect:a,effects:l,pass:c}=e;void 0===t&&(t=!1);const d=t?this.depthFBO:this.pickingFBO,h={layers:i,layerFilter:this.layerFilter,views:n,viewports:o,onViewportActive:s,pickingFBO:d,deviceRect:r,cullRect:a,effects:l,pass:c,pickZ:t,preRenderStats:{},isPicking:!0};for(const y of l)y.useInPicking&&(h.preRenderStats[y.id]=y.preRender(h));const{decodePickingColor:u}=this.pickLayersPass.render(h),{x:p,y:g,width:f,height:m}=r,v=new(t?Float32Array:Uint8Array)(f*m*4);return this.device.readPixelsToArrayWebGL(d,{sourceX:p,sourceY:g,sourceWidth:f,sourceHeight:m,target:v}),{pickedColors:v,decodePickingColor:u}}_getPickingRect(e){let{deviceX:t,deviceY:i,deviceRadius:n,deviceWidth:o,deviceHeight:s}=e;const r=Math.max(0,t-n),a=Math.max(0,i-n),l=Math.min(o,t+n+1)-r,c=Math.min(s,i+n+1)-a;return l<=0||c<=0?null:{x:r,y:a,width:l,height:c}}}var N=i(8961);const V={"top-left":{top:0,left:0},"top-right":{top:0,right:0},"bottom-left":{bottom:0,left:0},"bottom-right":{bottom:0,right:0},fill:{top:0,left:0,bottom:0,right:0}},U="top-left",F="__root";class B{constructor(e){let{deck:t,parentElement:i}=e;this.defaultWidgets=[],this.widgets=[],this.resolvedWidgets=[],this.containers={},this.lastViewports={},this.deck=t,null==i||i.classList.add("deck-widget-container"),this.parentElement=i}getWidgets(){return this.resolvedWidgets}setProps(e){if(e.widgets&&!(0,b.b)(e.widgets,this.widgets,1)){const t=e.widgets.filter(Boolean);this._setWidgets(t)}}finalize(){for(const e of this.getWidgets())this._removeWidget(e);this.defaultWidgets.length=0,this.resolvedWidgets.length=0;for(const e in this.containers)this.containers[e].remove()}addDefault(e){this.defaultWidgets.find((t=>t.id===e.id))||(this._addWidget(e),this.defaultWidgets.push(e),this._setWidgets(this.widgets))}onRedraw(e){let{viewports:t,layers:i}=e;const n=t.reduce(((e,t)=>(e[t.id]=t,e)),{});for(const o of this.getWidgets()){const{viewId:e}=o;if(e){const t=n[e];t&&(o.onViewportChange&&o.onViewportChange(t),null==o.onRedraw||o.onRedraw({viewports:[t],layers:i}))}else{if(o.onViewportChange)for(const e of t)o.onViewportChange(e);null==o.onRedraw||o.onRedraw({viewports:t,layers:i})}}this.lastViewports=n,this._updateContainers()}onHover(e,t){for(const n of this.getWidgets()){var i;const{viewId:o}=n;o&&o!==(null==(i=e.viewport)?void 0:i.id)||null==n.onHover||n.onHover(e,t)}}onEvent(e,t){const i=N.tg[t.type];if(i)for(const s of this.getWidgets()){var n;const{viewId:r}=s;var o;if(!r||r===(null==(n=e.viewport)?void 0:n.id))null==(o=s[i])||o.call(s,e,t)}}_setWidgets(e){const t={};for(const i of this.resolvedWidgets)t[i.id]=i;this.resolvedWidgets.length=0;for(const i of this.defaultWidgets)t[i.id]=null,this.resolvedWidgets.push(i);for(let i of e){const e=t[i.id];e?e.viewId!==i.viewId||e.placement!==i.placement?(this._removeWidget(e),this._addWidget(i)):i!==e&&(e.setProps(i.props),i=e):this._addWidget(i),t[i.id]=null,this.resolvedWidgets.push(i)}for(const i in t){const e=t[i];e&&this._removeWidget(e)}this.widgets=e}_addWidget(e){const{viewId:t=null,placement:i=U}=e;e.widgetManager=this,e.deck=this.deck,e.rootElement=e._onAdd({deck:this.deck,viewId:t}),e.rootElement&&this._getContainer(t,i).append(e.rootElement),e.updateHTML()}_removeWidget(e){null==e.onRemove||e.onRemove(),e.rootElement&&e.rootElement.remove(),e.rootElement=void 0,e.deck=void 0,e.widgetManager=void 0}_getContainer(e,t){const i=e||F;let n=this.containers[i];var o;n||(n=document.createElement("div"),n.style.pointerEvents="none",n.style.position="absolute",n.style.overflow="hidden",null==(o=this.parentElement)||o.append(n),this.containers[i]=n);let s=n.querySelector("."+t);return s||(s=globalThis.document.createElement("div"),s.className=t,s.style.position="absolute",s.style.zIndex="2",Object.assign(s.style,V[t]),n.append(s)),s}_updateContainers(){const e=this.deck.width,t=this.deck.height;for(const i in this.containers){const n=this.lastViewports[i]||null,o=i===F||n,s=this.containers[i];o?(s.style.display="block",s.style.left=(n?n.x:0)+"px",s.style.top=(n?n.y:0)+"px",s.style.width=(n?n.width:e)+"px",s.style.height=(n?n.height:t)+"px"):s.style.display="none"}}}var W=i(16770);const G={zIndex:"1",position:"absolute",pointerEvents:"none",color:"#a0a7b4",backgroundColor:"#29323c",padding:"10px",top:"0",left:"0",display:"none"};class H extends W.x{constructor(e){void 0===e&&(e={}),super(e),this.id="default-tooltip",this.placement="fill",this.className="deck-tooltip",this.isVisible=!1,this.setProps(e)}onCreateRootElement(){const e=document.createElement("div");return e.className=this.className,Object.assign(e.style,G),e}onRenderHTML(e){}onViewportChange(e){var t;this.isVisible&&e.id===(null==(t=this.lastViewport)?void 0:t.id)&&e!==this.lastViewport&&this.setTooltip(null)}onHover(e){const{deck:t}=this,i=t&&t.props.getTooltip;if(!i)return;const n=i(e);this.lastViewport=e.viewport,this.setTooltip(n,e.x,e.y)}setTooltip(e,t,i){const n=this.rootElement;if(n){if("string"==typeof e)n.innerText=e;else{if(!e)return this.isVisible=!1,void(n.style.display="none");e.text&&(n.innerText=e.text),e.html&&(n.innerHTML=e.html),e.className&&(n.className=e.className)}this.isVisible=!0,n.style.display="block",n.style.transform="translate("+t+"px, "+i+"px)",e&&"object"==typeof e&&"style"in e&&Object.assign(n.style,e.style)}}}H.defaultProps=Object.assign({},W.x.defaultProps);var K=i(81052),Y=i(5223),Z=i(8045);const q={dataType:null,batchType:null,id:"JSON",name:"JSON",module:"",version:"",options:{},extensions:["json","geojson"],mimeTypes:["application/json","application/geo+json"],testText:function(e){const t=e[0],i=e[e.length-1];return"{"===t&&"}"===i||"["===t&&"]"===i},parseTextSync:JSON.parse};const J=function(){const e="9.2.1",t=globalThis.deck&&globalThis.deck.VERSION;if(t&&t!==e)throw new Error("deck.gl - multiple versions detected: "+t+" vs "+e);return t||(u.A.log(1,"deck.gl "+e)(),globalThis.deck=Object.assign({},globalThis.deck,{VERSION:e,version:e,log:u.A,_registerLoggers:p.k}),(0,Y.mk)([q,[Z.$,{imagebitmap:{premultiplyAlpha:"none"}}]])),e}();var X=i(95850),$=i(16370),Q=i(59658),ee=i(7853),te=i(95238);function ie(){}const ne={id:"",width:"100%",height:"100%",style:null,viewState:null,initialViewState:null,pickingRadius:0,layerFilter:null,parameters:{},parent:null,device:null,deviceProps:{},gl:null,canvas:null,layers:[],effects:[],views:null,controller:null,useDevicePixels:!0,touchAction:"none",eventRecognizerOptions:{},_framebuffer:null,_animate:!1,_pickable:!0,_typedArrayManagerProps:{},_customRender:null,widgets:[],onDeviceInitialized:ie,onWebGLInitialized:ie,onResize:ie,onViewStateChange:ie,onInteractionStateChange:ie,onBeforeRender:ie,onAfterRender:ie,onLoad:ie,onError:e=>u.A.error(e.message,e.cause)(),onHover:null,onClick:null,onDragStart:null,onDrag:null,onDragEnd:null,_onMetrics:null,getCursor:e=>{let{isDragging:t}=e;return t?"grabbing":"grab"},getTooltip:null,debug:!1,drawPickingColors:!1};class oe{constructor(e){this.width=0,this.height=0,this.userData={},this.device=null,this.canvas=null,this.viewManager=null,this.layerManager=null,this.effectManager=null,this.deckRenderer=null,this.deckPicker=null,this.eventManager=null,this.widgetManager=null,this.tooltip=null,this.animationLoop=null,this.cursorState={isHovering:!1,isDragging:!1},this.stats=new f.A({id:"deck.gl"}),this.metrics={fps:0,setPropsTime:0,updateAttributesTime:0,framesRedrawn:0,pickTime:0,pickCount:0,gpuTime:0,gpuTimePerFrame:0,cpuTime:0,cpuTimePerFrame:0,bufferMemory:0,textureMemory:0,renderbufferMemory:0,gpuMemory:0},this._metricsCounter=0,this._needsRedraw="Initial render",this._pickRequest={mode:"hover",x:-1,y:-1,radius:0,event:null},this._lastPointerDownInfo=null,this._onPointerMove=e=>{const{_pickRequest:t}=this;if("pointerleave"===e.type)t.x=-1,t.y=-1,t.radius=0;else{if(e.leftButton||e.rightButton)return;{const i=e.offsetCenter;if(!i)return;t.x=i.x,t.y=i.y,t.radius=this.props.pickingRadius}}this.layerManager&&(this.layerManager.context.mousePosition={x:t.x,y:t.y}),t.event=e},this._onEvent=e=>{const t=N.tg[e.type],i=e.offsetCenter;if(!t||!i||!this.layerManager)return;const n=this.layerManager.getLayers(),o=this.deckPicker.getLastPickedObject({x:i.x,y:i.y,layers:n,viewports:this.getViewports(i)},this._lastPointerDownInfo),{layer:s}=o,r=s&&(s[t]||s.props[t]),a=this.props[t];let l=!1;r&&(l=r.call(s,o,e)),l||(null==a||a(o,e),this.widgetManager.onEvent(o,e))},this._onPointerDown=e=>{var t;if("webgpu"===(null==(t=this.device)?void 0:t.type))return;const i=e.offsetCenter,n=this._pick("pickObject","pickObject Time",{x:i.x,y:i.y,radius:this.props.pickingRadius});this._lastPointerDownInfo=n.result[0]||n.emptyInfo},this.props=Object.assign({},ne,e),(e=this.props).viewState&&e.initialViewState&&u.A.warn("View state tracking is disabled. Use either `initialViewState` for auto update or `viewState` for manual update.")(),this.viewState=this.props.initialViewState,e.device&&(this.device=e.device);let t=this.device;!t&&e.gl&&(e.gl instanceof WebGLRenderingContext&&u.A.error("WebGL1 context not supported.")(),t=$.l.attach(e.gl,this.props.deviceProps)),t||(t=this._createDevice(e)),this.animationLoop=this._createAnimationLoop(t,e),this.setProps(e),e._typedArrayManagerProps&&K.A.setOptions(e._typedArrayManagerProps),this.animationLoop.start()}finalize(){var e,t,i,n,o,s,r,a,l,c;(null==(e=this.animationLoop)||e.stop(),null==(t=this.animationLoop)||t.destroy(),this.animationLoop=null,this._lastPointerDownInfo=null,null==(i=this.layerManager)||i.finalize(),this.layerManager=null,null==(n=this.viewManager)||n.finalize(),this.viewManager=null,null==(o=this.effectManager)||o.finalize(),this.effectManager=null,null==(s=this.deckRenderer)||s.finalize(),this.deckRenderer=null,null==(r=this.deckPicker)||r.finalize(),this.deckPicker=null,null==(a=this.eventManager)||a.destroy(),this.eventManager=null,null==(l=this.widgetManager)||l.finalize(),this.widgetManager=null,this.props.canvas||this.props.device||this.props.gl||!this.canvas)||(null==(c=this.canvas.parentElement)||c.removeChild(this.canvas),this.canvas=null)}setProps(e){var t,i,n;this.stats.get("setProps Time").timeStart(),"onLayerHover"in e&&u.A.removed("onLayerHover","onHover")(),"onLayerClick"in e&&u.A.removed("onLayerClick","onClick")(),e.initialViewState&&!(0,b.b)(this.props.initialViewState,e.initialViewState,3)&&(this.viewState=e.initialViewState),Object.assign(this.props,e),this._setCanvasSize(this.props);const o=Object.create(this.props);if(Object.assign(o,{views:this._getViews(),width:this.width,height:this.height,viewState:this._getViewState()}),e.device&&e.device.id!==(null==(t=this.device)?void 0:t.id)){var s,r,a,l;if(null==(s=this.animationLoop)||s.stop(),this.canvas!==(null==(r=e.device.canvasContext)?void 0:r.canvas))null==(a=this.canvas)||a.remove(),null==(l=this.eventManager)||l.destroy(),this.canvas=null;u.A.log("recreating animation loop for new device! id="+e.device.id)(),this.animationLoop=this._createAnimationLoop(e.device,e),this.animationLoop.start()}if(null==(i=this.animationLoop)||i.setProps(o),void 0!==e.useDevicePixels&&(null==(n=this.device)||null==(n=n.canvasContext)?void 0:n.canvas)instanceof HTMLCanvasElement){this.device.canvasContext.props.useDevicePixels=e.useDevicePixels;const t=this.device.canvasContext.canvas,i={target:t,contentBoxSize:[{inlineSize:t.clientWidth,blockSize:t.clientHeight}],devicePixelContentBoxSize:[{inlineSize:t.clientWidth,blockSize:t.clientHeight}],borderBoxSize:[{inlineSize:t.clientWidth,blockSize:t.clientHeight}]};this.device.canvasContext._handleResize([i])}this.layerManager&&(this.viewManager.setProps(o),this.layerManager.activateViewport(this.getViewports()[0]),this.layerManager.setProps(o),this.effectManager.setProps(o),this.deckRenderer.setProps(o),this.deckPicker.setProps(o),this.widgetManager.setProps(o)),this.stats.get("setProps Time").timeEnd()}needsRedraw(e){if(void 0===e&&(e={clearRedrawFlags:!1}),!this.layerManager)return!1;if(this.props._animate)return"Deck._animate";let t=this._needsRedraw;e.clearRedrawFlags&&(this._needsRedraw=!1);const i=this.viewManager.needsRedraw(e),n=this.layerManager.needsRedraw(e),o=this.effectManager.needsRedraw(e),s=this.deckRenderer.needsRedraw(e);return t=t||i||n||o||s,t}redraw(e){if(!this.layerManager)return;let t=this.needsRedraw({clearRedrawFlags:!0});t=e||t,t&&(this.stats.get("Redraw Count").incrementCount(),this.props._customRender?this.props._customRender(t):this._drawLayers(t))}get isInitialized(){return null!==this.viewManager}getViews(){return(0,te.A)(this.viewManager),this.viewManager.views}getViewports(e){return(0,te.A)(this.viewManager),this.viewManager.getViewports(e)}getCanvas(){return this.canvas}pickObject(e){const t=this._pick("pickObject","pickObject Time",e).result;return t.length?t[0]:null}pickMultipleObjects(e){return e.depth=e.depth||10,this._pick("pickObject","pickMultipleObjects Time",e).result}pickObjects(e){return this._pick("pickObjects","pickObjects Time",e)}_addResources(e,t){void 0===t&&(t=!1);for(const i in e)this.layerManager.resourceManager.add({resourceId:i,data:e[i],forceUpdate:t})}_removeResources(e){for(const t of e)this.layerManager.resourceManager.remove(t)}_addDefaultEffect(e){this.effectManager.addDefaultEffect(e)}_addDefaultShaderModule(e){this.layerManager.addDefaultShaderModule(e)}_removeDefaultShaderModule(e){var t;null==(t=this.layerManager)||t.removeDefaultShaderModule(e)}_pick(e,t,i){(0,te.A)(this.deckPicker);const{stats:n}=this;n.get("Pick Count").incrementCount(),n.get(t).timeStart();const o=this.deckPicker[e](Object.assign({layers:this.layerManager.getLayers(i),views:this.viewManager.getViews(),viewports:this.getViewports(i),onViewportActive:this.layerManager.activateViewport,effects:this.effectManager.getEffects()},i));return n.get(t).timeEnd(),o}_createCanvas(e){let t=e.canvas;if("string"==typeof t&&(t=document.getElementById(t),(0,te.A)(t)),!t){t=document.createElement("canvas"),t.id=e.id||"deckgl-overlay",e.width&&"number"==typeof e.width&&(t.width=e.width),e.height&&"number"==typeof e.height&&(t.height=e.height);(e.parent||document.body).appendChild(t)}return Object.assign(t.style,e.style),t}_setCanvasSize(e){if(!this.canvas)return;const{width:t,height:i}=e;if(t||0===t){const e=Number.isFinite(t)?t+"px":t;this.canvas.style.width=e}if(i||0===i){var n;const t=Number.isFinite(i)?i+"px":i;this.canvas.style.position=(null==(n=e.style)?void 0:n.position)||"absolute",this.canvas.style.height=t}}_updateCanvasSize(){var e,t;const{canvas:i}=this;if(!i)return;const n=null!=(e=i.clientWidth)?e:i.width,o=null!=(t=i.clientHeight)?t:i.height;var s,r;n===this.width&&o===this.height||(this.width=n,this.height=o,null==(s=this.viewManager)||s.setProps({width:n,height:o}),null==(r=this.layerManager)||r.activateViewport(this.getViewports()[0]),this.props.onResize({width:n,height:o}))}_createAnimationLoop(e,t){const{gl:i,onError:n}=t;return new Q.F({device:e,autoResizeDrawingBuffer:!i,autoResizeViewport:!1,onInitialize:e=>this._setDevice(e.device),onRender:this._onRenderFrame.bind(this),onError:n})}_createDevice(e){var t,i;const n=null==(t=this.props.deviceProps)?void 0:t.createCanvasContext,o="object"==typeof n?n:void 0,s=Object.assign({adapters:[]},e.deviceProps);s.adapters.includes($.l)||s.adapters.push($.l);const r={alphaMode:"webgpu"===(null==(i=this.props.deviceProps)?void 0:i.type)?"premultiplied":void 0};return X.a.createDevice(Object.assign({_reuseDevices:!0,type:"webgl"},s,{createCanvasContext:Object.assign({},r,o,{canvas:this._createCanvas(e),useDevicePixels:this.props.useDevicePixels,autoResize:!0})}))}_getViewState(){return this.props.viewState||this.viewState}_getViews(){const{views:e}=this.props,t=Array.isArray(e)?e:e?[e]:[new P.A({id:"default-view"})];return t.length&&this.props.controller&&(t[0].props.controller=this.props.controller),t}_onContextLost(){const{onError:e}=this.props;this.animationLoop&&e&&e(new Error("WebGL context is lost"))}_pickAndCallback(){var e;if("webgpu"===(null==(e=this.device)?void 0:e.type))return;const{_pickRequest:t}=this;if(t.event){const{result:e,emptyInfo:s}=this._pick("pickObject","pickObject Time",t);this.cursorState.isHovering=e.length>0;let r=s,a=!1;for(const n of e){var i;r=n,a=(null==(i=n.layer)?void 0:i.onHover(n,t.event))||a}var n,o;if(!a)null==(n=(o=this.props).onHover)||n.call(o,r,t.event),this.widgetManager.onHover(r,t.event);t.event=null}}_updateCursor(){const e=this.props.parent||this.canvas;e&&(e.style.cursor=this.props.getCursor(this.cursorState))}_setDevice(e){var t,i;if(this.device=e,!this.animationLoop)return;this.canvas||(this.canvas=null==(i=this.device.canvasContext)?void 0:i.canvas,!this.canvas.isConnected&&this.props.parent&&this.props.parent.insertBefore(this.canvas,this.props.parent.firstChild));"webgl"===this.device.type&&this.device.setParametersWebGL({blend:!0,blendFunc:[770,771,1,771],polygonOffsetFill:!0,depthTest:!0,depthFunc:515}),this.props.onDeviceInitialized(this.device),"webgl"===this.device.type&&this.props.onWebGLInitialized(this.device.gl);const o=new n.K;o.play(),this.animationLoop.attachTimeline(o),this.eventManager=new ee.EU(this.props.parent||this.canvas,{touchAction:this.props.touchAction,recognizers:Object.keys(N.We).map((e=>{var t;const[i,n,o,s]=N.We[e],r=null==(t=this.props.eventRecognizerOptions)?void 0:t[e];return{recognizer:new i(Object.assign({},n,r,{event:e})),recognizeWith:o,requestFailure:s}})),events:{pointerdown:this._onPointerDown,pointermove:this._onPointerMove,pointerleave:this._onPointerMove}});for(const n in N.tg)this.eventManager.on(n,this._onEvent);this.viewManager=new x({timeline:o,eventManager:this.eventManager,onViewStateChange:this._onViewStateChange.bind(this),onInteractionStateChange:this._onInteractionStateChange.bind(this),views:this._getViews(),viewState:this._getViewState(),width:this.width,height:this.height});const s=this.viewManager.getViewports()[0];this.layerManager=new w(this.device,{deck:this,stats:this.stats,viewport:s,timeline:o}),this.effectManager=new A({deck:this,device:this.device}),this.deckRenderer=new E(this.device),this.deckPicker=new D(this.device),this.widgetManager=new B({deck:this,parentElement:null==(t=this.canvas)?void 0:t.parentElement}),this.widgetManager.addDefault(new H),this.setProps(this.props),this._updateCanvasSize(),this.props.onLoad()}_drawLayers(e,t){var i;const{device:n,gl:o}=this.layerManager.context;this.props.onBeforeRender({device:n,gl:o});const s=Object.assign({target:this.props._framebuffer,layers:this.layerManager.getLayers(),viewports:this.viewManager.getViewports(),onViewportActive:this.layerManager.activateViewport,views:this.viewManager.getViews(),pass:"screen",effects:this.effectManager.getEffects()},t);null==(i=this.deckRenderer)||i.renderLayers(s),"screen"===s.pass&&this.widgetManager.onRedraw({viewports:s.viewports,layers:s.layers}),this.props.onAfterRender({device:n,gl:o})}_onRenderFrame(){var e;this._getFrameStats(),this._metricsCounter++%60==0&&(this._getMetrics(),this.stats.reset(),u.A.table(4,this.metrics)(),this.props._onMetrics&&this.props._onMetrics(this.metrics)),this._updateCanvasSize(),this._updateCursor(),this.layerManager.updateLayers(),"webgpu"!==(null==(e=this.device)?void 0:e.type)&&this._pickAndCallback(),this.redraw(),this.viewManager&&this.viewManager.updateViewStates()}_onViewStateChange(e){const t=this.props.onViewStateChange(e)||e.viewState;this.viewState&&(this.viewState=Object.assign({},this.viewState,{[e.viewId]:t}),this.props.viewState||this.viewManager&&this.viewManager.setProps({viewState:this.viewState}))}_onInteractionStateChange(e){this.cursorState.isDragging=e.isDragging||!1,this.props.onInteractionStateChange(e)}_getFrameStats(){const{stats:e}=this;e.get("frameRate").timeEnd(),e.get("frameRate").timeStart();const t=this.animationLoop.stats;e.get("GPU Time").addTime(t.get("GPU Time").lastTiming),e.get("CPU Time").addTime(t.get("CPU Time").lastTiming)}_getMetrics(){const{metrics:e,stats:t}=this;e.fps=t.get("frameRate").getHz(),e.setPropsTime=t.get("setProps Time").time,e.updateAttributesTime=t.get("Update Attributes").time,e.framesRedrawn=t.get("Redraw Count").count,e.pickTime=t.get("pickObject Time").time+t.get("pickMultipleObjects Time").time+t.get("pickObjects Time").time,e.pickCount=t.get("Pick Count").count,e.gpuTime=t.get("GPU Time").time,e.cpuTime=t.get("CPU Time").time,e.gpuTimePerFrame=t.get("GPU Time").getAverageTime(),e.cpuTimePerFrame=t.get("CPU Time").getAverageTime();const i=X.a.stats.get("Memory Usage");e.bufferMemory=i.get("Buffer Memory").count,e.textureMemory=i.get("Texture Memory").count,e.renderbufferMemory=i.get("Renderbuffer Memory").count,e.gpuMemory=i.get("GPU Memory").count}}oe.defaultProps=ne,oe.VERSION=J;const se=oe},3002:(e,t,i)=>{i.d(t,{A:()=>ne});var n=i(26839),o=i(99871),s=i(8961),r=i(1570),a=i(39976),l=i(54901),c=i(50948);class d extends c.A{get value(){return this._value}_onUpdate(){const{time:e,settings:{fromValue:t,toValue:i,duration:n,easing:o}}=this,s=o(e/n);this._value=(0,l.Cc)(t,i,s)}}const h=1e-5;function u(e,t,i,n,o){const s=t-e;return(i-t)*o+-s*n+s+t}function p(e,t){if(Array.isArray(e)){let i=0;for(let n=0;n<e.length;n++){const o=e[n]-t[n];i+=o*o}return Math.sqrt(i)}return Math.abs(e-t)}class g extends c.A{get value(){return this._currValue}_onUpdate(){const{fromValue:e,toValue:t,damping:i,stiffness:n}=this.settings,{_prevValue:o=e,_currValue:s=e}=this;let r=function(e,t,i,n,o){if(Array.isArray(i)){const s=[];for(let r=0;r<i.length;r++)s[r]=u(e[r],t[r],i[r],n,o);return s}return u(e,t,i,n,o)}(o,s,t,i,n);const a=p(r,t),l=p(r,s);a<h&&l<h&&(r=t,this.end()),this._prevValue=s,this._currValue=r}}var f=i(18120);const m={interpolation:d,spring:g};class v{constructor(e){this.transitions=new Map,this.timeline=e}get active(){return this.transitions.size>0}add(e,t,i,n){const{transitions:o}=this;if(o.has(e)){const i=o.get(e),{value:n=i.settings.fromValue}=i;t=n,this.remove(e)}if(!(n=(0,a.K)(n)))return;const s=m[n.type];if(!s)return void f.A.error("unsupported transition type '"+n.type+"'")();const r=new s(this.timeline);r.start(Object.assign({},n,{fromValue:t,toValue:i})),o.set(e,r)}remove(e){const{transitions:t}=this;t.has(e)&&(t.get(e).cancel(),t.delete(e))}update(){const e={};for(const[t,i]of this.transitions)i.update(),e[t]=i.value,i.inProgress||this.remove(t);return e}clear(){for(const e of this.transitions.keys())this.remove(e)}}var y=i(9649),_=i(95958);function w(e){if(null===(t=e)||"object"!=typeof t)throw new Error("count(): argument not an object");var t;if("function"==typeof e.count)return e.count();if(Number.isFinite(e.size))return e.size;if(Number.isFinite(e.length))return e.length;if(function(e){return null!==e&&"object"==typeof e&&e.constructor===Object}(e))return Object.keys(e).length;throw new Error("count(): argument not a container")}var b=i(95656),x=i(95238),P=i(63190);function S(e,t){if(!t)return e;const i=Object.assign({},e,t);if("defines"in t&&(i.defines=Object.assign({},e.defines,t.defines)),"modules"in t&&(i.modules=(e.modules||[]).concat(t.modules),t.modules.some((e=>"project64"===e.name)))){const e=i.modules.findIndex((e=>"project32"===e.name));e>=0&&i.modules.splice(e,1)}if("inject"in t)if(e.inject){const n=Object.assign({},e.inject);for(const e in t.inject)n[e]=(n[e]||"")+t.inject[e];i.inject=n}else i.inject=t.inject;return i}var C=i(5600),A=i(81052),M=i(33698),T=i(80698);const j={minFilter:"linear",mipmapFilter:"linear",magFilter:"linear",addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge"},E={};var O=i(50111);const L={boolean:{validate:(e,t)=>!0,equal:(e,t,i)=>Boolean(e)===Boolean(t)},number:{validate:(e,t)=>Number.isFinite(e)&&(!("max"in t)||e<=t.max)&&(!("min"in t)||e>=t.min)},color:{validate:(e,t)=>t.optional&&!e||k(e)&&(3===e.length||4===e.length),equal:(e,t,i)=>(0,O.b)(e,t,1)},accessor:{validate(e,t){const i=z(e);return"function"===i||i===z(t.value)},equal:(e,t,i)=>"function"==typeof t||(0,O.b)(e,t,1)},array:{validate:(e,t)=>t.optional&&!e||k(e),equal(e,t,i){const{compare:n}=i,o=Number.isInteger(n)?n:n?1:0;return n?(0,O.b)(e,t,o):e===t}},object:{equal(e,t,i){if(i.ignore)return!0;const{compare:n}=i,o=Number.isInteger(n)?n:n?1:0;return n?(0,O.b)(e,t,o):e===t}},function:{validate:(e,t)=>t.optional&&!e||"function"==typeof e,equal:(e,t,i)=>!i.compare&&!1!==i.ignore||e===t},data:{transform:(e,t,i)=>{if(!e)return e;const{dataTransform:n}=i.props;return n?n(e):"string"==typeof e.shape&&e.shape.endsWith("-table")&&Array.isArray(e.data)?e.data:e}},image:{transform:(e,t,i)=>{const n=i.context;return n&&n.device?function(e,t,i,n){if(i instanceof T.g)return i;i.constructor&&"Object"!==i.constructor.name&&(i={data:i});let o=null;i.compressed&&(o={minFilter:"linear",mipmapFilter:i.data.length>1?"nearest":"linear"});const{width:s,height:r}=i.data,a=t.createTexture(Object.assign({},i,{sampler:Object.assign({},j,o,n),mipLevels:t.getMipLevelCount(s,r)}));return a.generateMipmapsWebGL(),E[a.id]=e,a}(i.id,n.device,e,Object.assign({},t.parameters,i.props.textureParameters)):null},release:(e,t,i)=>{var n,o;n=i.id,(o=e)&&o instanceof T.g&&E[o.id]===n&&(o.delete(),delete E[o.id])}}};function I(e,t){switch(z(t)){case"object":return R(e,t);case"array":return R(e,{type:"array",value:t,compare:!1});case"boolean":return R(e,{type:"boolean",value:t});case"number":return R(e,{type:"number",value:t});case"function":return R(e,{type:"function",value:t,compare:!0});default:return{name:e,type:"unknown",value:t}}}function R(e,t){return"type"in t?Object.assign({name:e},L[t.type],t):"value"in t?Object.assign({name:e,type:z(t.value)},t):{name:e,type:"object",value:t}}function k(e){return Array.isArray(e)||ArrayBuffer.isView(e)}function z(e){return k(e)?"array":null===e?"null":typeof e}const D="_mergedDefaultProps";function N(e,t){if(!(e instanceof G.constructor))return{};let i=D;if(t)for(const o of t){const e=o.constructor;e&&(i+=":"+(e.extensionName||e.name))}const n=F(e,i);return n||(e[i]=function(e,t){const i=e.prototype;if(!i)return null;const n=Object.getPrototypeOf(e),o=N(n),s=F(e,"defaultProps")||{},r=function(e){const t={},i={},n={};for(const[o,s]of Object.entries(e)){const e=null==s?void 0:s.deprecatedFor;if(e)n[o]=Array.isArray(e)?e:[e];else{const e=I(o,s);t[o]=e,i[o]=e.value}}return{propTypes:t,defaultProps:i,deprecatedProps:n}}(s),a=Object.assign(Object.create(null),o,r.defaultProps),l=Object.assign(Object.create(null),null==o?void 0:o[_.fW],r.propTypes),c=Object.assign(Object.create(null),null==o?void 0:o[_.uH],r.deprecatedProps);for(const d of t){const e=N(d.constructor);e&&(Object.assign(a,e),Object.assign(l,e[_.fW]),Object.assign(c,e[_.uH]))}(function(e,t){const i=function(e){const t=e.componentName;t||f.A.warn(e.name+".componentName not specified")();return t||e.name}(t);Object.defineProperties(e,{id:{writable:!0,value:i}})})(a,e),function(e,t){const i={},n={};for(const o in t){const e=t[o],{name:s,value:r}=e;e.async&&(i[s]=r,n[s]=V(s))}e[_.jA]=i,e[_.YN]={},Object.defineProperties(e,n)}(a,l),function(e,t){for(const i in t)Object.defineProperty(e,i,{enumerable:!1,set(e){const n=this.id+": "+i;for(const o of t[i])U(this,o)||(this[o]=e);f.A.deprecated(n,t[i].join("/"))()}})}(a,c),a[_.fW]=l,a[_.uH]=c,0!==t.length||U(e,"_propTypes")||(e._propTypes=l);return a}(e,t||[]))}function V(e){return{enumerable:!0,set(t){"string"==typeof t||t instanceof Promise||(0,M.Td)(t)?this[_.YN][e]=t:this[_.vf][e]=t},get(){if(this[_.vf]){if(e in this[_.vf]){return this[_.vf][e]||this[_.jA][e]}if(e in this[_.YN]){const t=this[_.r3]&&this[_.r3].internalState;if(t&&t.hasAsyncProp(e))return t.getAsyncProp(e)||this[_.jA][e]}}return this[_.jA][e]}}}function U(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function F(e,t){return U(e,t)&&e[t]}let B=0;class W{constructor(){for(var e=arguments.length,t=new Array(e),i=0;i<e;i++)t[i]=arguments[i];this.props=function(e,t){let i;for(let s=t.length-1;s>=0;s--){const e=t[s];"extensions"in e&&(i=e.extensions)}const n=N(e.constructor,i),o=Object.create(n);o[_.r3]=e,o[_.YN]={},o[_.vf]={};for(let s=0;s<t.length;++s){const e=t[s];for(const t in e)o[t]=e[t]}return Object.freeze(o),o}(this,t),this.id=this.props.id,this.count=B++}clone(e){const{props:t}=this,i={};for(const n in t[_.jA])n in t[_.vf]?i[n]=t[_.vf][n]:n in t[_.YN]&&(i[n]=t[_.YN][n]);return new this.constructor(Object.assign({},t,i,e))}}W.componentName="Component",W.defaultProps={};const G=W;var H=i(19495);const K=Object.freeze({});class Y{constructor(e){this.component=e,this.asyncProps={},this.onAsyncPropUpdated=()=>{},this.oldProps=null,this.oldAsyncProps=null}finalize(){for(const e in this.asyncProps){const t=this.asyncProps[e];t&&t.type&&t.type.release&&t.type.release(t.resolvedValue,t.type,this.component)}this.asyncProps={},this.component=null,this.resetOldProps()}getOldProps(){return this.oldAsyncProps||this.oldProps||K}resetOldProps(){this.oldAsyncProps=null,this.oldProps=this.component?this.component.props:null}hasAsyncProp(e){return e in this.asyncProps}getAsyncProp(e){const t=this.asyncProps[e];return t&&t.resolvedValue}isAsyncPropLoading(e){if(e){const t=this.asyncProps[e];return Boolean(t&&t.pendingLoadCount>0&&t.pendingLoadCount!==t.resolvedLoadCount)}for(const t in this.asyncProps)if(this.isAsyncPropLoading(t))return!0;return!1}reloadAsyncProp(e,t){this._watchPromise(e,Promise.resolve(t))}setAsyncProps(e){this.component=e[_.r3]||this.component;const t=e[_.vf]||{},i=e[_.YN]||e,n=e[_.jA]||{};for(const o in t){const e=t[o];this._createAsyncPropData(o,n[o]),this._updateAsyncProp(o,e),t[o]=this.getAsyncProp(o)}for(const o in i){const e=i[o];this._createAsyncPropData(o,n[o]),this._updateAsyncProp(o,e)}}_fetch(e,t){return null}_onResolve(e,t){}_onError(e,t){}_updateAsyncProp(e,t){this._didAsyncInputValueChange(e,t)&&("string"==typeof t&&(t=this._fetch(e,t)),t instanceof Promise?this._watchPromise(e,t):(0,M.Td)(t)?this._resolveAsyncIterable(e,t):this._setPropValue(e,t))}_freezeAsyncOldProps(){if(!this.oldAsyncProps&&this.oldProps){this.oldAsyncProps=Object.create(this.oldProps);for(const e in this.asyncProps)Object.defineProperty(this.oldAsyncProps,e,{enumerable:!0,value:this.oldProps[e]})}}_didAsyncInputValueChange(e,t){const i=this.asyncProps[e];return t!==i.resolvedValue&&t!==i.lastValue&&(i.lastValue=t,!0)}_setPropValue(e,t){this._freezeAsyncOldProps();const i=this.asyncProps[e];i&&(t=this._postProcessValue(i,t),i.resolvedValue=t,i.pendingLoadCount++,i.resolvedLoadCount=i.pendingLoadCount)}_setAsyncPropValue(e,t,i){const n=this.asyncProps[e];n&&i>=n.resolvedLoadCount&&void 0!==t&&(this._freezeAsyncOldProps(),n.resolvedValue=t,n.resolvedLoadCount=i,this.onAsyncPropUpdated(e,t))}_watchPromise(e,t){const i=this.asyncProps[e];if(i){i.pendingLoadCount++;const n=i.pendingLoadCount;t.then((t=>{this.component&&(t=this._postProcessValue(i,t),this._setAsyncPropValue(e,t,n),this._onResolve(e,t))})).catch((t=>{this._onError(e,t)}))}}async _resolveAsyncIterable(e,t){if("data"!==e)return void this._setPropValue(e,t);const i=this.asyncProps[e];if(!i)return;i.pendingLoadCount++;const n=i.pendingLoadCount;let o=[],s=0;var r,a=!1,l=!1;try{for(var c,d=(0,H.A)(t);a=!(c=await d.next()).done;a=!1){const t=c.value;{if(!this.component)return;const{dataTransform:i}=this.component.props;o=i?i(t,o):o.concat(t),Object.defineProperty(o,"__diff",{enumerable:!1,value:[{startRow:s,endRow:o.length}]}),s=o.length,this._setAsyncPropValue(e,o,n)}}}catch(h){l=!0,r=h}finally{try{a&&null!=d.return&&await d.return()}finally{if(l)throw r}}this._onResolve(e,o)}_postProcessValue(e,t){const i=e.type;return i&&this.component&&(i.release&&i.release(e.resolvedValue,i,this.component),i.transform)?i.transform(t,i,this.component):t}_createAsyncPropData(e,t){if(!this.asyncProps[e]){const i=this.component&&this.component.props[_.fW];this.asyncProps[e]={type:i&&i[e],lastValue:null,resolvedValue:t,pendingLoadCount:0,resolvedLoadCount:0}}}}class Z extends Y{constructor(e){let{attributeManager:t,layer:i}=e;super(i),this.attributeManager=t,this.needsRedraw=!0,this.needsUpdate=!0,this.subLayers=null,this.usesPickingColorCache=!1}get layer(){return this.component}_fetch(e,t){const i=this.layer,n=null==i?void 0:i.props.fetch;return n?n(t,{propName:e,layer:i}):super._fetch(e,t)}_onResolve(e,t){const i=this.layer;if(i){const n=i.props.onDataLoad;"data"===e&&n&&n(t,{propName:e,layer:i})}}_onError(e,t){const i=this.layer;i&&i.raiseError(t,"loading "+e+" of "+this.layer)}}var q=i(73279),J=i(327);const X=2**24-1,$=Object.freeze([]),Q=(0,P.A)((e=>{let{oldViewport:t,viewport:i}=e;return t.equals(i)}));let ee=new Uint8ClampedArray(0);const te={data:{type:"data",value:$,async:!0},dataComparator:{type:"function",value:null,optional:!0},_dataDiff:{type:"function",value:e=>e&&e.__diff,optional:!0},dataTransform:{type:"function",value:null,optional:!0},onDataLoad:{type:"function",value:null,optional:!0},onError:{type:"function",value:null,optional:!0},fetch:{type:"function",value:(e,t)=>{let{propName:i,layer:n,loaders:o,loadOptions:s,signal:r}=t;const{resourceManager:a}=n.context;var l;(s=s||n.getLoadOptions(),o=o||n.props.loaders,r)&&(s=Object.assign({},s,{fetch:Object.assign({},null==(l=s)?void 0:l.fetch,{signal:r})}));let c=a.contains(e);return c||s||(a.add({resourceId:e,data:(0,J.H)(e,o),persistent:!1}),c=!0),c?a.subscribe({resourceId:e,onChange:e=>{var t;return null==(t=n.internalState)?void 0:t.reloadAsyncProp(i,e)},consumerId:n.id,requestId:i}):(0,J.H)(e,o,s)}},updateTriggers:{},visible:!0,pickable:!1,opacity:{type:"number",min:0,max:1,value:1},operation:"draw",onHover:{type:"function",value:null,optional:!0},onClick:{type:"function",value:null,optional:!0},onDragStart:{type:"function",value:null,optional:!0},onDrag:{type:"function",value:null,optional:!0},onDragEnd:{type:"function",value:null,optional:!0},coordinateSystem:s.rf.DEFAULT,coordinateOrigin:{type:"array",value:[0,0,0],compare:!0},modelMatrix:{type:"array",value:null,compare:!0,optional:!0},wrapLongitude:!1,positionFormat:"XYZ",colorFormat:"RGBA",parameters:{type:"object",value:{},optional:!0,compare:2},loadOptions:{type:"object",value:null,optional:!0,ignore:!0},transitions:null,extensions:[],loaders:{type:"array",value:[],optional:!0,ignore:!0},getPolygonOffset:{type:"function",value:e=>{let{layerIndex:t}=e;return[0,100*-t]}},highlightedObjectIndex:null,autoHighlight:!1,highlightColor:{type:"accessor",value:[0,0,128,128]}};class ie extends G{constructor(){super(...arguments),this.internalState=null,this.lifecycle=_.VD.NO_STATE,this.parent=null}static get componentName(){return Object.prototype.hasOwnProperty.call(this,"layerName")?this.layerName:""}get root(){let e=this;for(;e.parent;)e=e.parent;return e}toString(){return(this.constructor.layerName||this.constructor.name)+"({id: '"+this.props.id+"'})"}project(e){(0,x.A)(this.internalState);const t=this.internalState.viewport||this.context.viewport,i=(0,C.w)(e,{viewport:t,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem}),[n,o,s]=(0,q.VJ)(i,t.pixelProjectionMatrix);return 2===e.length?[n,o]:[n,o,s]}unproject(e){(0,x.A)(this.internalState);return(this.internalState.viewport||this.context.viewport).unproject(e)}projectPosition(e,t){(0,x.A)(this.internalState);const i=this.internalState.viewport||this.context.viewport;return(0,C.R)(e,Object.assign({viewport:i,modelMatrix:this.props.modelMatrix,coordinateOrigin:this.props.coordinateOrigin,coordinateSystem:this.props.coordinateSystem},t))}get isComposite(){return!1}get isDrawable(){return!0}setState(e){this.setChangeFlags({stateChanged:!0}),Object.assign(this.state,e),this.setNeedsRedraw()}setNeedsRedraw(){this.internalState&&(this.internalState.needsRedraw=!0)}setNeedsUpdate(){this.internalState&&(this.context.layerManager.setNeedsUpdate(String(this)),this.internalState.needsUpdate=!0)}get isLoaded(){return!!this.internalState&&!this.internalState.isAsyncPropLoading()}get wrapLongitude(){return this.props.wrapLongitude}isPickable(){return this.props.pickable&&this.props.visible}getModels(){const e=this.state;return e&&(e.models||e.model&&[e.model])||[]}setShaderModuleProps(){for(const e of this.getModels())e.shaderInputs.setProps(...arguments)}getAttributeManager(){return this.internalState&&this.internalState.attributeManager}getCurrentLayer(){return this.internalState&&this.internalState.layer}getLoadOptions(){return this.props.loadOptions}use64bitPositions(){const{coordinateSystem:e}=this.props;return e===s.rf.DEFAULT||e===s.rf.LNGLAT||e===s.rf.CARTESIAN}onHover(e,t){return this.props.onHover&&this.props.onHover(e,t)||!1}onClick(e,t){return this.props.onClick&&this.props.onClick(e,t)||!1}nullPickingColor(){return[0,0,0]}encodePickingColor(e,t){return void 0===t&&(t=[]),t[0]=e+1&255,t[1]=e+1>>8&255,t[2]=e+1>>8>>8&255,t}decodePickingColor(e){(0,x.A)(e instanceof Uint8Array);const[t,i,n]=e;return t+256*i+65536*n-1}getNumInstances(){return Number.isFinite(this.props.numInstances)?this.props.numInstances:this.state&&void 0!==this.state.numInstances?this.state.numInstances:w(this.props.data)}getStartIndices(){return this.props.startIndices?this.props.startIndices:this.state&&this.state.startIndices?this.state.startIndices:null}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["positions","instancePositions"])}getShaders(e){e=S(e,{disableWarnings:!0,modules:this.context.defaultShaderModules});for(const t of this.props.extensions)e=S(e,t.getShaders.call(this,t));return e}shouldUpdateState(e){return e.changeFlags.propsOrDataChanged}updateState(e){const t=this.getAttributeManager(),{dataChanged:i}=e.changeFlags;if(i&&t)if(Array.isArray(i))for(const n of i)t.invalidateAll(n);else t.invalidateAll();if(t){const{props:i}=e,n=this.internalState.hasPickingBuffer,o=Number.isInteger(i.highlightedObjectIndex)||i.pickable||i.extensions.some((e=>e.getNeedsPickingBuffer.call(this,e)));if(n!==o){this.internalState.hasPickingBuffer=o;const{pickingColors:e,instancePickingColors:i}=t.attributes,n=e||i;n&&(o&&n.constant&&(n.constant=!1,t.invalidate(n.id)),n.value||o||(n.constant=!0,n.value=[0,0,0]))}}}finalizeState(e){for(const i of this.getModels())i.destroy();const t=this.getAttributeManager();t&&t.finalize(),this.context&&this.context.resourceManager.unsubscribe({consumerId:this.id}),this.internalState&&(this.internalState.uniformTransitions.clear(),this.internalState.finalize())}draw(e){for(const t of this.getModels())t.draw(e.renderPass)}getPickingInfo(e){let{info:t,mode:i,sourceLayer:n}=e;const{index:o}=t;return o>=0&&Array.isArray(this.props.data)&&(t.object=this.props.data[o]),t}raiseError(e,t){var i,n,o;(t&&(e=new Error(t+": "+e.message,{cause:e})),null!=(i=(n=this.props).onError)&&i.call(n,e))||(null==(o=this.context)||null==o.onError||o.onError(e,this))}getNeedsRedraw(e){return void 0===e&&(e={clearRedrawFlags:!1}),this._getNeedsRedraw(e)}needsUpdate(){return!!this.internalState&&(this.internalState.needsUpdate||this.hasUniformTransition()||this.shouldUpdateState(this._getUpdateParams()))}hasUniformTransition(){var e;return(null==(e=this.internalState)?void 0:e.uniformTransitions.active)||!1}activateViewport(e){if(!this.internalState)return;const t=this.internalState.viewport;this.internalState.viewport=e,t&&Q({oldViewport:t,viewport:e})||(this.setChangeFlags({viewportChanged:!0}),this.isComposite?this.needsUpdate()&&this.setNeedsUpdate():this._update())}invalidateAttribute(e){void 0===e&&(e="all");const t=this.getAttributeManager();t&&("all"===e?t.invalidateAll():t.invalidate(e))}updateAttributes(e){let t=!1;for(const i in e)e[i].layoutChanged()&&(t=!0);for(const i of this.getModels())this._setModelAttributes(i,e,t)}_updateAttributes(){const e=this.getAttributeManager();if(!e)return;const t=this.props,i=this.getNumInstances(),n=this.getStartIndices();e.update({data:t.data,numInstances:i,startIndices:n,props:t,transitions:t.transitions,buffers:t.data.attributes,context:this});const o=e.getChangedAttributes({clearChangedFlags:!0});this.updateAttributes(o)}_updateAttributeTransition(){const e=this.getAttributeManager();e&&e.updateTransition()}_updateUniformTransition(){const{uniformTransitions:e}=this.internalState;if(e.active){const t=e.update(),i=Object.create(this.props);for(const e in t)Object.defineProperty(i,e,{value:t[e]});return i}return this.props}calculateInstancePickingColors(e,t){let{numInstances:i}=t;if(e.constant)return;const n=Math.floor(ee.length/4);if(this.internalState.usesPickingColorCache=!0,n<i){i>X&&f.A.warn("Layer has too many data objects. Picking might not be able to distinguish all objects.")(),ee=A.A.allocate(ee,i,{size:4,copy:!0,maxCount:Math.max(i,X)});const e=Math.floor(ee.length/4),t=[0,0,0];for(let i=n;i<e;i++)this.encodePickingColor(i,t),ee[4*i+0]=t[0],ee[4*i+1]=t[1],ee[4*i+2]=t[2],ee[4*i+3]=0}e.value=ee.subarray(0,4*i)}_setModelAttributes(e,t,i){var o;if(void 0===i&&(i=!1),!Object.keys(t).length)return;if(i){const i=this.getAttributeManager();e.setBufferLayout(i.getBufferLayouts(e)),t=i.getAttributes()}const s=(null==(o=e.userData)?void 0:o.excludeAttributes)||{},r={},a={};for(const l in t){if(s[l])continue;const i=t[l].getValue();for(const o in i){const s=i[o];s instanceof n.h?t[l].settings.isIndexed?e.setIndexBuffer(s):r[o]=s:s&&(a[o]=s)}}e.setAttributes(r),e.setConstantAttributes(a)}disablePickingIndex(e){const t=this.props.data;if(!("attributes"in t))return void this._disablePickingIndex(e);const{pickingColors:i,instancePickingColors:n}=this.getAttributeManager().attributes,o=i||n,s=o&&t.attributes&&t.attributes[o.id];if(s&&s.value){const i=s.value,n=this.encodePickingColor(e);for(let e=0;e<t.length;e++){const t=o.getVertexOffset(e);i[t]===n[0]&&i[t+1]===n[1]&&i[t+2]===n[2]&&this._disablePickingIndex(e)}}else this._disablePickingIndex(e)}_disablePickingIndex(e){const{pickingColors:t,instancePickingColors:i}=this.getAttributeManager().attributes,n=t||i;if(!n)return;const o=n.getVertexOffset(e),s=n.getVertexOffset(e+1);n.buffer.write(new Uint8Array(s-o),o)}restorePickingColors(){const{pickingColors:e,instancePickingColors:t}=this.getAttributeManager().attributes,i=e||t;i&&(this.internalState.usesPickingColorCache&&i.value.buffer!==ee.buffer&&(i.value=ee.subarray(0,i.value.length)),i.updateSubBuffer({startOffset:0}))}_initialize(){(0,x.A)(!this.internalState),(0,x.A)(Number.isFinite(this.props.coordinateSystem)),(0,b.A)("layer.initialize",this);const e=this._getAttributeManager();e&&e.addInstanced({instancePickingColors:{type:"uint8",size:4,noAlloc:!0,update:this.calculateInstancePickingColors}}),this.internalState=new Z({attributeManager:e,layer:this}),this._clearChangeFlags(),this.state={},Object.defineProperty(this.state,"attributeManager",{get:()=>(f.A.deprecated("layer.state.attributeManager","layer.getAttributeManager()")(),e)}),this.internalState.uniformTransitions=new v(this.context.timeline),this.internalState.onAsyncPropUpdated=this._onAsyncPropUpdated.bind(this),this.internalState.setAsyncProps(this.props),this.initializeState(this.context);for(const t of this.props.extensions)t.initializeState.call(this,this.context,t);this.setChangeFlags({dataChanged:"init",propsChanged:"init",viewportChanged:!0,extensionsChanged:!0}),this._update()}_transferState(e){(0,b.A)("layer.matched",this,this===e);const{state:t,internalState:i}=e;this!==e&&(this.internalState=i,this.state=t,this.internalState.setAsyncProps(this.props),this._diffProps(this.props,this.internalState.getOldProps()))}_update(){const e=this.needsUpdate();if((0,b.A)("layer.update",this,e),!e)return;const t=this.props,i=this.context,n=this.internalState,o=i.viewport,s=this._updateUniformTransition();n.propsInTransition=s,i.viewport=n.viewport||o,this.props=s;try{const e=this._getUpdateParams(),t=this.getModels();if(i.device)this.updateState(e);else try{this.updateState(e)}catch(r){}for(const i of this.props.extensions)i.updateState.call(this,e,i);this.setNeedsRedraw(),this._updateAttributes();const n=this.getModels()[0]!==t[0];this._postUpdate(e,n)}finally{i.viewport=o,this.props=t,this._clearChangeFlags(),n.needsUpdate=!1,n.resetOldProps()}}_finalize(){(0,b.A)("layer.finalize",this),this.finalizeState(this.context);for(const e of this.props.extensions)e.finalizeState.call(this,this.context,e)}_drawLayer(e){let{renderPass:t,shaderModuleProps:i=null,uniforms:n={},parameters:s={}}=e;this._updateAttributeTransition();const r=this.props,a=this.context;this.props=this.internalState.propsInTransition||r;try{i&&this.setShaderModuleProps(i);const{getPolygonOffset:e}=this.props,r=e&&e(n)||[0,0];a.device instanceof o.WebGLDevice&&a.device.setParametersWebGL({polygonOffset:r});for(const t of this.getModels())"webgpu"===t.device.type?t.setParameters(Object.assign({},t.parameters,s)):t.setParameters(s);if(a.device instanceof o.WebGLDevice)a.device.withParametersWebGL(s,(()=>{const e={renderPass:t,shaderModuleProps:i,uniforms:n,parameters:s,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}));else{const e={renderPass:t,shaderModuleProps:i,uniforms:n,parameters:s,context:a};for(const t of this.props.extensions)t.draw.call(this,e,t);this.draw(e)}}finally{this.props=r}}getChangeFlags(){var e;return null==(e=this.internalState)?void 0:e.changeFlags}setChangeFlags(e){if(!this.internalState)return;const{changeFlags:t}=this.internalState;for(const n in e)if(e[n]){let i=!1;if("dataChanged"===n){const o=e[n],s=t[n];o&&Array.isArray(s)&&(t.dataChanged=Array.isArray(o)?s.concat(o):o,i=!0)}t[n]||(t[n]=e[n],i=!0),i&&(0,b.A)("layer.changeFlag",this,n,e)}const i=Boolean(t.dataChanged||t.updateTriggersChanged||t.propsChanged||t.extensionsChanged);t.propsOrDataChanged=i,t.somethingChanged=i||t.viewportChanged||t.stateChanged}_clearChangeFlags(){this.internalState.changeFlags={dataChanged:!1,propsChanged:!1,updateTriggersChanged:!1,viewportChanged:!1,stateChanged:!1,extensionsChanged:!1,propsOrDataChanged:!1,somethingChanged:!1}}_diffProps(e,t){const i=(0,y.mg)(e,t);if(i.updateTriggersChanged)for(const o in i.updateTriggersChanged)i.updateTriggersChanged[o]&&this.invalidateAttribute(o);if(i.transitionsChanged)for(const o in i.transitionsChanged){var n;this.internalState.uniformTransitions.add(o,t[o],e[o],null==(n=e.transitions)?void 0:n[o])}return this.setChangeFlags(i)}validateProps(){(0,y.zo)(this.props)}updateAutoHighlight(e){this.props.autoHighlight&&!Number.isInteger(this.props.highlightedObjectIndex)&&this._updateAutoHighlight(e)}_updateAutoHighlight(e){const t={highlightedObjectColor:e.picked?e.color:null},{highlightColor:i}=this.props;e.picked&&"function"==typeof i&&(t.highlightColor=i(e)),this.setShaderModuleProps({picking:t}),this.setNeedsRedraw()}_getAttributeManager(){const e=this.context;return new r.A(e.device,{id:this.props.id,stats:e.stats,timeline:e.timeline})}_postUpdate(e,t){const{props:i,oldProps:n}=e,o=this.state.model;null!=o&&o.isInstanced&&o.setInstanceCount(this.getNumInstances());const{autoHighlight:s,highlightedObjectIndex:r,highlightColor:a}=i;if(t||n.autoHighlight!==s||n.highlightedObjectIndex!==r||n.highlightColor!==a){const e={};Array.isArray(a)&&(e.highlightColor=a),(t||n.autoHighlight!==s||r!==n.highlightedObjectIndex)&&(e.highlightedObjectColor=Number.isFinite(r)&&r>=0?this.encodePickingColor(r):null),this.setShaderModuleProps({picking:e})}}_getUpdateParams(){return{props:this.props,oldProps:this.internalState.getOldProps(),context:this.context,changeFlags:this.internalState.changeFlags}}_getNeedsRedraw(e){if(!this.internalState)return!1;let t=!1;t=t||this.internalState.needsRedraw&&this.id;const i=this.getAttributeManager(),n=!!i&&i.getNeedsRedraw(e);if(t=t||n,t)for(const o of this.props.extensions)o.onNeedsRedraw.call(this,o);return this.internalState.needsRedraw=this.internalState.needsRedraw&&!e.clearRedrawFlags,t}_onAsyncPropUpdated(){this._diffProps(this.props,this.internalState.getOldProps()),this.setNeedsUpdate()}}ie.defaultProps=te,ie.layerName="Layer";const ne=ie},16770:(e,t,i)=>{i.d(t,{x:()=>s});var n=i(50111),o=i(91013);class s{constructor(e){this.viewId=null,this.props=Object.assign({},this.constructor.defaultProps,e),this.id=this.props.id}setProps(e){const t=this.props,i=this.rootElement;i&&t.className!==e.className&&(t.className&&i.classList.remove(t.className),e.className&&i.classList.add(e.className)),i&&!(0,n.b)(t.style,e.style,1)&&((0,o.h)(i,t.style),(0,o.Z)(i,e.style)),Object.assign(this.props,e),this.updateHTML()}updateHTML(){this.rootElement&&this.onRenderHTML(this.rootElement)}onCreateRootElement(){const e=["deck-widget",this.className,this.props.className],t=document.createElement("div");return e.filter((e=>"string"==typeof e&&e.length>0)).forEach((e=>t.classList.add(e))),(0,o.Z)(t,this.props.style),t}_onAdd(e){var t;return null!=(t=this.onAdd(e))?t:this.onCreateRootElement()}onAdd(e){}onRemove(){}onViewportChange(e){}onRedraw(e){}onHover(e,t){}onClick(e,t){}onDrag(e,t){}onDragStart(e,t){}onDragEnd(e,t){}}s.defaultProps={id:"widget",style:{},className:""}},95958:(e,t,i)=>{i.d(t,{VD:()=>n,YN:()=>l,fW:()=>s,jA:()=>a,r3:()=>o,uH:()=>r,vf:()=>c});const n={NO_STATE:"Awaiting state",MATCHED:"Matched. State transferred from previous layer",INITIALIZED:"Initialized",AWAITING_GC:"Discarded. Awaiting garbage collection",AWAITING_FINALIZATION:"No longer matched. Awaiting garbage collection",FINALIZED:"Finalized! Awaiting garbage collection"},o=Symbol.for("component"),s=Symbol.for("propTypes"),r=Symbol.for("deprecatedProps"),a=Symbol.for("asyncPropDefaults"),l=Symbol.for("asyncPropOriginal"),c=Symbol.for("asyncPropResolved")},9649:(e,t,i)=>{i.d(t,{Me:()=>a,mg:()=>s,zo:()=>o});var n=i(95958);function o(e){const t=e[n.fW];for(const i in t){const n=t[i],{validate:o}=n;if(o&&!o(e[i],n))throw new Error("Invalid prop "+i+": "+e[i])}}function s(e,t){const i=a({newProps:e,oldProps:t,propTypes:e[n.fW],ignoreProps:{data:null,updateTriggers:null,extensions:null,transitions:null}}),o=function(e,t){if(null===t)return"oldProps is null, initial diff";let i=!1;const{dataComparator:n,_dataDiff:o}=e;n?n(e.data,t.data)||(i="Data comparator detected a change"):e.data!==t.data&&(i="A new data container was supplied");i&&o&&(i=o(e.data,t.data)||i);return i}(e,t);let s=!1;return o||(s=function(e,t){if(null===t)return{all:!0};if("all"in e.updateTriggers){if(d(e,t,"all"))return{all:!0}}const i={};let n=!1;for(const o in e.updateTriggers)if("all"!==o){d(e,t,o)&&(i[o]=!0,n=!0)}return!!n&&i}(e,t)),{dataChanged:o,propsChanged:i,updateTriggersChanged:s,extensionsChanged:c(e,t),transitionsChanged:r(e,t)}}function r(e,t){if(!e.transitions)return!1;const i={},o=e[n.fW];let s=!1;for(const n in e.transitions){const r=o[n],a=r&&r.type;("number"===a||"color"===a||"array"===a)&&l(e[n],t[n],r)&&(i[n]=!0,s=!0)}return!!s&&i}function a(e){let{newProps:t,oldProps:i,ignoreProps:n={},propTypes:o={},triggerName:s="props"}=e;if(i===t)return!1;if("object"!=typeof t||null===t)return s+" changed shallowly";if("object"!=typeof i||null===i)return s+" changed shallowly";for(const r of Object.keys(t))if(!(r in n)){if(!(r in i))return s+"."+r+" added";const e=l(t[r],i[r],o[r]);if(e)return s+"."+r+" "+e}for(const r of Object.keys(i))if(!(r in n)){if(!(r in t))return s+"."+r+" dropped";if(!Object.hasOwnProperty.call(t,r)){const e=l(t[r],i[r],o[r]);if(e)return s+"."+r+" "+e}}return!1}function l(e,t,i){let n=i&&i.equal;return n&&!n(e,t,i)?"changed deeply":n||(n=e&&t&&e.equals,!n||n.call(e,t))?n||t===e?null:"changed shallowly":"changed deeply"}function c(e,t){if(null===t)return!0;const i=t.extensions,{extensions:n}=e;if(n===i)return!1;if(!i||!n)return!0;if(n.length!==i.length)return!0;for(let o=0;o<n.length;o++)if(!n[o].equals(i[o]))return!0;return!1}function d(e,t,i){let n=e.updateTriggers[i];n=null==n?{}:n;let o=t.updateTriggers[i];o=null==o?{}:o;return a({oldProps:o,newProps:n,triggerName:i})}},44584:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(39883);class o extends n.A{constructor(){super(...arguments),this._lastRenderIndex=-1}render(e){var t,i,n;const[o,s]=this.device.canvasContext.getDrawingBufferSize(),r=null==(t=e.clearCanvas)||t,a=null!=(i=e.clearColor)?i:!!r&&[0,0,0,0],l=!!r&&1,c=!!r&&0,d=null!=(n=e.colorMask)?n:15,h={viewport:[0,0,o,s]};e.colorMask&&(h.colorMask=d),e.scissorRect&&(h.scissorRect=e.scissorRect);const u=this.device.beginRenderPass({framebuffer:e.target,parameters:h,clearColor:a,clearDepth:l,clearStencil:c});try{return this._drawLayers(u,e)}finally{u.end(),this.device.submit()}}_drawLayers(e,t){const{target:i,shaderModuleProps:n,viewports:o,views:s,onViewportActive:r,clearStack:a=!0}=t;t.pass=t.pass||"unknown",a&&(this._lastRenderIndex=-1);const l=[];for(const c of o){const o=s&&s[c.id];null==r||r(c);const a=this._getDrawLayerParams(c,t),d=c.subViewports||[c];for(const s of d){const r=this._drawLayersInViewport(e,{target:i,shaderModuleProps:n,viewport:s,view:o,pass:t.pass,layers:t.layers},a);l.push(r)}}return l}_getDrawLayerParams(e,t,i){let{layers:n,pass:o,isPicking:r=!1,layerFilter:a,cullRect:l,effects:c,shaderModuleProps:d}=t;void 0===i&&(i=!1);const h=[],u=s(this._lastRenderIndex+1),p={layer:n[0],viewport:e,isPicking:r,renderPass:o,cullRect:l},g={};for(let s=0;s<n.length;s++){const t=n[s],r=this._shouldDrawLayer(t,p,a,g),l={shouldDrawLayer:r};var f;if(r&&!i)l.shouldDrawLayer=!0,l.layerRenderIndex=u(t,r),l.shaderModuleProps=this._getShaderModuleProps(t,c,o,d),l.layerParameters=Object.assign({},null==(f=t.context.deck)?void 0:f.props.parameters,this.getLayerParameters(t,s,e));h[s]=l}return h}_drawLayersInViewport(e,t,i){let{layers:n,shaderModuleProps:o,pass:s,target:r,viewport:a,view:l}=t;const c=function(e,t){var i,n;let{shaderModuleProps:o,target:s,viewport:r}=t;const a=null!=(i=null==o||null==(n=o.project)?void 0:n.devicePixelRatio)?i:e.canvasContext.cssToDeviceRatio(),[,l]=e.canvasContext.getDrawingBufferSize(),c=s?s.height:l,d=r;return[d.x*a,c-(d.y+d.height)*a,d.width*a,d.height*a]}(this.device,{shaderModuleProps:o,target:r,viewport:a});if(l){const{clear:e,clearColor:t,clearDepth:i,clearStencil:n}=l.props;if(e){let e=[0,0,0,0],o=1,s=0;Array.isArray(t)?e=[...t.slice(0,3),t[3]||255].map((e=>e/255)):!1===t&&(e=!1),void 0!==i&&(o=i),void 0!==n&&(s=n);this.device.beginRenderPass({framebuffer:r,parameters:{viewport:c,scissorRect:c},clearColor:e,clearDepth:o,clearStencil:s}).end()}}const d={totalCount:n.length,visibleCount:0,compositeCount:0,pickableCount:0};e.setParameters({viewport:c});for(let u=0;u<n.length;u++){const t=n[u],o=i[u],{shouldDrawLayer:r}=o;if(r&&t.props.pickable&&d.pickableCount++,t.isComposite&&d.compositeCount++,t.isDrawable&&o.shouldDrawLayer){const{layerRenderIndex:i,shaderModuleProps:n,layerParameters:r}=o;d.visibleCount++,this._lastRenderIndex=Math.max(this._lastRenderIndex,i),n.project&&(n.project.viewport=a),t.context.renderPass=e;try{t._drawLayer({renderPass:e,shaderModuleProps:n,uniforms:{layerIndex:i},parameters:r})}catch(h){t.raiseError(h,"drawing "+t+" to "+s)}}}return d}shouldDrawLayer(e){return!0}getShaderModuleProps(e,t,i){return null}getLayerParameters(e,t,i){return e.props.parameters}_shouldDrawLayer(e,t,i,n){if(!(e.props.visible&&this.shouldDrawLayer(e)))return!1;t.layer=e;let o=e.parent;for(;o;){if(!o.props.visible||!o.filterSubLayer(t))return!1;t.layer=o,o=o.parent}if(i){const e=t.layer.id;if(e in n||(n[e]=i(t)),!n[e])return!1}return e.activateViewport(t.viewport),!0}_getShaderModuleProps(e,t,i,n){var o;const s=this.device.canvasContext.cssToDeviceRatio(),a=(null==(o=e.internalState)?void 0:o.propsInTransition)||e.props,l={layer:a,picking:{isActive:!1},project:{viewport:e.context.viewport,devicePixelRatio:s,modelMatrix:a.modelMatrix,coordinateSystem:a.coordinateSystem,coordinateOrigin:a.coordinateOrigin,autoWrapLongitude:e.wrapLongitude}};if(t)for(const c of t)r(l,null==c.getShaderModuleProps?void 0:c.getShaderModuleProps(e,l));return r(l,this.getShaderModuleProps(e,t,l),n)}}function s(e,t){void 0===e&&(e=0),void 0===t&&(t={});const i={},n=(o,r)=>{const a=o.props._offset,l=o.id,c=o.parent&&o.parent.id;let d;if(c&&!(c in t)&&n(o.parent,!1),c in i){const e=i[c]=i[c]||s(t[c],t);d=e(o,r),i[l]=e}else Number.isFinite(a)?(d=a+(t[c]||0),i[l]=null):d=e;return r&&d>=e&&(e=d+1),t[l]=d,d};return n}function r(e){for(var t=arguments.length,i=new Array(t>1?t-1:0),n=1;n<t;n++)i[n-1]=arguments[n];for(const o of i)if(o)for(const t in o)e[t]?Object.assign(e[t],o[t]):e[t]=o[t];return e}},39883:(e,t,i)=>{i.d(t,{A:()=>n});class n{constructor(e,t){void 0===t&&(t={id:"pass"});const{id:i}=t;this.id=i,this.device=e,this.props=Object.assign({},t)}setProps(e){Object.assign(this.props,e)}render(e){}cleanup(){}}},78218:(e,t,i)=>{i.d(t,{A:()=>r});var n=i(44584),o=i(18120);const s={blendColorOperation:"add",blendColorSrcFactor:"one",blendColorDstFactor:"zero",blendAlphaOperation:"add",blendAlphaSrcFactor:"constant",blendAlphaDstFactor:"zero"};class r extends n.A{constructor(){super(...arguments),this._colorEncoderState=null}render(e){return"pickingFBO"in e?this._drawPickingBuffer(e):super.render(e)}_drawPickingBuffer(e){let{layers:t,layerFilter:i,views:n,viewports:o,onViewportActive:s,pickingFBO:r,deviceRect:{x:l,y:c,width:d,height:h},cullRect:u,effects:p,pass:g="picking",pickZ:f,shaderModuleProps:m}=e;this.pickZ=f;const v=this._resetColorEncoder(f),y=[l,c,d,h],_=super.render({target:r,layers:t,layerFilter:i,views:n,viewports:o,onViewportActive:s,cullRect:u,effects:null==p?void 0:p.filter((e=>e.useInPicking)),pass:g,isPicking:!0,shaderModuleProps:m,clearColor:[0,0,0,0],colorMask:15,scissorRect:y});this._colorEncoderState=null;return{decodePickingColor:v&&a.bind(null,v),stats:_}}shouldDrawLayer(e){const{pickable:t,operation:i}=e.props;return t&&i.includes("draw")||i.includes("terrain")||i.includes("mask")}getShaderModuleProps(e,t,i){return{picking:{isActive:1,isAttribute:this.pickZ},lighting:{enabled:!1}}}getLayerParameters(e,t,i){const n=Object.assign({},e.props.parameters),{pickable:r,operation:a}=e.props;return!this._colorEncoderState||a.includes("terrain")?n.blend=!1:r&&a.includes("draw")&&(Object.assign(n,s),n.blend=!0,n.blendColor=function(e,t,i){const{byLayer:n,byAlpha:s}=e;let r,a=n.get(t);a?(a.viewports.push(i),r=a.a):(r=n.size+1,r<=255?(a={a:r,layer:t,viewports:[i]},n.set(t,a),s[r]=a):(o.A.warn("Too many pickable layers, only picking the first 255")(),r=0));return[0,0,0,r/255]}(this._colorEncoderState,e,i)),n}_resetColorEncoder(e){return this._colorEncoderState=e?null:{byLayer:new Map,byAlpha:[]},this._colorEncoderState}}function a(e,t){const i=e.byAlpha[t[3]];return i&&{pickedLayer:i.layer,pickedViewports:i.viewports,pickedObjectIndex:i.layer.decodePickingColor(t)}}},64458:(e,t,i)=>{i.d(t,{A:()=>o});const n="#define SMOOTH_EDGE_RADIUS 0.5",o={name:"geometry",source:"const SMOOTH_EDGE_RADIUS: f32 = 0.5;\n\nstruct VertexGeometry {\n  position: vec4<f32>,\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  normal: vec3<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\nvar<private> geometry_: VertexGeometry = VertexGeometry(\n  vec4<f32>(0.0, 0.0, 1.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0),\n  vec2<f32>(0.0, 0.0),\n  vec3<f32>(0.0, 0.0, 0.0)\n);\n\nstruct FragmentGeometry {\n  uv: vec2<f32>,\n};\n\nvar<private> fragmentGeometry: FragmentGeometry;\n\nfn smoothedge(edge: f32, x: f32) -> f32 {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n",vs:n+"\n\nstruct VertexGeometry {\n  vec4 position;\n  vec3 worldPosition;\n  vec3 worldPositionAlt;\n  vec3 normal;\n  vec2 uv;\n  vec3 pickingColor;\n} geometry = VertexGeometry(\n  vec4(0.0, 0.0, 1.0, 0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec3(0.0),\n  vec2(0.0),\n  vec3(0.0)\n);\n",fs:n+"\n\nstruct FragmentGeometry {\n  vec2 uv;\n} geometry;\n\nfloat smoothedge(float edge, float x) {\n  return smoothstep(edge - SMOOTH_EDGE_RADIUS, edge + SMOOTH_EDGE_RADIUS, x);\n}\n"}},28756:(e,t,i)=>{i.d(t,{A:()=>o});var n=i(49042);const o=Object.assign({},n.q,{defaultUniforms:Object.assign({},n.q.defaultUniforms,{useFloatColors:!1}),inject:{"vs:DECKGL_FILTER_GL_POSITION":"\n    // for picking depth values\n    picking_setPickingAttribute(position.z / position.w);\n  ","vs:DECKGL_FILTER_COLOR":"\n  picking_setPickingColor(geometry.pickingColor);\n  ","fs:DECKGL_FILTER_COLOR":{order:99,injection:"\n  // use highlight color if this fragment belongs to the selected object.\n  color = picking_filterHighlightColor(color);\n\n  // use picking color if rendering to picking FBO.\n  color = picking_filterPickingColor(color);\n    "}}})},5600:(e,t,i)=>{i.d(t,{R:()=>u,w:()=>h});var n=i(8961),o=i(28593),s=i(59073),r=i(39426),a=i(82859),l=i(73279);const c=[0,0,0];function d(e,t,i){void 0===i&&(i=!1);const n=t.projectPosition(e);if(i&&t instanceof s.A){const[i,o,s=0]=e,r=t.getDistanceScales([i,o]);n[2]=s*r.unitsPerMeter[2]}return n}function h(e,t){let{viewport:i,modelMatrix:o,coordinateSystem:s,coordinateOrigin:a,offsetMode:c}=t,[h,u,p=0]=e;switch(o&&([h,u,p]=r.Z0([],[h,u,p,1],o)),s){case n.rf.LNGLAT:return d([h,u,p],i,c);case n.rf.LNGLAT_OFFSETS:return d([h+a[0],u+a[1],p+(a[2]||0)],i,c);case n.rf.METER_OFFSETS:return d((0,l.dT)(a,[h,u,p]),i,c);case n.rf.CARTESIAN:default:return i.isGeospatial?[h+a[0],u+a[1],p+a[2]]:i.projectPosition([h,u,p])}}function u(e,t){const{viewport:i,coordinateSystem:s,coordinateOrigin:r,modelMatrix:l,fromCoordinateSystem:d,fromCoordinateOrigin:u}=function(e){const{viewport:t,modelMatrix:i,coordinateOrigin:o}=e;let{coordinateSystem:s,fromCoordinateSystem:r,fromCoordinateOrigin:a}=e;return s===n.rf.DEFAULT&&(s=t.isGeospatial?n.rf.LNGLAT:n.rf.CARTESIAN),void 0===r&&(r=s),void 0===a&&(a=o),{viewport:t,coordinateSystem:s,coordinateOrigin:o,modelMatrix:i,fromCoordinateSystem:r,fromCoordinateOrigin:a}}(t),{autoOffset:p=!0}=t,{geospatialOrigin:g=c,shaderCoordinateOrigin:f=c,offsetMode:m=!1}=p?(0,o.o)(i,s,r):{},v=h(e,{viewport:i,modelMatrix:l,coordinateSystem:d,coordinateOrigin:u,offsetMode:m});if(m){const e=i.projectPosition(g||f);a.jb(v,v,e)}return v}},40281:(e,t,i)=>{i.d(t,{A:()=>d});var n=i(34938),o=i(64458),s=i(28593),r=i(8961);const a=Object.keys(r.rf).map((e=>"const COORDINATE_SYSTEM_"+e+": i32 = "+r.rf[e]+";")).join("")+"\n"+Object.keys(r.Kx).map((e=>"const PROJECTION_MODE_"+e+": i32 = "+r.Kx[e]+";")).join("")+"\n"+Object.keys(r.p5).map((e=>"const UNIT_"+e.toUpperCase()+": i32 = "+r.p5[e]+";")).join("")+'\n\nconst TILE_SIZE: f32 = 512.0;\nconst PI: f32 = 3.1415926536;\nconst WORLD_SCALE: f32 = TILE_SIZE / (PI * 2.0);\nconst ZERO_64_LOW: vec3<f32> = vec3<f32>(0.0, 0.0, 0.0);\nconst EARTH_RADIUS: f32 = 6370972.0; // meters\nconst GLOBE_RADIUS: f32 = 256.0;\n\n// -----------------------------------------------------------------------------\n// Uniform block (converted from GLSL uniform block)\n// -----------------------------------------------------------------------------\nstruct ProjectUniforms {\n  wrapLongitude: i32,\n  coordinateSystem: i32,\n  commonUnitsPerMeter: vec3<f32>,\n  projectionMode: i32,\n  scale: f32,\n  commonUnitsPerWorldUnit: vec3<f32>,\n  commonUnitsPerWorldUnit2: vec3<f32>,\n  center: vec4<f32>,\n  modelMatrix: mat4x4<f32>,\n  viewProjectionMatrix: mat4x4<f32>,\n  viewportSize: vec2<f32>,\n  devicePixelRatio: f32,\n  focalDistance: f32,\n  cameraPosition: vec3<f32>,\n  coordinateOrigin: vec3<f32>,\n  commonOrigin: vec3<f32>,\n  pseudoMeters: i32,\n};\n\n@group(0) @binding(0)\nvar<uniform> project: ProjectUniforms;\n\n// -----------------------------------------------------------------------------\n// Geometry data\n// (In your GLSL code, "geometry" was assumed to be available globally. In WGSL,\n// you might supply this via vertex attributes or a uniform. Here we define a\n// uniform struct for demonstration.)\n// -----------------------------------------------------------------------------\n\n// Structure to carry additional geometry data used by deck.gl filters.\nstruct Geometry {\n  worldPosition: vec3<f32>,\n  worldPositionAlt: vec3<f32>,\n  position: vec4<f32>,\n  normal: vec3<f32>,\n  uv: vec2<f32>,\n  pickingColor: vec3<f32>,\n};\n\n// @group(0) @binding(1)\nvar<private> geometry: Geometry;\n'+'\n\n// -----------------------------------------------------------------------------\n// Functions\n// -----------------------------------------------------------------------------\n\n// Returns an adjustment factor for commonUnitsPerMeter\nfn _project_size_at_latitude(lat: f32) -> f32 {\n  let y = clamp(lat, -89.9, 89.9);\n  return 1.0 / cos(radians(y));\n}\n\n// Overloaded version: scales a value in meters at a given latitude.\nfn _project_size_at_latitude_m(meters: f32, lat: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * _project_size_at_latitude(lat);\n}\n\n// Computes a non-linear scale factor based on geometry.\n// (Note: This function relies on "geometry" being provided.)\nfn project_size() -> f32 {\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\n      project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\n      project.pseudoMeters == 0) {\n    if (geometry.position.w == 0.0) {\n      return _project_size_at_latitude(geometry.worldPosition.y);\n    }\n    let y: f32 = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\n    let y2 = y * y;\n    let y4 = y2 * y2;\n    let y6 = y4 * y2;\n    return 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n  }\n  return 1.0;\n}\n\n// Overloads to scale offsets (meters to world units)\nfn project_size_float(meters: f32) -> f32 {\n  return meters * project.commonUnitsPerMeter.z * project_size();\n}\n\nfn project_size_vec2(meters: vec2<f32>) -> vec2<f32> {\n  return meters * project.commonUnitsPerMeter.xy * project_size();\n}\n\nfn project_size_vec3(meters: vec3<f32>) -> vec3<f32> {\n  return meters * project.commonUnitsPerMeter * project_size();\n}\n\nfn project_size_vec4(meters: vec4<f32>) -> vec4<f32> {\n  return vec4<f32>(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\n\n// Returns a rotation matrix aligning the z\u2011axis with the given up vector.\nfn project_get_orientation_matrix(up: vec3<f32>) -> mat3x3<f32> {\n  let uz = normalize(up);\n  let ux = select(\n    vec3<f32>(1.0, 0.0, 0.0),\n    normalize(vec3<f32>(uz.y, -uz.x, 0.0)),\n    abs(uz.z) == 1.0\n  );\n  let uy = cross(uz, ux);\n  return mat3x3<f32>(ux, uy, uz);\n}\n\n// Since WGSL does not support "out" parameters, we return a struct.\nstruct RotationResult {\n  needsRotation: bool,\n  transform: mat3x3<f32>,\n};\n\nfn project_needs_rotation(commonPosition: vec3<f32>) -> RotationResult {\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    return RotationResult(true, project_get_orientation_matrix(commonPosition));\n  } else {\n    return RotationResult(false, mat3x3<f32>());  // identity alternative if needed\n  };\n}\n\n// Projects a normal vector from the current coordinate system to world space.\nfn project_normal(vector: vec3<f32>) -> vec3<f32> {\n  let normal_modelspace = project.modelMatrix * vec4<f32>(vector, 0.0);\n  var n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\n  let rotResult = project_needs_rotation(geometry.position.xyz);\n  if (rotResult.needsRotation) {\n    n = rotResult.transform * n;\n  }\n  return n;\n}\n\n// Applies a scale offset based on y-offset (dy)\nfn project_offset_(offset: vec4<f32>) -> vec4<f32> {\n  let dy: f32 = offset.y;\n  let commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\n  return vec4<f32>(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\n\n// Projects lng/lat coordinates to a unit tile [0,1]\nfn project_mercator_(lnglat: vec2<f32>) -> vec2<f32> {\n  var x = lnglat.x;\n  if (project.wrapLongitude != 0) {\n    x = ((x + 180.0) % 360.0) - 180.0;\n  }\n  let y = clamp(lnglat.y, -89.9, 89.9);\n  return vec2<f32>(\n    radians(x) + PI,\n    PI + log(tan(PI * 0.25 + radians(y) * 0.5))\n  ) * WORLD_SCALE;\n}\n\n// Projects lng/lat/z coordinates for a globe projection.\nfn project_globe_(lnglatz: vec3<f32>) -> vec3<f32> {\n  let lambda = radians(lnglatz.x);\n  let phi = radians(lnglatz.y);\n  let cosPhi = cos(phi);\n  let D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\n  return vec3<f32>(\n    sin(lambda) * cosPhi,\n    -cos(lambda) * cosPhi,\n    sin(phi)\n  ) * D;\n}\n\n// Projects positions (with an optional 64-bit low part) from the input\n// coordinate system to the common space.\nfn project_position_vec4_f64(position: vec4<f32>, position64Low: vec3<f32>) -> vec4<f32> {\n  var position_world = project.modelMatrix * position;\n\n  // Work around for a Mac+NVIDIA bug:\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_mercator_(position_world.xy),\n        _project_size_at_latitude_m(position_world.z, position_world.y),\n        position_world.w\n      );\n    }\n    if (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\n      position_world = vec4f(position_world.xyz + project.coordinateOrigin, position_world.w);\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_GLOBE) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      return vec4<f32>(\n        project_globe_(position_world.xyz),\n        position_world.w\n      );\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\n    if (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\n      if (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\n        return vec4<f32>(\n          project_mercator_(position_world.xy) - project.commonOrigin.xy,\n          project_size_float(position_world.z),\n          position_world.w\n        );\n      }\n    }\n  }\n  if (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n      (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n       (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\n        project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\n    position_world = vec4f(position_world.xyz - project.coordinateOrigin, position_world.w);\n  }\n\n  return project_offset_(position_world) +\n         project_offset_(project.modelMatrix * vec4<f32>(position64Low, 0.0));\n}\n\n// Overloaded versions for different input types.\nfn project_position_vec4_f32(position: vec4<f32>) -> vec4<f32> {\n  return project_position_vec4_f64(position, ZERO_64_LOW);\n}\n\nfn project_position_vec3_f64(position: vec3<f32>, position64Low: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), position64Low);\n  return projected_position.xyz;\n}\n\nfn project_position_vec3_f32(position: vec3<f32>) -> vec3<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 1.0), ZERO_64_LOW);\n  return projected_position.xyz;\n}\n\nfn project_position_vec2_f32(position: vec2<f32>) -> vec2<f32> {\n  let projected_position = project_position_vec4_f64(vec4<f32>(position, 0.0, 1.0), ZERO_64_LOW);\n  return projected_position.xy;\n}\n\n// Transforms a common space position to clip space.\nfn project_common_position_to_clipspace_with_projection(position: vec4<f32>, viewProjectionMatrix: mat4x4<f32>, center: vec4<f32>) -> vec4<f32> {\n  return viewProjectionMatrix * position + center;\n}\n\n// Uses the project viewProjectionMatrix and center.\nfn project_common_position_to_clipspace(position: vec4<f32>) -> vec4<f32> {\n  return project_common_position_to_clipspace_with_projection(position, project.viewProjectionMatrix, project.center);\n}\n\n// Returns a clip space offset corresponding to a given number of screen pixels.\nfn project_pixel_size_to_clipspace(pixels: vec2<f32>) -> vec2<f32> {\n  let offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\n  return offset * project.focalDistance;\n}\n\nfn project_meter_size_to_pixel(meters: f32) -> f32 {\n  return project_size_float(meters) * project.scale;\n}\n\nfn project_unit_size_to_pixel(size: f32, unit: i32) -> f32 {\n  if (unit == UNIT_METERS) {\n    return project_meter_size_to_pixel(size);\n  } else if (unit == UNIT_COMMON) {\n    return size * project.scale;\n  }\n  // UNIT_PIXELS: no scaling applied.\n  return size;\n}\n\nfn project_pixel_size_float(pixels: f32) -> f32 {\n  return pixels / project.scale;\n}\n\nfn project_pixel_size_vec2(pixels: vec2<f32>) -> vec2<f32> {\n  return pixels / project.scale;\n}\n',l=Object.keys(r.rf).map((e=>"const int COORDINATE_SYSTEM_"+e+" = "+r.rf[e]+";")).join("")+"\n"+Object.keys(r.Kx).map((e=>"const int PROJECTION_MODE_"+e+" = "+r.Kx[e]+";")).join("")+"\n"+Object.keys(r.p5).map((e=>"const int UNIT_"+e.toUpperCase()+" = "+r.p5[e]+";")).join("")+"\nuniform projectUniforms {\nbool wrapLongitude;\nint coordinateSystem;\nvec3 commonUnitsPerMeter;\nint projectionMode;\nfloat scale;\nvec3 commonUnitsPerWorldUnit;\nvec3 commonUnitsPerWorldUnit2;\nvec4 center;\nmat4 modelMatrix;\nmat4 viewProjectionMatrix;\nvec2 viewportSize;\nfloat devicePixelRatio;\nfloat focalDistance;\nvec3 cameraPosition;\nvec3 coordinateOrigin;\nvec3 commonOrigin;\nbool pseudoMeters;\n} project;\nconst float TILE_SIZE = 512.0;\nconst float PI = 3.1415926536;\nconst float WORLD_SCALE = TILE_SIZE / (PI * 2.0);\nconst vec3 ZERO_64_LOW = vec3(0.0);\nconst float EARTH_RADIUS = 6370972.0;\nconst float GLOBE_RADIUS = 256.0;\nfloat project_size_at_latitude(float lat) {\nfloat y = clamp(lat, -89.9, 89.9);\nreturn 1.0 / cos(radians(y));\n}\nfloat project_size() {\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR &&\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT &&\nproject.pseudoMeters == false) {\nif (geometry.position.w == 0.0) {\nreturn project_size_at_latitude(geometry.worldPosition.y);\n}\nfloat y = geometry.position.y / TILE_SIZE * 2.0 - 1.0;\nfloat y2 = y * y;\nfloat y4 = y2 * y2;\nfloat y6 = y4 * y2;\nreturn 1.0 + 4.9348 * y2 + 4.0587 * y4 + 1.5642 * y6;\n}\nreturn 1.0;\n}\nfloat project_size_at_latitude(float meters, float lat) {\nreturn meters * project.commonUnitsPerMeter.z * project_size_at_latitude(lat);\n}\nfloat project_size(float meters) {\nreturn meters * project.commonUnitsPerMeter.z * project_size();\n}\nvec2 project_size(vec2 meters) {\nreturn meters * project.commonUnitsPerMeter.xy * project_size();\n}\nvec3 project_size(vec3 meters) {\nreturn meters * project.commonUnitsPerMeter * project_size();\n}\nvec4 project_size(vec4 meters) {\nreturn vec4(meters.xyz * project.commonUnitsPerMeter, meters.w);\n}\nmat3 project_get_orientation_matrix(vec3 up) {\nvec3 uz = normalize(up);\nvec3 ux = abs(uz.z) == 1.0 ? vec3(1.0, 0.0, 0.0) : normalize(vec3(uz.y, -uz.x, 0));\nvec3 uy = cross(uz, ux);\nreturn mat3(ux, uy, uz);\n}\nbool project_needs_rotation(vec3 commonPosition, out mat3 transform) {\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\ntransform = project_get_orientation_matrix(commonPosition);\nreturn true;\n}\nreturn false;\n}\nvec3 project_normal(vec3 vector) {\nvec4 normal_modelspace = project.modelMatrix * vec4(vector, 0.0);\nvec3 n = normalize(normal_modelspace.xyz * project.commonUnitsPerMeter);\nmat3 rotation;\nif (project_needs_rotation(geometry.position.xyz, rotation)) {\nn = rotation * n;\n}\nreturn n;\n}\nvec4 project_offset_(vec4 offset) {\nfloat dy = offset.y;\nvec3 commonUnitsPerWorldUnit = project.commonUnitsPerWorldUnit + project.commonUnitsPerWorldUnit2 * dy;\nreturn vec4(offset.xyz * commonUnitsPerWorldUnit, offset.w);\n}\nvec2 project_mercator_(vec2 lnglat) {\nfloat x = lnglat.x;\nif (project.wrapLongitude) {\nx = mod(x + 180., 360.0) - 180.;\n}\nfloat y = clamp(lnglat.y, -89.9, 89.9);\nreturn vec2(\nradians(x) + PI,\nPI + log(tan_fp32(PI * 0.25 + radians(y) * 0.5))\n) * WORLD_SCALE;\n}\nvec3 project_globe_(vec3 lnglatz) {\nfloat lambda = radians(lnglatz.x);\nfloat phi = radians(lnglatz.y);\nfloat cosPhi = cos(phi);\nfloat D = (lnglatz.z / EARTH_RADIUS + 1.0) * GLOBE_RADIUS;\nreturn vec3(\nsin(lambda) * cosPhi,\n-cos(lambda) * cosPhi,\nsin(phi)\n) * D;\n}\nvec4 project_position(vec4 position, vec3 position64Low) {\nvec4 position_world = project.modelMatrix * position;\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_mercator_(position_world.xy),\nproject_size_at_latitude(position_world.z, position_world.y),\nposition_world.w\n);\n}\nif (project.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN) {\nposition_world.xyz += project.coordinateOrigin;\n}\n}\nif (project.projectionMode == PROJECTION_MODE_GLOBE) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nreturn vec4(\nproject_globe_(position_world.xyz),\nposition_world.w\n);\n}\n}\nif (project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT) {\nif (abs(position_world.y - project.coordinateOrigin.y) > 0.25) {\nreturn vec4(\nproject_mercator_(position_world.xy) - project.commonOrigin.xy,\nproject_size(position_world.z),\nposition_world.w\n);\n}\n}\n}\nif (project.projectionMode == PROJECTION_MODE_IDENTITY ||\n(project.projectionMode == PROJECTION_MODE_WEB_MERCATOR_AUTO_OFFSET &&\n(project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_CARTESIAN))) {\nposition_world.xyz -= project.coordinateOrigin;\n}\nreturn project_offset_(position_world) + project_offset_(project.modelMatrix * vec4(position64Low, 0.0));\n}\nvec4 project_position(vec4 position) {\nreturn project_position(position, ZERO_64_LOW);\n}\nvec3 project_position(vec3 position, vec3 position64Low) {\nvec4 projected_position = project_position(vec4(position, 1.0), position64Low);\nreturn projected_position.xyz;\n}\nvec3 project_position(vec3 position) {\nvec4 projected_position = project_position(vec4(position, 1.0), ZERO_64_LOW);\nreturn projected_position.xyz;\n}\nvec2 project_position(vec2 position) {\nvec4 projected_position = project_position(vec4(position, 0.0, 1.0), ZERO_64_LOW);\nreturn projected_position.xy;\n}\nvec4 project_common_position_to_clipspace(vec4 position, mat4 viewProjectionMatrix, vec4 center) {\nreturn viewProjectionMatrix * position + center;\n}\nvec4 project_common_position_to_clipspace(vec4 position) {\nreturn project_common_position_to_clipspace(position, project.viewProjectionMatrix, project.center);\n}\nvec2 project_pixel_size_to_clipspace(vec2 pixels) {\nvec2 offset = pixels / project.viewportSize * project.devicePixelRatio * 2.0;\nreturn offset * project.focalDistance;\n}\nfloat project_size_to_pixel(float meters) {\nreturn project_size(meters) * project.scale;\n}\nfloat project_size_to_pixel(float size, int unit) {\nif (unit == UNIT_METERS) return project_size_to_pixel(size);\nif (unit == UNIT_COMMON) return size * project.scale;\nreturn size;\n}\nfloat project_pixel_size(float pixels) {\nreturn pixels / project.scale;\n}\nvec2 project_pixel_size(vec2 pixels) {\nreturn pixels / project.scale;\n}\n",c={};const d={name:"project",dependencies:[n.i,o.A],source:a,vs:l,getUniforms:function(e){return void 0===e&&(e=c),"viewport"in e?(0,s.a)(e):{}},uniformTypes:{wrapLongitude:"f32",coordinateSystem:"i32",commonUnitsPerMeter:"vec3<f32>",projectionMode:"i32",scale:"f32",commonUnitsPerWorldUnit:"vec3<f32>",commonUnitsPerWorldUnit2:"vec3<f32>",center:"vec4<f32>",modelMatrix:"mat4x4<f32>",viewProjectionMatrix:"mat4x4<f32>",viewportSize:"vec2<f32>",devicePixelRatio:"f32",focalDistance:"f32",cameraPosition:"vec3<f32>",coordinateOrigin:"vec3<f32>",commonOrigin:"vec3<f32>",pseudoMeters:"f32"}}},28593:(e,t,i)=>{i.d(t,{a:()=>g,o:()=>p});var n=i(39426),o=i(90218),s=i(8961),r=i(63190);const a=[0,0,0,0],l=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0],c=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],d=[0,0,0],h=[0,0,0],u=(0,r.A)((function(e){let{viewport:t,devicePixelRatio:i,coordinateSystem:r,coordinateOrigin:h}=e;const{projectionCenter:u,viewProjectionMatrix:g,originCommon:f,cameraPosCommon:m,shaderCoordinateOrigin:v,geospatialOrigin:y}=function(e,t,i){const{viewMatrixUncentered:s,projectionMatrix:r}=e;let{viewMatrix:c,viewProjectionMatrix:d}=e,h=a,u=a,g=e.cameraPosition;const{geospatialOrigin:f,shaderCoordinateOrigin:m,offsetMode:v}=p(e,t,i);v&&(u=e.projectPosition(f||m),g=[g[0]-u[0],g[1]-u[1],g[2]-u[2]],u[3]=1,h=n.Z0([],u,d),c=s||c,d=o.lw([],r,c),d=o.lw([],d,l));return{viewMatrix:c,viewProjectionMatrix:d,projectionCenter:h,originCommon:u,cameraPosCommon:g,shaderCoordinateOrigin:m,geospatialOrigin:f}}(t,r,h),_=t.getDistanceScales(),w=[t.width*i,t.height*i],b=n.Z0([],[0,0,-t.focalDistance,1],t.projectionMatrix)[3]||1,x={coordinateSystem:r,projectionMode:t.projectionMode,coordinateOrigin:v,commonOrigin:f.slice(0,3),center:u,pseudoMeters:Boolean(t._pseudoMeters),viewportSize:w,devicePixelRatio:i,focalDistance:b,commonUnitsPerMeter:_.unitsPerMeter,commonUnitsPerWorldUnit:_.unitsPerMeter,commonUnitsPerWorldUnit2:d,scale:t.scale,wrapLongitude:!1,viewProjectionMatrix:g,modelMatrix:c,cameraPosition:m};if(y){const e=t.getDistanceScales(y);switch(r){case s.rf.METER_OFFSETS:x.commonUnitsPerWorldUnit=e.unitsPerMeter,x.commonUnitsPerWorldUnit2=e.unitsPerMeter2;break;case s.rf.LNGLAT:case s.rf.LNGLAT_OFFSETS:t._pseudoMeters||(x.commonUnitsPerMeter=e.unitsPerMeter),x.commonUnitsPerWorldUnit=e.unitsPerDegree,x.commonUnitsPerWorldUnit2=e.unitsPerDegree2;break;case s.rf.CARTESIAN:x.commonUnitsPerWorldUnit=[1,1,e.unitsPerMeter[2]],x.commonUnitsPerWorldUnit2=[0,0,e.unitsPerMeter2[2]]}}return x}));function p(e,t,i){void 0===i&&(i=h),i.length<3&&(i=[i[0],i[1],0]);let n,o=i,r=!0;switch(n=t===s.rf.LNGLAT_OFFSETS||t===s.rf.METER_OFFSETS?i:e.isGeospatial?[Math.fround(e.longitude),Math.fround(e.latitude),0]:null,e.projectionMode){case s.Kx.WEB_MERCATOR:t!==s.rf.LNGLAT&&t!==s.rf.CARTESIAN||(n=[0,0,0],r=!1);break;case s.Kx.WEB_MERCATOR_AUTO_OFFSET:t===s.rf.LNGLAT?o=n:t===s.rf.CARTESIAN&&(o=[Math.fround(e.center[0]),Math.fround(e.center[1]),0],n=e.unprojectPosition(o),o[0]-=i[0],o[1]-=i[1],o[2]-=i[2]);break;case s.Kx.IDENTITY:o=e.position.map(Math.fround),o[2]=o[2]||0;break;case s.Kx.GLOBE:r=!1,n=null;break;default:r=!1}return{geospatialOrigin:n,shaderCoordinateOrigin:o,offsetMode:r}}function g(e){let{viewport:t,devicePixelRatio:i=1,modelMatrix:n=null,coordinateSystem:o=s.rf.DEFAULT,coordinateOrigin:r=h,autoWrapLongitude:a=!1}=e;o===s.rf.DEFAULT&&(o=t.isGeospatial?s.rf.LNGLAT:s.rf.CARTESIAN);const l=u({viewport:t,devicePixelRatio:i,coordinateSystem:o,coordinateOrigin:r});return l.wrapLongitude=a,l.modelMatrix=n||c,l}},30428:(e,t,i)=>{i.d(t,{A:()=>n});const n={name:"project32",dependencies:[i(40281).A],source:"// Define a structure to hold both the clip-space position and the common position.\nstruct ProjectResult {\n  clipPosition: vec4<f32>,\n  commonPosition: vec4<f32>,\n};\n\n// This function mimics the GLSL version with the 'out' parameter by returning both values.\nfn project_position_to_clipspace_and_commonspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> ProjectResult {\n  // Compute the projected position.\n  let projectedPosition: vec3<f32> = project_position_vec3_f64(position, position64Low);\n\n  // Start with the provided offset.\n  var finalOffset: vec3<f32> = offset;\n\n  // Get whether a rotation is needed and the rotation matrix.\n  let rotationResult = project_needs_rotation(projectedPosition);\n\n  // If rotation is needed, update the offset.\n  if (rotationResult.needsRotation) {\n    finalOffset = rotationResult.transform * offset;\n  }\n\n  // Compute the common position.\n  let commonPosition: vec4<f32> = vec4<f32>(projectedPosition + finalOffset, 1.0);\n\n  // Convert to clip-space.\n  let clipPosition: vec4<f32> = project_common_position_to_clipspace(commonPosition);\n\n  return ProjectResult(clipPosition, commonPosition);\n}\n\n// A convenience overload that returns only the clip-space position.\nfn project_position_to_clipspace(\n    position: vec3<f32>,\n    position64Low: vec3<f32>,\n    offset: vec3<f32>\n) -> vec4<f32> {\n  return project_position_to_clipspace_and_commonspace(position, position64Low, offset).clipPosition;\n}\n",vs:"vec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset, out vec4 commonPosition\n) {\n  vec3 projectedPosition = project_position(position, position64Low);\n  mat3 rotation;\n  if (project_needs_rotation(projectedPosition, rotation)) {\n    // offset is specified as ENU\n    // when in globe projection, rotate offset so that the ground alighs with the surface of the globe\n    offset = rotation * offset;\n  }\n  commonPosition = vec4(projectedPosition + offset, 1.0);\n  return project_common_position_to_clipspace(commonPosition);\n}\n\nvec4 project_position_to_clipspace(\n  vec3 position, vec3 position64Low, vec3 offset\n) {\n  vec4 commonPosition;\n  return project_position_to_clipspace(position, position64Low, offset, commonPosition);\n}\n"}},58662:(e,t,i)=>{i.d(t,{A:()=>a});var n=i(51020),o=i(54901);const s=["longitude","latitude","zoom","bearing","pitch"],r=["longitude","latitude","zoom"];class a extends n.A{constructor(e){void 0===e&&(e={});const t=Array.isArray(e)?e:e.transitionProps,i=Array.isArray(e)?{}:e;i.transitionProps=Array.isArray(t)?{compare:t,required:t}:t||{compare:s,required:r},super(i.transitionProps),this.opts=i}initializeProps(e,t){const i=super.initializeProps(e,t),{makeViewport:n,around:o}=this.opts;if(n&&o){const s=n(e),r=n(t),a=s.unproject(o);i.start.around=o,Object.assign(i.end,{around:r.project(a),aroundPosition:a,width:t.width,height:t.height})}return i}interpolateProps(e,t,i){const n={};for(const s of this._propsToExtract)n[s]=(0,o.Cc)(e[s]||0,t[s]||0,i);if(t.aroundPosition&&this.opts.makeViewport){const s=this.opts.makeViewport(Object.assign({},t,n));Object.assign(n,s.panByPosition(t.aroundPosition,(0,o.Cc)(e.around,t.around,i)))}return n}}},51020:(e,t,i)=>{i.d(t,{A:()=>s});var n=i(54901),o=i(95238);class s{constructor(e){const{compare:t,extract:i,required:n}=e;this._propsToCompare=t,this._propsToExtract=i||t,this._requiredProps=n}arePropsEqual(e,t){for(const i of this._propsToCompare)if(!(i in e)||!(i in t)||!(0,n.aI)(e[i],t[i]))return!1;return!0}initializeProps(e,t){const i={},n={};for(const o of this._propsToExtract)(o in e||o in t)&&(i[o]=e[o],n[o]=t[o]);return this._checkRequiredProps(i),this._checkRequiredProps(n),{start:i,end:n}}getDuration(e,t){return t.transitionDuration}_checkRequiredProps(e){this._requiredProps&&this._requiredProps.forEach((t=>{const i=e[t];(0,o.A)(Number.isFinite(i)||Array.isArray(i),t+" is required for transition")}))}}},50948:(e,t,i)=>{i.d(t,{A:()=>n});class n{constructor(e){this._inProgress=!1,this._handle=null,this.time=0,this.settings={duration:0},this._timeline=e}get inProgress(){return this._inProgress}start(e){var t,i;this.cancel(),this.settings=e,this._inProgress=!0,null==(t=(i=this.settings).onStart)||t.call(i,this)}end(){var e,t;this._inProgress&&(this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1,null==(e=(t=this.settings).onEnd)||e.call(t,this))}cancel(){var e,t;this._inProgress&&(null==(e=(t=this.settings).onInterrupt)||e.call(t,this),this._timeline.removeChannel(this._handle),this._handle=null,this._inProgress=!1)}update(){var e,t;if(!this._inProgress)return!1;if(null===this._handle){const{_timeline:e,settings:t}=this;this._handle=e.addChannel({delay:e.getTime(),duration:t.duration})}return this.time=this._timeline.getTime(this._handle),this._onUpdate(),null==(e=(t=this.settings).onUpdate)||e.call(t,this),this._timeline.isFinished(this._handle)&&this.end(),!0}_onUpdate(){}}},91013:(e,t,i)=>{function n(e,t){t&&Object.entries(t).map((t=>{let[i,n]=t;i.startsWith("--")?e.style.setProperty(i,n):e.style[i]=n}))}function o(e,t){t&&Object.keys(t).map((t=>{t.startsWith("--")?e.style.removeProperty(t):e.style[t]=""}))}i.d(t,{Z:()=>n,h:()=>o})},95238:(e,t,i)=>{function n(e,t){if(!e)throw new Error(t||"deck.gl: assertion failed.")}i.d(t,{A:()=>n})},50111:(e,t,i)=>{function n(e,t,i){if(e===t)return!0;if(!i||!e||!t)return!1;if(Array.isArray(e)){if(!Array.isArray(t)||e.length!==t.length)return!1;for(let o=0;o<e.length;o++)if(!n(e[o],t[o],i-1))return!1;return!0}if(Array.isArray(t))return!1;if("object"==typeof e&&"object"==typeof t){const o=Object.keys(e),s=Object.keys(t);if(o.length!==s.length)return!1;for(const r of o){if(!t.hasOwnProperty(r))return!1;if(!n(e[r],t[r],i-1))return!1}return!0}return!1}i.d(t,{b:()=>n})},13696:(e,t,i)=>{function n(e,t){return void 0===t&&(t=()=>!0),Array.isArray(e)?o(e,t,[]):t(e)?[e]:[]}function o(e,t,i){let n=-1;for(;++n<e.length;){const s=e[n];Array.isArray(s)?o(s,t,i):t(s)&&i.push(s)}return i}function s(e){let{target:t,source:i,start:n=0,count:o=1}=e;const s=i.length,r=o*s;let a=0;for(let l=n;a<s;a++)t[l++]=i[a];for(;a<r;)a<r-a?(t.copyWithin(n+a,n,n+a),a*=2):(t.copyWithin(n+a,n,n+r-a),a=r);return t}i.d(t,{B:()=>n,R:()=>s})},33698:(e,t,i)=>{i.d(t,{I:()=>a,Td:()=>r,X:()=>s});const n=[],o=[];function s(e,t,i){void 0===t&&(t=0),void 0===i&&(i=1/0);let s=n;const r={index:-1,data:e,target:[]};return e?"function"==typeof e[Symbol.iterator]?s=e:e.length>0&&(o.length=e.length,s=o):s=n,(t>0||Number.isFinite(i))&&(s=(Array.isArray(s)?s:Array.from(s)).slice(t,i),r.index=t-1),{iterable:s,objectInfo:r}}function r(e){return e&&e[Symbol.asyncIterator]}function a(e,t){const{size:i,stride:n,offset:o,startIndices:s,nested:r}=t,a=e.BYTES_PER_ELEMENT,l=n?n/a:i,c=o?o/a:0,d=Math.floor((e.length-c)/l);return(t,n)=>{let{index:o,target:a}=n;if(!s){const t=o*l+c;for(let n=0;n<i;n++)a[n]=e[t+n];return a}const h=s[o],u=s[o+1]||d;let p;if(r){p=new Array(u-h);for(let t=h;t<u;t++){const n=t*l+c;a=new Array(i);for(let t=0;t<i;t++)a[t]=e[n+t];p[t-h]=a}}else if(l===i)p=e.subarray(h*i+c,u*i+c);else{p=new e.constructor((u-h)*i);let t=0;for(let n=h;n<u;n++){const o=n*l+c;for(let n=0;n<i;n++)p[t++]=e[o+n]}}return p}}},18120:(e,t,i)=>{i.d(t,{A:()=>n});const n=new(i(85335).t)({id:"deck"})},87350:(e,t,i)=>{i.d(t,{$M:()=>s,Vl:()=>a,_Z:()=>p,cT:()=>u,on:()=>l,zi:()=>r});var n=i(81052),o=i(87597);function s(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}function r(e,t){const i=e%t;return i<0?t+i:i}function a(e){return[e[12],e[13],e[14]]}function l(e){return{left:d(e[3]+e[0],e[7]+e[4],e[11]+e[8],e[15]+e[12]),right:d(e[3]-e[0],e[7]-e[4],e[11]-e[8],e[15]-e[12]),bottom:d(e[3]+e[1],e[7]+e[5],e[11]+e[9],e[15]+e[13]),top:d(e[3]-e[1],e[7]-e[5],e[11]-e[9],e[15]-e[13]),near:d(e[3]+e[2],e[7]+e[6],e[11]+e[10],e[15]+e[14]),far:d(e[3]-e[2],e[7]-e[6],e[11]-e[10],e[15]-e[14])}}const c=new o.P;function d(e,t,i,n){c.set(e,t,i);const s=c.len();return{distance:n/s,normal:new o.P(-e/s,-t/s,-i/s)}}let h;function u(e,t){const{size:i=1,startIndex:o=0}=t,s=void 0!==t.endIndex?t.endIndex:e.length,r=(s-o)/i;h=n.A.allocate(h,r,{type:Float32Array,size:2*i});let a=o,l=0;for(;a<s;){for(let t=0;t<i;t++){const n=e[a++];h[l+t]=n,h[l+t+i]=(c=n)-Math.fround(c)}l+=2*i}var c;return h.subarray(0,r*i*2)}function p(e){let t=null,i=!1;for(const n of e)n&&(t?(i||(t=[[t[0][0],t[0][1]],[t[1][0],t[1][1]]],i=!0),t[0][0]=Math.min(t[0][0],n[0][0]),t[0][1]=Math.min(t[0][1],n[0][1]),t[1][0]=Math.max(t[1][0],n[1][0]),t[1][1]=Math.max(t[1][1],n[1][1])):t=n);return t}},63190:(e,t,i)=>{function n(e,t){if(e===t)return!0;if(Array.isArray(e)){const i=e.length;if(!t||t.length!==i)return!1;for(let n=0;n<i;n++)if(e[n]!==t[n])return!1;return!0}return!1}function o(e){let t,i={};return o=>{for(const s in o)if(!n(o[s],i[s])){t=e(o),i=o;break}return t}}i.d(t,{A:()=>o})},50364:(e,t,i)=>{i.d(t,{A:()=>a});var n=i(33698),o=i(81052),s=i(95238),r=i(26839);class a{constructor(e){this.indexStarts=[0],this.vertexStarts=[0],this.vertexCount=0,this.instanceCount=0;const{attributes:t={}}=e;this.typedArrayManager=o.A,this.attributes={},this._attributeDefs=t,this.opts=e,this.updateGeometry(e)}updateGeometry(e){Object.assign(this.opts,e);const{data:t,buffers:i={},getGeometry:n,geometryBuffer:o,positionFormat:r,dataChanged:a,normalize:l=!0}=this.opts;if(this.data=t,this.getGeometry=n,this.positionSize=o&&o.size||("XY"===r?2:3),this.buffers=i,this.normalize=l,o&&((0,s.A)(t.startIndices),this.getGeometry=this.getGeometryFromBuffer(o),l||(i.vertexPositions=o)),this.geometryBuffer=i.vertexPositions,Array.isArray(a))for(const s of a)this._rebuildGeometry(s);else this._rebuildGeometry()}updatePartialGeometry(e){let{startRow:t,endRow:i}=e;this._rebuildGeometry({startRow:t,endRow:i})}getGeometryFromBuffer(e){const t=e.value||e;return ArrayBuffer.isView(t)?(0,n.I)(t,{size:this.positionSize,offset:e.offset,stride:e.stride,startIndices:this.data.startIndices}):null}_allocate(e,t){const{attributes:i,buffers:n,_attributeDefs:o,typedArrayManager:s}=this;for(const r in o)if(r in n)s.release(i[r]),i[r]=null;else{const n=o[r];n.copy=t,i[r]=s.allocate(i[r],e,n)}}_forEachGeometry(e,t,i){const{data:o,getGeometry:s}=this,{iterable:r,objectInfo:a}=(0,n.X)(o,t,i);for(const n of r){a.index++;e(s?s(n,a):null,a.index)}}_rebuildGeometry(e){if(!this.data)return;let{indexStarts:t,vertexStarts:i,instanceCount:n}=this;const{data:o,geometryBuffer:s}=this,{startRow:a=0,endRow:l=1/0}=e||{},c={};if(e||(t=[0],i=[0]),this.normalize||!s)this._forEachGeometry(((e,t)=>{const n=e&&this.normalizeGeometry(e);c[t]=n,i[t+1]=i[t]+(n?this.getGeometrySize(n):0)}),a,l),n=i[i.length-1];else if(i=o.startIndices,n=i[o.length]||0,ArrayBuffer.isView(s))n=n||s.length/this.positionSize;else if(s instanceof r.h){const e=4*this.positionSize;n=n||s.byteLength/e}else if(s.buffer){const e=s.stride||4*this.positionSize;n=n||s.buffer.byteLength/e}else if(s.value){const e=s.value,t=s.stride/e.BYTES_PER_ELEMENT||this.positionSize;n=n||e.length/t}this._allocate(n,Boolean(e)),this.indexStarts=t,this.vertexStarts=i,this.instanceCount=n;const d={};this._forEachGeometry(((e,o)=>{const s=c[o]||e;d.vertexStart=i[o],d.indexStart=t[o];const r=o<i.length-1?i[o+1]:n;d.geometrySize=r-i[o],d.geometryIndex=o,this.updateGeometryAttributes(s,d)}),a,l),this.vertexCount=t[t.length-1]}}},81052:(e,t,i)=>{i.d(t,{A:()=>n});const n=new class{constructor(e){void 0===e&&(e={}),this._pool=[],this.opts={overAlloc:2,poolSize:100},this.setOptions(e)}setOptions(e){Object.assign(this.opts,e)}allocate(e,t,i){let{size:n=1,type:o,padding:s=0,copy:r=!1,initialize:a=!1,maxCount:l}=i;const c=o||e&&e.constructor||Float32Array,d=t*n+s;if(ArrayBuffer.isView(e)){if(d<=e.length)return e;if(d*e.BYTES_PER_ELEMENT<=e.buffer.byteLength)return new c(e.buffer,0,d)}let h=1/0;l&&(h=l*n+s);const u=this._allocate(c,d,a,h);return e&&r?u.set(e):a||u.fill(0,0,4),this._release(e),u}release(e){this._release(e)}_allocate(e,t,i,n){let o=Math.max(Math.ceil(t*this.opts.overAlloc),1);o>n&&(o=n);const s=this._pool,r=e.BYTES_PER_ELEMENT*o,a=s.findIndex((e=>e.byteLength>=r));if(a>=0){const t=new e(s.splice(a,1)[0],0,o);return i&&t.fill(0),t}return new e(o)}_release(e){if(!ArrayBuffer.isView(e))return;const t=this._pool,{buffer:i}=e,{byteLength:n}=i,o=t.findIndex((e=>e.byteLength>=n));o<0?t.push(i):(o>0||t.length<this.opts.poolSize)&&t.splice(o,0,i),t.length>this.opts.poolSize&&t.shift()}}},43976:(e,t,i)=>{i.d(t,{A:()=>m});var n=i(18120),o=i(87350),s=i(31886),r=i(54901),a=i(87597),l=i(90218),c=i(73279),d=i(8961);const h=Math.PI/180,u=(0,o.$M)(),p=[0,0,0],g={unitsPerMeter:[1,1,1],metersPerUnit:[1,1,1]};class f{constructor(e){void 0===e&&(e={}),this._frustumPlanes={},this.id=e.id||this.constructor.displayName||"viewport",this.x=e.x||0,this.y=e.y||0,this.width=e.width||1,this.height=e.height||1,this.zoom=e.zoom||0,this.padding=e.padding,this.distanceScales=e.distanceScales||g,this.focalDistance=e.focalDistance||1,this.position=e.position||p,this.modelMatrix=e.modelMatrix||null;const{longitude:t,latitude:i}=e;this.isGeospatial=Number.isFinite(i)&&Number.isFinite(t),this._initProps(e),this._initMatrices(e),this.equals=this.equals.bind(this),this.project=this.project.bind(this),this.unproject=this.unproject.bind(this),this.projectPosition=this.projectPosition.bind(this),this.unprojectPosition=this.unprojectPosition.bind(this),this.projectFlat=this.projectFlat.bind(this),this.unprojectFlat=this.unprojectFlat.bind(this)}get subViewports(){return null}get metersPerPixel(){return this.distanceScales.metersPerUnit[2]/this.scale}get projectionMode(){return this.isGeospatial?this.zoom<12?d.Kx.WEB_MERCATOR:d.Kx.WEB_MERCATOR_AUTO_OFFSET:d.Kx.IDENTITY}equals(e){return e instanceof f&&(this===e||e.width===this.width&&e.height===this.height&&e.scale===this.scale&&(0,r.aI)(e.projectionMatrix,this.projectionMatrix)&&(0,r.aI)(e.viewMatrix,this.viewMatrix))}project(e,t){let{topLeft:i=!0}=void 0===t?{}:t;const n=this.projectPosition(e),o=(0,c.VJ)(n,this.pixelProjectionMatrix),[s,r]=o,a=i?r:this.height-r;return 2===e.length?[s,a]:[s,a,o[2]]}unproject(e,t){let{topLeft:i=!0,targetZ:n}=void 0===t?{}:t;const[o,s,r]=e,a=i?s:this.height-s,l=n&&n*this.distanceScales.unitsPerMeter[2],d=(0,c.xJ)([o,a,r],this.pixelUnprojectionMatrix,l),[h,u,p]=this.unprojectPosition(d);return Number.isFinite(r)?[h,u,p]:Number.isFinite(n)?[h,u,n]:[h,u]}projectPosition(e){const[t,i]=this.projectFlat(e);return[t,i,(e[2]||0)*this.distanceScales.unitsPerMeter[2]]}unprojectPosition(e){const[t,i]=this.unprojectFlat(e);return[t,i,(e[2]||0)*this.distanceScales.metersPerUnit[2]]}projectFlat(e){if(this.isGeospatial){const t=(0,c.Gw)(e);return t[1]=(0,r.qE)(t[1],-318,830),t}return e}unprojectFlat(e){return this.isGeospatial?(0,c.iV)(e):e}getBounds(e){void 0===e&&(e={});const t={targetZ:e.z||0},i=this.unproject([0,0],t),n=this.unproject([this.width,0],t),o=this.unproject([0,this.height],t),s=this.unproject([this.width,this.height],t);return[Math.min(i[0],n[0],o[0],s[0]),Math.min(i[1],n[1],o[1],s[1]),Math.max(i[0],n[0],o[0],s[0]),Math.max(i[1],n[1],o[1],s[1])]}getDistanceScales(e){return e&&this.isGeospatial?(0,c.nI)({longitude:e[0],latitude:e[1],highPrecision:!0}):this.distanceScales}containsPixel(e){let{x:t,y:i,width:n=1,height:o=1}=e;return t<this.x+this.width&&this.x<t+n&&i<this.y+this.height&&this.y<i+o}getFrustumPlanes(){return this._frustumPlanes.near||Object.assign(this._frustumPlanes,(0,o.on)(this.viewProjectionMatrix)),this._frustumPlanes}panByPosition(e,t){return null}_initProps(e){const t=e.longitude,i=e.latitude;this.isGeospatial&&(Number.isFinite(e.zoom)||(this.zoom=(0,c.fO)({latitude:i})+Math.log2(this.focalDistance)),this.distanceScales=e.distanceScales||(0,c.nI)({latitude:i,longitude:t}));const n=Math.pow(2,this.zoom);this.scale=n;const{position:o,modelMatrix:r}=e;let l=p;if(o&&(l=r?new s.k(r).transformAsVector(o,[]):o),this.isGeospatial){const e=this.projectPosition([t,i,0]);this.center=new a.P(l).scale(this.distanceScales.unitsPerMeter).add(e)}else this.center=this.projectPosition(l)}_initMatrices(e){const{viewMatrix:t=u,projectionMatrix:i=null,orthographic:c=!1,fovyRadians:d,fovy:p=75,near:g=.1,far:f=1e3,padding:m=null,focalDistance:v=1}=e;this.viewMatrixUncentered=t,this.viewMatrix=(new s.k).multiplyRight(t).translate(new a.P(this.center).negate()),this.projectionMatrix=i||function(e){let{width:t,height:i,orthographic:n,fovyRadians:o,focalDistance:a,padding:l,near:c,far:d}=e;const h=t/i,u=n?(new s.k).orthographic({fovy:o,aspect:h,focalDistance:a,near:c,far:d}):(new s.k).perspective({fovy:o,aspect:h,near:c,far:d});if(l){const{left:e=0,right:n=0,top:o=0,bottom:s=0}=l,a=(0,r.qE)((e+t-n)/2,0,t)-t/2,c=(0,r.qE)((o+i-s)/2,0,i)-i/2;u[8]-=2*a/t,u[9]+=2*c/i}return u}({width:this.width,height:this.height,orthographic:c,fovyRadians:d||p*h,focalDistance:v,padding:m,near:g,far:f});const y=(0,o.$M)();l.lw(y,y,this.projectionMatrix),l.lw(y,y,this.viewMatrix),this.viewProjectionMatrix=y,this.viewMatrixInverse=l.B8([],this.viewMatrix)||this.viewMatrix,this.cameraPosition=(0,o.Vl)(this.viewMatrixInverse);const _=(0,o.$M)(),w=(0,o.$M)();l.hs(_,_,[this.width/2,-this.height/2,1]),l.Tl(_,_,[1,-1,0]),l.lw(w,_,this.viewProjectionMatrix),this.pixelProjectionMatrix=w,this.pixelUnprojectionMatrix=l.B8((0,o.$M)(),this.pixelProjectionMatrix),this.pixelUnprojectionMatrix||n.A.warn("Pixel project matrix not invertible")()}}f.displayName="Viewport";const m=f},59073:(e,t,i)=>{i.d(t,{A:()=>c});var n=i(43976),o=i(73279),s=i(54901),r=i(31886),a=i(83588);class l extends n.A{constructor(e){void 0===e&&(e={});const{latitude:t=0,longitude:i=0,zoom:n=0,pitch:a=0,bearing:l=0,nearZMultiplier:c=.1,farZMultiplier:d=1.01,nearZ:h,farZ:u,orthographic:p=!1,projectionMatrix:g,repeat:f=!1,worldOffset:m=0,position:v,padding:y,legacyMeterSizes:_=!1}=e;let{width:w,height:b,altitude:x=1.5}=e;const P=Math.pow(2,n);let S;w=w||1,b=b||1;let C=null;if(g)x=g[5]/2,S=(0,o.Os)(x);else{let i;if(e.fovy?(S=e.fovy,x=(0,o.wZ)(S)):S=(0,o.Os)(x),y){const{top:e=0,bottom:t=0}=y;i=[0,(0,s.qE)((e+b-t)/2,0,b)-b/2]}C=(0,o.om)({width:w,height:b,scale:P,center:v&&[0,0,v[2]*(0,o.mY)(t)],offset:i,pitch:a,fovy:S,nearZMultiplier:c,farZMultiplier:d}),Number.isFinite(h)&&(C.near=h),Number.isFinite(u)&&(C.far=u)}let A=(0,o.rY)({height:b,pitch:a,bearing:l,scale:P,altitude:x});if(m){A=(new r.k).translate([512*m,0,0]).multiplyLeft(A)}super(Object.assign({},e,{width:w,height:b,viewMatrix:A,longitude:i,latitude:t,zoom:n},C,{fovy:S,focalDistance:x})),this.latitude=t,this.longitude=i,this.zoom=n,this.pitch=a,this.bearing=l,this.altitude=x,this.fovy=S,this.orthographic=p,this._subViewports=f?[]:null,this._pseudoMeters=_,Object.freeze(this)}get subViewports(){if(this._subViewports&&!this._subViewports.length){const e=this.getBounds(),t=Math.floor((e[0]+180)/360),i=Math.ceil((e[2]-180)/360);for(let n=t;n<=i;n++){const e=n?new l(Object.assign({},this,{worldOffset:n})):this;this._subViewports.push(e)}}return this._subViewports}projectPosition(e){if(this._pseudoMeters)return super.projectPosition(e);const[t,i]=this.projectFlat(e);return[t,i,(e[2]||0)*(0,o.mY)(e[1])]}unprojectPosition(e){if(this._pseudoMeters)return super.unprojectPosition(e);const[t,i]=this.unprojectFlat(e);return[t,i,(e[2]||0)/(0,o.mY)(i)]}addMetersToLngLat(e,t){return(0,o.dT)(e,t)}panByPosition(e,t){const i=(0,o.xJ)(t,this.pixelUnprojectionMatrix),n=this.projectFlat(e),s=a.WQ([],n,a.ze([],i)),r=a.WQ([],this.center,s),[l,c]=this.unprojectFlat(r);return{longitude:l,latitude:c}}getBounds(e){void 0===e&&(e={});const t=(0,o.gW)(this,e.z||0);return[Math.min(t[0][0],t[1][0],t[2][0],t[3][0]),Math.min(t[0][1],t[1][1],t[2][1],t[3][1]),Math.max(t[0][0],t[1][0],t[2][0],t[3][0]),Math.max(t[0][1],t[1][1],t[2][1],t[3][1])]}fitBounds(e,t){void 0===t&&(t={});const{width:i,height:n}=this,{longitude:s,latitude:r,zoom:a}=(0,o.Fe)(Object.assign({width:i,height:n,bounds:e},t));return new l({width:i,height:n,longitude:s,latitude:r,zoom:a})}}l.displayName="WebMercatorViewport";const c=l},63201:(e,t,i)=>{i.d(t,{A:()=>a});var n=i(49398),o=i(59073),s=i(67797);class r extends n.A{constructor(e){void 0===e&&(e={}),super(e)}getViewportType(){return o.A}get ControllerType(){return s.A}}r.displayName="MapView";const a=r},49398:(e,t,i)=>{i.d(t,{A:()=>a});const n=/([0-9]+\.?[0-9]*)(%|px)/;function o(e){switch(typeof e){case"number":return{position:e,relative:!1};case"string":const t=n.exec(e);if(t&&t.length>=3){const e="%"===t[2],i=parseFloat(t[1]);return{position:e?i/100:i,relative:e}}default:throw new Error("Could not parse position string "+e)}}function s(e,t){return e.relative?Math.round(e.position*t):e.position}var r=i(50111);class a{constructor(e){const{id:t,x:i=0,y:n=0,width:s="100%",height:r="100%",padding:a=null}=e;this.id=t||this.constructor.displayName||"view",this.props=Object.assign({},e,{id:this.id}),this._x=o(i),this._y=o(n),this._width=o(s),this._height=o(r),this._padding=a&&{left:o(a.left||0),right:o(a.right||0),top:o(a.top||0),bottom:o(a.bottom||0)},this.equals=this.equals.bind(this),Object.seal(this)}equals(e){return this===e||this.constructor===e.constructor&&(0,r.b)(this.props,e.props,2)}clone(e){return new(0,this.constructor)(Object.assign({},this.props,e))}makeViewport(e){let{width:t,height:i,viewState:n}=e;n=this.filterViewState(n);const o=this.getDimensions({width:t,height:i});if(!o.height||!o.width)return null;return new(this.getViewportType(n))(Object.assign({},n,this.props,o))}getViewStateId(){const{viewState:e}=this.props;return"string"==typeof e?e:(null==e?void 0:e.id)||this.id}filterViewState(e){if(this.props.viewState&&"object"==typeof this.props.viewState){if(!this.props.viewState.id)return this.props.viewState;const t=Object.assign({},e);for(const e in this.props.viewState)"id"!==e&&(t[e]=this.props.viewState[e]);return t}return e}getDimensions(e){let{width:t,height:i}=e;const n={x:s(this._x,t),y:s(this._y,i),width:s(this._width,t),height:s(this._height,i)};return this._padding&&(n.padding={left:s(this._padding.left,t),top:s(this._padding.top,i),right:s(this._padding.right,t),bottom:s(this._padding.bottom,i)}),n}get controller(){const e=this.props.controller;return e?!0===e?{type:this.ControllerType}:"function"==typeof e?{type:e}:Object.assign({type:this.ControllerType},e):null}}},34651:(e,t,i)=>{i.d(t,{A:()=>_});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(31338),l=i(37072),c=i(8274),d=i(18120),h=i(25337),u=i(1746);class p extends h.V{constructor(e){const{indices:t,attributes:i}=function(e){const{radius:t,height:i=1,nradial:n=10}=e;let{vertices:o}=e;o&&(d.A.assert(o.length>=n),o=o.flatMap((e=>[e[0],e[1]])),(0,u.UD)(o,u.rJ.COUNTER_CLOCKWISE));const s=i>0,r=n+1,a=s?3*r+1:n,l=2*Math.PI/n,c=new Uint16Array(s?3*n*2:0),h=new Float32Array(3*a),p=new Float32Array(3*a);let g=0;if(s){for(let e=0;e<r;e++){const s=e*l,r=e%n,a=Math.sin(s),c=Math.cos(s);for(let e=0;e<2;e++)h[g+0]=o?o[2*r]:c*t,h[g+1]=o?o[2*r+1]:a*t,h[g+2]=(.5-e)*i,p[g+0]=o?o[2*r]:c,p[g+1]=o?o[2*r+1]:a,g+=3}h[g+0]=h[g-3],h[g+1]=h[g-2],h[g+2]=h[g-1],g+=3}for(let d=s?0:1;d<r;d++){const e=Math.floor(d/2)*Math.sign(.5-d%2),s=e*l,r=(e+n)%n,a=Math.sin(s),c=Math.cos(s);h[g+0]=o?o[2*r]:c*t,h[g+1]=o?o[2*r+1]:a*t,h[g+2]=i/2,p[g+2]=1,g+=3}if(s){let e=0;for(let t=0;t<n;t++)c[e++]=2*t+0,c[e++]=2*t+2,c[e++]=2*t+0,c[e++]=2*t+1,c[e++]=2*t+1,c[e++]=2*t+3}return{indices:c,attributes:{POSITION:{size:3,value:h},NORMAL:{size:3,value:p}}}}(e);super(Object.assign({},e,{indices:t,attributes:i}))}}const g="uniform columnUniforms {\n  float radius;\n  float angle;\n  vec2 offset;\n  bool extruded;\n  bool stroked;\n  bool isStroke;\n  float coverage;\n  float elevationScale;\n  float edgeDistance;\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  highp int radiusUnits;\n  highp int widthUnits;\n} column;\n",f={name:"column",vs:g,fs:g,uniformTypes:{radius:"f32",angle:"f32",offset:"vec2<f32>",extruded:"f32",stroked:"f32",isStroke:"f32",coverage:"f32",elevationScale:"f32",edgeDistance:"f32",widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",radiusUnits:"i32",widthUnits:"i32"}},m=[0,0,0,255],v={diskResolution:{type:"number",min:4,value:20},vertices:null,radius:{type:"number",min:0,value:1e3},angle:{type:"number",value:0},offset:{type:"array",value:[0,0]},coverage:{type:"number",min:0,max:1,value:1},elevationScale:{type:"number",min:0,value:1},radiusUnits:"meters",lineWidthUnits:"meters",lineWidthScale:1,lineWidthMinPixels:0,lineWidthMaxPixels:Number.MAX_SAFE_INTEGER,extruded:!0,wireframe:!1,filled:!0,stroked:!1,flatShading:!1,getPosition:{type:"accessor",value:e=>e.position},getFillColor:{type:"accessor",value:m},getLineColor:{type:"accessor",value:m},getLineWidth:{type:"accessor",value:1},getElevation:{type:"accessor",value:1e3},material:!0,getColor:{deprecatedFor:["getFillColor","getLineColor"]}};class y extends n.A{getShaders(){const e={},{flatShading:t}=this.props;return t&&(e.FLAT_SHADING=1),super.getShaders({vs:"#version 300 es\n#define SHADER_NAME column-layer-vertex-shader\nin vec3 positions;\nin vec3 normals;\nin vec3 instancePositions;\nin float instanceElevations;\nin vec3 instancePositions64Low;\nin vec4 instanceFillColors;\nin vec4 instanceLineColors;\nin float instanceStrokeWidths;\nin vec3 instancePickingColors;\nout vec4 vColor;\n#ifdef FLAT_SHADING\nout vec3 cameraPosition;\nout vec4 position_commonspace;\n#endif\nvoid main(void) {\ngeometry.worldPosition = instancePositions;\nvec4 color = column.isStroke ? instanceLineColors : instanceFillColors;\nmat2 rotationMatrix = mat2(cos(column.angle), sin(column.angle), -sin(column.angle), cos(column.angle));\nfloat elevation = 0.0;\nfloat strokeOffsetRatio = 1.0;\nif (column.extruded) {\nelevation = instanceElevations * (positions.z + 1.0) / 2.0 * column.elevationScale;\n} else if (column.stroked) {\nfloat widthPixels = clamp(\nproject_size_to_pixel(instanceStrokeWidths * column.widthScale, column.widthUnits),\ncolumn.widthMinPixels, column.widthMaxPixels) / 2.0;\nfloat halfOffset = project_pixel_size(widthPixels) / project_size(column.edgeDistance * column.coverage * column.radius);\nif (column.isStroke) {\nstrokeOffsetRatio -= sign(positions.z) * halfOffset;\n} else {\nstrokeOffsetRatio -= halfOffset;\n}\n}\nfloat shouldRender = float(color.a > 0.0 && instanceElevations >= 0.0);\nfloat dotRadius = column.radius * column.coverage * shouldRender;\ngeometry.pickingColor = instancePickingColors;\nvec3 centroidPosition = vec3(instancePositions.xy, instancePositions.z + elevation);\nvec3 centroidPosition64Low = instancePositions64Low;\nvec2 offset = (rotationMatrix * positions.xy * strokeOffsetRatio + column.offset) * dotRadius;\nif (column.radiusUnits == UNIT_METERS) {\noffset = project_size(offset);\n}\nvec3 pos = vec3(offset, 0.);\nDECKGL_FILTER_SIZE(pos, geometry);\ngl_Position = project_position_to_clipspace(centroidPosition, centroidPosition64Low, pos, geometry.position);\ngeometry.normal = project_normal(vec3(rotationMatrix * normals.xy, normals.z));\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (column.extruded && !column.isStroke) {\n#ifdef FLAT_SHADING\ncameraPosition = project.cameraPosition;\nposition_commonspace = geometry.position;\nvColor = vec4(color.rgb, color.a * layer.opacity);\n#else\nvec3 lightColor = lighting_getLightColor(color.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, color.a * layer.opacity);\n#endif\n} else {\nvColor = vec4(color.rgb, color.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME column-layer-fragment-shader\nprecision highp float;\nout vec4 fragColor;\nin vec4 vColor;\n#ifdef FLAT_SHADING\nin vec3 cameraPosition;\nin vec4 position_commonspace;\n#endif\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\n#ifdef FLAT_SHADING\nif (column.extruded && !column.isStroke && !bool(picking.isActive)) {\nvec3 normal = normalize(cross(dFdx(position_commonspace.xyz), dFdy(position_commonspace.xyz)));\nfragColor.rgb = lighting_getLightColor(vColor.rgb, cameraPosition, position_commonspace.xyz, normal);\n}\n#endif\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:e,modules:[o.A,t?a.w:l.J,s.A,f]})}initializeState(){this.getAttributeManager().addInstanced({instancePositions:{size:3,type:"float64",fp64:this.use64bitPositions(),transition:!0,accessor:"getPosition"},instanceElevations:{size:1,transition:!0,accessor:"getElevation"},instanceFillColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getFillColor",defaultValue:m},instanceLineColors:{size:this.props.colorFormat.length,type:"unorm8",transition:!0,accessor:"getLineColor",defaultValue:m},instanceStrokeWidths:{size:1,accessor:"getLineWidth",transition:!0}})}updateState(e){super.updateState(e);const{props:t,oldProps:i,changeFlags:n}=e,o=n.extensionsChanged||t.flatShading!==i.flatShading;var s;o&&(null==(s=this.state.models)||s.forEach((e=>e.destroy())),this.setState(this._getModels()),this.getAttributeManager().invalidateAll());const r=this.getNumInstances();this.state.fillModel.setInstanceCount(r),this.state.wireframeModel.setInstanceCount(r),(o||t.diskResolution!==i.diskResolution||t.vertices!==i.vertices||(t.extruded||t.stroked)!==(i.extruded||i.stroked))&&this._updateGeometry(t)}getGeometry(e,t,i){const n=new p({radius:1,height:i?2:0,vertices:t,nradial:e});let o=0;if(t)for(let s=0;s<e;s++){const i=t[s];o+=Math.sqrt(i[0]*i[0]+i[1]*i[1])/e}else o=1;return this.setState({edgeDistance:Math.cos(Math.PI/e)*o}),n}_getModels(){const e=this.getShaders(),t=this.getAttributeManager().getBufferLayouts(),i=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-fill",bufferLayout:t,isInstanced:!0})),n=new c.K(this.context.device,Object.assign({},e,{id:this.props.id+"-wireframe",bufferLayout:t,isInstanced:!0}));return{fillModel:i,wireframeModel:n,models:[n,i]}}_updateGeometry(e){let{diskResolution:t,vertices:i,extruded:n,stroked:o}=e;const s=this.getGeometry(t,i,n||o);this.setState({fillVertexCount:s.attributes.POSITION.value.length/3});const r=this.state.fillModel,a=this.state.wireframeModel;r.setGeometry(s),r.setTopology("triangle-strip"),r.setIndexBuffer(null),a.setGeometry(s),a.setTopology("line-list")}draw(e){let{uniforms:t}=e;const{lineWidthUnits:i,lineWidthScale:n,lineWidthMinPixels:o,lineWidthMaxPixels:s,radiusUnits:a,elevationScale:l,extruded:c,filled:d,stroked:h,wireframe:u,offset:p,coverage:g,radius:f,angle:m}=this.props,v=this.state.fillModel,y=this.state.wireframeModel,{fillVertexCount:_,edgeDistance:w}=this.state,b={radius:f,angle:m/180*Math.PI,offset:p,extruded:c,stroked:h,coverage:g,elevationScale:l,edgeDistance:w,radiusUnits:r.p5[a],widthUnits:r.p5[i],widthScale:n,widthMinPixels:o,widthMaxPixels:s};c&&u&&(y.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!0})}),y.draw(this.context.renderPass)),d&&(v.setVertexCount(_),v.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!1})}),v.draw(this.context.renderPass)),!c&&h&&(v.setVertexCount(2*_/3),v.shaderInputs.setProps({column:Object.assign({},b,{isStroke:!0})}),v.draw(this.context.renderPass))}}y.layerName="ColumnLayer",y.defaultProps=v;const _=y},21410:(e,t,i)=>{i.d(t,{A:()=>_});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(25337),l=i(8274),c=i(50364),d=i(1746);class h extends c.A{constructor(e){super(Object.assign({},e,{attributes:{positions:{size:3,padding:18,initialize:!0,type:e.fp64?Float64Array:Float32Array},segmentTypes:{size:1,type:Uint8ClampedArray}}}))}get(e){return this.attributes[e]}getGeometryFromBuffer(e){return this.normalize?super.getGeometryFromBuffer(e):null}normalizeGeometry(e){return this.normalize?function(e,t,i,n){let o;if(Array.isArray(e[0])){const i=e.length*t;o=new Array(i);for(let n=0;n<e.length;n++)for(let i=0;i<t;i++)o[n*t+i]=e[n][i]||0}else o=e;return i?(0,d.Mk)(o,{size:t,gridResolution:i}):n?(0,d.Iy)(o,{size:t}):o}(e,this.positionSize,this.opts.resolution,this.opts.wrapLongitude):e}getGeometrySize(e){if(u(e)){let t=0;for(const i of e)t+=this.getGeometrySize(i);return t}const t=this.getPathLength(e);return t<2?0:this.isClosed(e)?t<3?0:t+2:t}updateGeometryAttributes(e,t){if(0!==t.geometrySize)if(e&&u(e))for(const i of e){const e=this.getGeometrySize(i);t.geometrySize=e,this.updateGeometryAttributes(i,t),t.vertexStart+=e}else this._updateSegmentTypes(e,t),this._updatePositions(e,t)}_updateSegmentTypes(e,t){const i=this.attributes.segmentTypes,n=!!e&&this.isClosed(e),{vertexStart:o,geometrySize:s}=t;i.fill(0,o,o+s),n?(i[o]=4,i[o+s-2]=4):(i[o]+=1,i[o+s-2]+=2),i[o+s-1]=4}_updatePositions(e,t){const{positions:i}=this.attributes;if(!i||!e)return;const{vertexStart:n,geometrySize:o}=t,s=new Array(3);for(let r=n,a=0;a<o;r++,a++)this.getPointOnPath(e,a,s),i[3*r]=s[0],i[3*r+1]=s[1],i[3*r+2]=s[2]}getPathLength(e){return e.length/this.positionSize}getPointOnPath(e,t,i){void 0===i&&(i=[]);const{positionSize:n}=this;t*n>=e.length&&(t+=1-e.length/n);const o=t*n;return i[0]=e[o],i[1]=e[o+1],i[2]=3===n&&e[o+2]||0,i}isClosed(e){if(!this.normalize)return Boolean(this.opts.loop);const{positionSize:t}=this,i=e.length-t;return e[0]===e[i]&&e[1]===e[i+1]&&(2===t||e[2]===e[i+2])}}function u(e){return Array.isArray(e[0])}const p="uniform pathUniforms {\n  float widthScale;\n  float widthMinPixels;\n  float widthMaxPixels;\n  float jointType;\n  float capType;\n  float miterLimit;\n  bool billboard;\n  highp int widthUnits;\n} path;\n",g={name:"path",vs:p,fs:p,uniformTypes:{widthScale:"f32",widthMinPixels:"f32",widthMaxPixels:"f32",jointType:"f32",capType:"f32",miterLimit:"f32",billboard:"f32",widthUnits:"i32"}},f=[0,0,0,255],m={widthUnits:"meters",widthScale:{type:"number",min:0,value:1},widthMinPixels:{type:"number",min:0,value:0},widthMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},jointRounded:!1,capRounded:!1,miterLimit:{type:"number",min:0,value:4},billboard:!1,_pathType:null,getPath:{type:"accessor",value:e=>e.path},getColor:{type:"accessor",value:f},getWidth:{type:"accessor",value:1},rounded:{deprecatedFor:["jointRounded","capRounded"]}},v={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class y extends n.A{getShaders(){return super.getShaders({vs:"#version 300 es\n#define SHADER_NAME path-layer-vertex-shader\nin vec2 positions;\nin float instanceTypes;\nin vec3 instanceStartPositions;\nin vec3 instanceEndPositions;\nin vec3 instanceLeftPositions;\nin vec3 instanceRightPositions;\nin vec3 instanceLeftPositions64Low;\nin vec3 instanceStartPositions64Low;\nin vec3 instanceEndPositions64Low;\nin vec3 instanceRightPositions64Low;\nin float instanceStrokeWidths;\nin vec4 instanceColors;\nin vec3 instancePickingColors;\nuniform float opacity;\nout vec4 vColor;\nout vec2 vCornerOffset;\nout float vMiterLength;\nout vec2 vPathPosition;\nout float vPathLength;\nout float vJointType;\nconst float EPSILON = 0.001;\nconst vec3 ZERO_OFFSET = vec3(0.0);\nfloat flipIfTrue(bool flag) {\nreturn -(float(flag) * 2. - 1.);\n}\nvec3 getLineJoinOffset(\nvec3 prevPoint, vec3 currPoint, vec3 nextPoint,\nvec2 width\n) {\nbool isEnd = positions.x > 0.0;\nfloat sideOfPath = positions.y;\nfloat isJoint = float(sideOfPath == 0.0);\nvec3 deltaA3 = (currPoint - prevPoint);\nvec3 deltaB3 = (nextPoint - currPoint);\nmat3 rotationMatrix;\nbool needsRotation = !path.billboard && project_needs_rotation(currPoint, rotationMatrix);\nif (needsRotation) {\ndeltaA3 = deltaA3 * rotationMatrix;\ndeltaB3 = deltaB3 * rotationMatrix;\n}\nvec2 deltaA = deltaA3.xy / width;\nvec2 deltaB = deltaB3.xy / width;\nfloat lenA = length(deltaA);\nfloat lenB = length(deltaB);\nvec2 dirA = lenA > 0. ? normalize(deltaA) : vec2(0.0, 0.0);\nvec2 dirB = lenB > 0. ? normalize(deltaB) : vec2(0.0, 0.0);\nvec2 perpA = vec2(-dirA.y, dirA.x);\nvec2 perpB = vec2(-dirB.y, dirB.x);\nvec2 tangent = dirA + dirB;\ntangent = length(tangent) > 0. ? normalize(tangent) : perpA;\nvec2 miterVec = vec2(-tangent.y, tangent.x);\nvec2 dir = isEnd ? dirA : dirB;\nvec2 perp = isEnd ? perpA : perpB;\nfloat L = isEnd ? lenA : lenB;\nfloat sinHalfA = abs(dot(miterVec, perp));\nfloat cosHalfA = abs(dot(dirA, miterVec));\nfloat turnDirection = flipIfTrue(dirA.x * dirB.y >= dirA.y * dirB.x);\nfloat cornerPosition = sideOfPath * turnDirection;\nfloat miterSize = 1.0 / max(sinHalfA, EPSILON);\nmiterSize = mix(\nmin(miterSize, max(lenA, lenB) / max(cosHalfA, EPSILON)),\nmiterSize,\nstep(0.0, cornerPosition)\n);\nvec2 offsetVec = mix(miterVec * miterSize, perp, step(0.5, cornerPosition))\n* (sideOfPath + isJoint * turnDirection);\nbool isStartCap = lenA == 0.0 || (!isEnd && (instanceTypes == 1.0 || instanceTypes == 3.0));\nbool isEndCap = lenB == 0.0 || (isEnd && (instanceTypes == 2.0 || instanceTypes == 3.0));\nbool isCap = isStartCap || isEndCap;\nif (isCap) {\noffsetVec = mix(perp * sideOfPath, dir * path.capType * 4.0 * flipIfTrue(isStartCap), isJoint);\nvJointType = path.capType;\n} else {\nvJointType = path.jointType;\n}\nvPathLength = L;\nvCornerOffset = offsetVec;\nvMiterLength = dot(vCornerOffset, miterVec * turnDirection);\nvMiterLength = isCap ? isJoint : vMiterLength;\nvec2 offsetFromStartOfPath = vCornerOffset + deltaA * float(isEnd);\nvPathPosition = vec2(\ndot(offsetFromStartOfPath, perp),\ndot(offsetFromStartOfPath, dir)\n);\ngeometry.uv = vPathPosition;\nfloat isValid = step(instanceTypes, 3.5);\nvec3 offset = vec3(offsetVec * width * isValid, 0.0);\nif (needsRotation) {\noffset = rotationMatrix * offset;\n}\nreturn offset;\n}\nvoid clipLine(inout vec4 position, vec4 refPosition) {\nif (position.w < EPSILON) {\nfloat r = (EPSILON - refPosition.w) / (position.w - refPosition.w);\nposition = refPosition + (position - refPosition) * r;\n}\n}\nvoid main() {\ngeometry.pickingColor = instancePickingColors;\nvColor = vec4(instanceColors.rgb, instanceColors.a * layer.opacity);\nfloat isEnd = positions.x;\nvec3 prevPosition = mix(instanceLeftPositions, instanceStartPositions, isEnd);\nvec3 prevPosition64Low = mix(instanceLeftPositions64Low, instanceStartPositions64Low, isEnd);\nvec3 currPosition = mix(instanceStartPositions, instanceEndPositions, isEnd);\nvec3 currPosition64Low = mix(instanceStartPositions64Low, instanceEndPositions64Low, isEnd);\nvec3 nextPosition = mix(instanceEndPositions, instanceRightPositions, isEnd);\nvec3 nextPosition64Low = mix(instanceEndPositions64Low, instanceRightPositions64Low, isEnd);\ngeometry.worldPosition = currPosition;\nvec2 widthPixels = vec2(clamp(\nproject_size_to_pixel(instanceStrokeWidths * path.widthScale, path.widthUnits),\npath.widthMinPixels, path.widthMaxPixels) / 2.0);\nvec3 width;\nif (path.billboard) {\nvec4 prevPositionScreen = project_position_to_clipspace(prevPosition, prevPosition64Low, ZERO_OFFSET);\nvec4 currPositionScreen = project_position_to_clipspace(currPosition, currPosition64Low, ZERO_OFFSET, geometry.position);\nvec4 nextPositionScreen = project_position_to_clipspace(nextPosition, nextPosition64Low, ZERO_OFFSET);\nclipLine(prevPositionScreen, currPositionScreen);\nclipLine(nextPositionScreen, currPositionScreen);\nclipLine(currPositionScreen, mix(nextPositionScreen, prevPositionScreen, isEnd));\nwidth = vec3(widthPixels, 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(\nprevPositionScreen.xyz / prevPositionScreen.w,\ncurrPositionScreen.xyz / currPositionScreen.w,\nnextPositionScreen.xyz / nextPositionScreen.w,\nproject_pixel_size_to_clipspace(width.xy)\n);\nDECKGL_FILTER_GL_POSITION(currPositionScreen, geometry);\ngl_Position = vec4(currPositionScreen.xyz + offset * currPositionScreen.w, currPositionScreen.w);\n} else {\nprevPosition = project_position(prevPosition, prevPosition64Low);\ncurrPosition = project_position(currPosition, currPosition64Low);\nnextPosition = project_position(nextPosition, nextPosition64Low);\nwidth = vec3(project_pixel_size(widthPixels), 0.0);\nDECKGL_FILTER_SIZE(width, geometry);\nvec3 offset = getLineJoinOffset(prevPosition, currPosition, nextPosition, width.xy);\ngeometry.position = vec4(currPosition + offset, 1.0);\ngl_Position = project_common_position_to_clipspace(geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",fs:"#version 300 es\n#define SHADER_NAME path-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nin vec2 vCornerOffset;\nin float vMiterLength;\nin vec2 vPathPosition;\nin float vPathLength;\nin float vJointType;\nout vec4 fragColor;\nvoid main(void) {\ngeometry.uv = vPathPosition;\nif (vPathPosition.y < 0.0 || vPathPosition.y > vPathLength) {\nif (vJointType > 0.5 && length(vCornerOffset) > 1.0) {\ndiscard;\n}\nif (vJointType < 0.5 && vMiterLength > path.miterLimit + 1.0) {\ndiscard;\n}\n}\nfragColor = vColor;\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",modules:[o.A,s.A,g]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const e=!0;this.getAttributeManager().addInstanced({vertexPositions:{size:3,vertexOffset:1,type:"float64",fp64:this.use64bitPositions(),transition:v,accessor:"getPath",update:this.calculatePositions,noAlloc:e,shaderAttributes:{instanceLeftPositions:{vertexOffset:0},instanceStartPositions:{vertexOffset:1},instanceEndPositions:{vertexOffset:2},instanceRightPositions:{vertexOffset:3}}},instanceTypes:{size:1,type:"uint8",update:this.calculateSegmentTypes,noAlloc:e},instanceStrokeWidths:{size:1,accessor:"getWidth",transition:v,defaultValue:1},instanceColors:{size:this.props.colorFormat.length,type:"unorm8",accessor:"getColor",transition:v,defaultValue:f},instancePickingColors:{size:4,type:"uint8",accessor:(e,t)=>{let{index:i,target:n}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:i,n)}}}),this.setState({pathTesselator:new h({fp64:this.use64bitPositions()})})}updateState(e){super.updateState(e);const{props:t,changeFlags:i}=e,n=this.getAttributeManager();if(i.dataChanged||i.updateTriggersChanged&&(i.updateTriggersChanged.all||i.updateTriggersChanged.getPath)){const{pathTesselator:e}=this.state,o=t.data.attributes||{};e.updateGeometry({data:t.data,geometryBuffer:o.getPath,buffers:o,normalize:!t._pathType,loop:"loop"===t._pathType,getGeometry:t.getPath,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,dataChanged:i.dataChanged}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),i.dataChanged||n.invalidateAll()}var o;i.extensionsChanged&&(null==(o=this.state.model)||o.destroy(),this.state.model=this._getModel(),n.invalidateAll())}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i}=t,n=this.props.data;return n[0]&&n[0].__source&&(t.object=n.find((e=>e.__source.index===i))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let i=0;i<t.length;i++)t[i].__source.index===e&&this._disablePickingIndex(i);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{jointRounded:i,capRounded:n,billboard:o,miterLimit:s,widthUnits:a,widthScale:l,widthMinPixels:c,widthMaxPixels:d}=this.props,h=this.state.model,u={jointType:Number(i),capType:Number(n),billboard:o,widthUnits:r.p5[a],widthScale:l,miterLimit:s,widthMinPixels:c,widthMaxPixels:d};h.shaderInputs.setProps({path:u}),h.draw(this.context.renderPass)}_getModel(){return new l.K(this.context.device,Object.assign({},this.getShaders(),{id:this.props.id,bufferLayout:this.getAttributeManager().getBufferLayouts(),geometry:new a.V({topology:"triangle-list",attributes:{indices:new Uint16Array([0,1,2,1,4,2,1,3,4,3,5,4]),positions:{value:new Float32Array([0,0,0,-1,0,1,1,-1,1,1,1,0]),size:2}}}),isInstanced:!0}))}calculatePositions(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateSegmentTypes(e){const{pathTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("segmentTypes")}}y.defaultProps=m,y.layerName="PathLayer";const _=y},2714:(e,t,i)=>{i.d(t,{$q:()=>f,A4:()=>c,Dt:()=>l,S8:()=>u});var n=i(29469),o=i(1746);const s=o.rJ.CLOCKWISE,r=o.rJ.COUNTER_CLOCKWISE,a={isClosed:!0};function l(e){return"positions"in e?e.positions:e}function c(e){return"holeIndices"in e?e.holeIndices:null}function d(e,t,i,n,s){let r=t;const l=i.length;for(let o=0;o<l;o++)for(let t=0;t<n;t++)e[r++]=i[o][t]||0;if(!function(e){const t=e[0],i=e[e.length-1];return t[0]===i[0]&&t[1]===i[1]&&t[2]===i[2]}(i))for(let o=0;o<n;o++)e[r++]=i[0][o]||0;return a.start=t,a.end=r,a.size=n,(0,o.UD)(e,s,a),r}function h(e,t,i,n,s,r,l){void 0===s&&(s=0);const c=(r=r||i.length)-s;if(c<=0)return t;let d=t;for(let o=0;o<c;o++)e[d++]=i[s+o];if(!function(e,t,i,n){for(let o=0;o<t;o++)if(e[i+o]!==e[n-t+o])return!1;return!0}(i,n,s,r))for(let o=0;o<n;o++)e[d++]=i[s+o];return a.start=t,a.end=d,a.size=n,(0,o.UD)(e,l,a),d}function u(e,t){!function(e){if(e=e&&e.positions||e,!Array.isArray(e)&&!ArrayBuffer.isView(e))throw new Error("invalid polygon")}(e);const i=[],n=[];if("positions"in e){const{positions:o,holeIndices:a}=e;if(a){let e=0;for(let l=0;l<=a.length;l++)e=h(i,e,o,t,a[l-1],a[l],0===l?s:r),n.push(e);return n.pop(),{positions:i,holeIndices:n}}e=o}if(!function(e){return Array.isArray(e[0])}(e))return h(i,0,e,t,0,i.length,s),i;if(!function(e){return e.length>=1&&e[0].length>=2&&Number.isFinite(e[0][0])}(e)){let o=0;for(const[a,l]of e.entries())o=d(i,o,l,t,0===a?s:r),n.push(o);return n.pop(),{positions:i,holeIndices:n}}return d(i,0,e,t,s),i}function p(e,t,i){const n=e.length/3;let o=0;for(let s=0;s<n;s++){const r=(s+1)%n;o+=e[3*s+t]*e[3*r+i],o-=e[3*r+t]*e[3*s+i]}return Math.abs(o/2)}function g(e,t,i,n){const o=e.length/3;for(let s=0;s<o;s++){const o=3*s,r=e[o+0],a=e[o+1],l=e[o+2];e[o+t]=r,e[o+i]=a,e[o+n]=l}}function f(e,t,i,o){let s=c(e);s&&(s=s.map((e=>e/t)));let r=l(e);const a=o&&3===t;if(i){const e=r.length;r=r.slice();const n=[];for(let o=0;o<e;o+=t){n[0]=r[o],n[1]=r[o+1],a&&(n[2]=r[o+2]);const e=i(n);r[o]=e[0],r[o+1]=e[1],a&&(r[o+2]=e[2])}}if(a){const e=p(r,0,1),t=p(r,0,2),n=p(r,1,2);if(!e&&!t&&!n)return[];e>t&&e>n||(t>n?(i||(r=r.slice()),g(r,0,2,1)):(i||(r=r.slice()),g(r,2,0,1)))}return(0,n.Ay)(r,s,t)}},39738:(e,t,i)=>{i.d(t,{A:()=>S});var n=i(3002),o=i(30428),s=i(28756),r=i(8961),a=i(8274),l=i(25337),c=i(37072),d=i(2714),h=i(50364),u=i(1746);class p extends h.A{constructor(e){const{fp64:t,IndexType:i=Uint32Array}=e;super(Object.assign({},e,{attributes:{positions:{size:3,type:t?Float64Array:Float32Array},vertexValid:{type:Uint16Array,size:1},indices:{type:i,size:1}}}))}get(e){const{attributes:t}=this;return"indices"===e?t.indices&&t.indices.subarray(0,this.vertexCount):t[e]}updateGeometry(e){super.updateGeometry(e);const t=this.buffers.indices;if(t)this.vertexCount=(t.value||t).length;else if(this.data&&!this.getGeometry)throw new Error("missing indices buffer")}normalizeGeometry(e){if(this.normalize){const t=d.S8(e,this.positionSize);return this.opts.resolution?(0,u.wk)(d.Dt(t),d.A4(t),{size:this.positionSize,gridResolution:this.opts.resolution,edgeTypes:!0}):this.opts.wrapLongitude?(0,u.Eg)(d.Dt(t),d.A4(t),{size:this.positionSize,maxLatitude:86,edgeTypes:!0}):t}return e}getGeometrySize(e){if(g(e)){let t=0;for(const i of e)t+=this.getGeometrySize(i);return t}return d.Dt(e).length/this.positionSize}getGeometryFromBuffer(e){return this.normalize||!this.buffers.indices?super.getGeometryFromBuffer(e):null}updateGeometryAttributes(e,t){if(e&&g(e))for(const i of e){const e=this.getGeometrySize(i);t.geometrySize=e,this.updateGeometryAttributes(i,t),t.vertexStart+=e,t.indexStart=this.indexStarts[t.geometryIndex+1]}else{const i=e;this._updateIndices(i,t),this._updatePositions(i,t),this._updateVertexValid(i,t)}}_updateIndices(e,t){let{geometryIndex:i,vertexStart:n,indexStart:o}=t;const{attributes:s,indexStarts:r,typedArrayManager:a}=this;let l=s.indices;if(!l||!e)return;let c=o;const h=d.$q(e,this.positionSize,this.opts.preproject,this.opts.full3d);l=a.allocate(l,o+h.length,{copy:!0});for(let d=0;d<h.length;d++)l[c++]=h[d]+n;r[i+1]=o+h.length,s.indices=l}_updatePositions(e,t){let{vertexStart:i,geometrySize:n}=t;const{attributes:{positions:o},positionSize:s}=this;if(!o||!e)return;const r=d.Dt(e);for(let a=i,l=0;l<n;a++,l++){const e=r[l*s],t=r[l*s+1],i=s>2?r[l*s+2]:0;o[3*a]=e,o[3*a+1]=t,o[3*a+2]=i}}_updateVertexValid(e,t){let{vertexStart:i,geometrySize:n}=t;const{positionSize:o}=this,s=this.attributes.vertexValid,r=e&&d.A4(e);if(e&&e.edgeTypes?s.set(e.edgeTypes,i):s.fill(1,i,i+n),r)for(let a=0;a<r.length;a++)s[i+r[a]/o-1]=0;s[i+n-1]=0}}function g(e){return Array.isArray(e)&&e.length>0&&!Number.isFinite(e[0])}const f="uniform solidPolygonUniforms {\n  bool extruded;\n  bool isWireframe;\n  float elevationScale;\n} solidPolygon;\n",m={name:"solidPolygon",vs:f,fs:f,uniformTypes:{extruded:"f32",isWireframe:"f32",elevationScale:"f32"}},v="in vec4 fillColors;\nin vec4 lineColors;\nin vec3 pickingColors;\nout vec4 vColor;\nstruct PolygonProps {\nvec3 positions;\nvec3 positions64Low;\nvec3 normal;\nfloat elevations;\n};\nvec3 project_offset_normal(vec3 vector) {\nif (project.coordinateSystem == COORDINATE_SYSTEM_LNGLAT ||\nproject.coordinateSystem == COORDINATE_SYSTEM_LNGLAT_OFFSETS) {\nreturn normalize(vector * project.commonUnitsPerWorldUnit);\n}\nreturn project_normal(vector);\n}\nvoid calculatePosition(PolygonProps props) {\nvec3 pos = props.positions;\nvec3 pos64Low = props.positions64Low;\nvec3 normal = props.normal;\nvec4 colors = solidPolygon.isWireframe ? lineColors : fillColors;\ngeometry.worldPosition = props.positions;\ngeometry.pickingColor = pickingColors;\nif (solidPolygon.extruded) {\npos.z += props.elevations * solidPolygon.elevationScale;\n}\ngl_Position = project_position_to_clipspace(pos, pos64Low, vec3(0.), geometry.position);\nDECKGL_FILTER_GL_POSITION(gl_Position, geometry);\nif (solidPolygon.extruded) {\n#ifdef IS_SIDE_VERTEX\nnormal = project_offset_normal(normal);\n#else\nnormal = project_normal(normal);\n#endif\ngeometry.normal = normal;\nvec3 lightColor = lighting_getLightColor(colors.rgb, project.cameraPosition, geometry.position.xyz, geometry.normal);\nvColor = vec4(lightColor, colors.a * layer.opacity);\n} else {\nvColor = vec4(colors.rgb, colors.a * layer.opacity);\n}\nDECKGL_FILTER_COLOR(vColor, geometry);\n}\n",y="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader\nin vec3 vertexPositions;\nin vec3 vertexPositions64Low;\nin float elevations;\n"+v+"\nvoid main(void) {\nPolygonProps props;\nprops.positions = vertexPositions;\nprops.positions64Low = vertexPositions64Low;\nprops.elevations = elevations;\nprops.normal = vec3(0.0, 0.0, 1.0);\ncalculatePosition(props);\n}\n",_="#version 300 es\n#define SHADER_NAME solid-polygon-layer-vertex-shader-side\n#define IS_SIDE_VERTEX\nin vec2 positions;\nin vec3 vertexPositions;\nin vec3 nextVertexPositions;\nin vec3 vertexPositions64Low;\nin vec3 nextVertexPositions64Low;\nin float elevations;\nin float instanceVertexValid;\n"+v+"\nvoid main(void) {\nif(instanceVertexValid < 0.5){\ngl_Position = vec4(0.);\nreturn;\n}\nPolygonProps props;\nvec3 pos;\nvec3 pos64Low;\nvec3 nextPos;\nvec3 nextPos64Low;\n#if RING_WINDING_ORDER_CW == 1\npos = vertexPositions;\npos64Low = vertexPositions64Low;\nnextPos = nextVertexPositions;\nnextPos64Low = nextVertexPositions64Low;\n#else\npos = nextVertexPositions;\npos64Low = nextVertexPositions64Low;\nnextPos = vertexPositions;\nnextPos64Low = vertexPositions64Low;\n#endif\nprops.positions = mix(pos, nextPos, positions.x);\nprops.positions64Low = mix(pos64Low, nextPos64Low, positions.x);\nprops.normal = vec3(\npos.y - nextPos.y + (pos64Low.y - nextPos64Low.y),\nnextPos.x - pos.x + (nextPos64Low.x - pos64Low.x),\n0.0);\nprops.elevations = elevations * positions.y;\ncalculatePosition(props);\n}\n",w=[0,0,0,255],b={filled:!0,extruded:!1,wireframe:!1,_normalize:!0,_windingOrder:"CW",_full3d:!1,elevationScale:{type:"number",min:0,value:1},getPolygon:{type:"accessor",value:e=>e.polygon},getElevation:{type:"accessor",value:1e3},getFillColor:{type:"accessor",value:w},getLineColor:{type:"accessor",value:w},material:!0},x={enter:(e,t)=>t.length?t.subarray(t.length-e.length):e};class P extends n.A{getShaders(e){return super.getShaders({vs:"top"===e?y:_,fs:"#version 300 es\n#define SHADER_NAME solid-polygon-layer-fragment-shader\nprecision highp float;\nin vec4 vColor;\nout vec4 fragColor;\nvoid main(void) {\nfragColor = vColor;\ngeometry.uv = vec2(0.);\nDECKGL_FILTER_COLOR(fragColor, geometry);\n}\n",defines:{RING_WINDING_ORDER_CW:this.props._normalize||"CCW"!==this.props._windingOrder?1:0},modules:[o.A,c.J,s.A,m]})}get wrapLongitude(){return!1}getBounds(){var e;return null==(e=this.getAttributeManager())?void 0:e.getBounds(["vertexPositions"])}initializeState(){const{viewport:e}=this.context;let{coordinateSystem:t}=this.props;const{_full3d:i}=this.props;let n;e.isGeospatial&&t===r.rf.DEFAULT&&(t=r.rf.LNGLAT),t===r.rf.LNGLAT&&(n=i?e.projectPosition.bind(e):e.projectFlat.bind(e)),this.setState({numInstances:0,polygonTesselator:new p({preproject:n,fp64:this.use64bitPositions(),IndexType:Uint32Array})});const o=this.getAttributeManager(),s=!0;o.remove(["instancePickingColors"]),o.add({indices:{size:1,isIndexed:!0,update:this.calculateIndices,noAlloc:s},vertexPositions:{size:3,type:"float64",stepMode:"dynamic",fp64:this.use64bitPositions(),transition:x,accessor:"getPolygon",update:this.calculatePositions,noAlloc:s,shaderAttributes:{nextVertexPositions:{vertexOffset:1}}},instanceVertexValid:{size:1,type:"uint16",stepMode:"instance",update:this.calculateVertexValid,noAlloc:s},elevations:{size:1,stepMode:"dynamic",transition:x,accessor:"getElevation"},fillColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:x,accessor:"getFillColor",defaultValue:w},lineColors:{size:this.props.colorFormat.length,type:"unorm8",stepMode:"dynamic",transition:x,accessor:"getLineColor",defaultValue:w},pickingColors:{size:4,type:"uint8",stepMode:"dynamic",accessor:(e,t)=>{let{index:i,target:n}=t;return this.encodePickingColor(e&&e.__source?e.__source.index:i,n)}}})}getPickingInfo(e){const t=super.getPickingInfo(e),{index:i}=t,n=this.props.data;return n[0]&&n[0].__source&&(t.object=n.find((e=>e.__source.index===i))),t}disablePickingIndex(e){const t=this.props.data;if(t[0]&&t[0].__source)for(let i=0;i<t.length;i++)t[i].__source.index===e&&this._disablePickingIndex(i);else super.disablePickingIndex(e)}draw(e){let{uniforms:t}=e;const{extruded:i,filled:n,wireframe:o,elevationScale:s}=this.props,{topModel:r,sideModel:a,wireframeModel:l,polygonTesselator:c}=this.state,d={extruded:Boolean(i),elevationScale:s,isWireframe:!1};l&&o&&(l.setInstanceCount(c.instanceCount-1),l.shaderInputs.setProps({solidPolygon:Object.assign({},d,{isWireframe:!0})}),l.draw(this.context.renderPass)),a&&n&&(a.setInstanceCount(c.instanceCount-1),a.shaderInputs.setProps({solidPolygon:d}),a.draw(this.context.renderPass)),r&&n&&(r.setVertexCount(c.vertexCount),r.shaderInputs.setProps({solidPolygon:d}),r.draw(this.context.renderPass))}updateState(e){super.updateState(e),this.updateGeometry(e);const{props:t,oldProps:i,changeFlags:n}=e,o=this.getAttributeManager();var s;(n.extensionsChanged||t.filled!==i.filled||t.extruded!==i.extruded)&&(null==(s=this.state.models)||s.forEach((e=>e.destroy())),this.setState(this._getModels()),o.invalidateAll())}updateGeometry(e){let{props:t,oldProps:i,changeFlags:n}=e;if(n.dataChanged||n.updateTriggersChanged&&(n.updateTriggersChanged.all||n.updateTriggersChanged.getPolygon)){const{polygonTesselator:e}=this.state,i=t.data.attributes||{};e.updateGeometry({data:t.data,normalize:t._normalize,geometryBuffer:i.getPolygon,buffers:i,getGeometry:t.getPolygon,positionFormat:t.positionFormat,wrapLongitude:t.wrapLongitude,resolution:this.context.viewport.resolution,fp64:this.use64bitPositions(),dataChanged:n.dataChanged,full3d:t._full3d}),this.setState({numInstances:e.instanceCount,startIndices:e.vertexStarts}),n.dataChanged||this.getAttributeManager().invalidateAll()}}_getModels(){const{id:e,filled:t,extruded:i}=this.props;let n,o,s;if(t){const t=this.getShaders("top");t.defines.NON_INSTANCED_MODEL=1;const i=this.getAttributeManager().getBufferLayouts({isInstanced:!1});n=new a.K(this.context.device,Object.assign({},t,{id:e+"-top",topology:"triangle-list",bufferLayout:i,isIndexed:!0,userData:{excludeAttributes:{instanceVertexValid:!0}}}))}if(i){const t=this.getAttributeManager().getBufferLayouts({isInstanced:!0});o=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-side",bufferLayout:t,geometry:new l.V({topology:"triangle-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,1,1,0,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}})),s=new a.K(this.context.device,Object.assign({},this.getShaders("side"),{id:e+"-wireframe",bufferLayout:t,geometry:new l.V({topology:"line-strip",attributes:{positions:{size:2,value:new Float32Array([1,0,0,0,0,1,1,1])}}}),isInstanced:!0,userData:{excludeAttributes:{indices:!0}}}))}return{models:[o,s,n].filter(Boolean),topModel:n,sideModel:o,wireframeModel:s}}calculateIndices(e){const{polygonTesselator:t}=this.state;e.startIndices=t.indexStarts,e.value=t.get("indices")}calculatePositions(e){const{polygonTesselator:t}=this.state;e.startIndices=t.vertexStarts,e.value=t.get("positions")}calculateVertexValid(e){e.value=this.state.polygonTesselator.get("vertexValid")}}P.defaultProps=b,P.layerName="SolidPolygonLayer";const S=P},96864:(e,t,i)=>{i.d(t,{A:()=>v});var n=i(96540),o=i(36378);const s="undefined"!=typeof window?n.useLayoutEffect:n.useEffect;function r(e,t){for(;e;){if(e===t)return!0;e=Object.getPrototypeOf(e)}return!1}var a=i(49398),l=i(3002);const c={position:"absolute",zIndex:-1};function d(e,t){if("function"==typeof e)return e(t);if(Array.isArray(e))return e.map((e=>d(e,t)));if(h(e)){if(null==(i=e.props)?void 0:i.mapStyle)return t.style=c,(0,n.cloneElement)(e,t);if(function(e){const t=e.type;return t&&t.deckGLViewProps}(e))return(0,n.cloneElement)(e,t)}var i;return e}function h(e){return e&&"object"==typeof e&&"type"in e||!1}function u(e){if("function"==typeof e)return(0,n.createElement)(a.A,{},e);if(Array.isArray(e))return e.map(u);if(h(e)){if(e.type===n.Fragment)return u(e.props.children);if(r(e.type,a.A))return e}return e}const p=(0,n.createContext)();const g={mixBlendMode:null};function f(e){e.redrawReason&&(e.deck._drawLayers(e.redrawReason),e.redrawReason=null)}function m(e,t){const[i,c]=(0,n.useState)(0),m=(0,n.useRef)({control:null,version:i,forceUpdate:()=>c((e=>e+1))}).current,v=(0,n.useRef)(null),y=(0,n.useRef)(null),_=(0,n.useMemo)((()=>function(e){let{children:t,layers:i=[],views:o=null}=e;const s=[],c=[],d={};return n.Children.forEach(u(t),(e=>{if(h(e)){const t=e.type;if(r(t,l.A)){const i=function(e,t){const i={},n=e.defaultProps||{};for(const o in t)n[o]!==t[o]&&(i[o]=t[o]);return new e(i)}(t,e.props);c.push(i)}else s.push(e);if(r(t,a.A)&&t!==a.A&&e.props.id){const i=new t(e.props);d[i.id]=i}}else e&&s.push(e)})),Object.keys(d).length>0&&(Array.isArray(o)?o.forEach((e=>{d[e.id]=e})):o&&(d[o.id]=o),o=Object.values(d)),i=c.length>0?[...c,...i]:i,{layers:i,children:s,views:o}}(e)),[e.layers,e.views,e.children]);let w=!0;const b=t=>w&&e.viewState?(m.viewStateUpdateRequested=t,null):(m.viewStateUpdateRequested=null,null==e.onViewStateChange?void 0:e.onViewStateChange(t)),x=t=>{w?m.interactionStateUpdateRequested=t:(m.interactionStateUpdateRequested=null,null==e.onInteractionStateChange||e.onInteractionStateChange(t))},P=(0,n.useMemo)((()=>{const t=Object.assign({widgets:[]},e,{style:null,width:"100%",height:"100%",parent:v.current,canvas:y.current,layers:_.layers,views:_.views,onViewStateChange:b,onInteractionStateChange:x});return delete t._customRender,m.deck&&m.deck.setProps(t),t}),[e]);(0,n.useEffect)((()=>{const t=e.Deck||o.A;return m.deck=function(e,t,i){var n;const o=new t(Object.assign({},i,{_customRender:"webgpu"===(null==(n=i.deviceProps)||null==(n=n.adapters)||null==(n=n[0])?void 0:n.type)?void 0:t=>{e.redrawReason=t;const i=o.getViewports();e.lastRenderedViewports!==i?e.forceUpdate():f(e)}}));return o}(m,t,Object.assign({},P,{parent:v.current,canvas:y.current})),()=>{var e;return null==(e=m.deck)?void 0:e.finalize()}}),[]),s((()=>{var e;f(m);const{viewStateUpdateRequested:t,interactionStateUpdateRequested:i}=m;t&&b(t),i&&x(i),null!=(e=m.deck)&&e.isInitialized&&m.deck.redraw("Initial render")})),(0,n.useImperativeHandle)(t,(()=>function(e){return{get deck(){return e.deck},pickObject:t=>e.deck.pickObject(t),pickMultipleObjects:t=>e.deck.pickMultipleObjects(t),pickObjects:t=>e.deck.pickObjects(t)}}(m)),[]);const S=m.deck&&m.deck.isInitialized?m.deck.getViewports():void 0,{ContextProvider:C,width:A="100%",height:M="100%",id:T,style:j}=e,{containerStyle:E,canvasStyle:O}=(0,n.useMemo)((()=>function(e){let{width:t,height:i,style:n}=e;const o={position:"absolute",zIndex:0,left:0,top:0,width:t,height:i},s={left:0,top:0};if(n)for(const r in n)r in g?s[r]=n[r]:o[r]=n[r];return{containerStyle:o,canvasStyle:s}}({width:A,height:M,style:j})),[A,M,j]);if(!m.viewStateUpdateRequested&&m.lastRenderedViewports===S||m.version!==i){m.lastRenderedViewports=S,m.version=i;const e=function(e){let{children:t,deck:i,ContextProvider:o=p.Provider}=e;const{viewManager:s}=i||{};if(!s||!s.views.length)return[];const l={},c=s.views[0].id;for(const n of t){let e=c,t=n;h(n)&&r(n.type,a.A)&&(e=n.props.id||c,t=n.props.children);const i=s.getViewport(e),o=s.getViewState(e);if(i){o.padding=i.padding;const{x:n,y:s,width:r,height:a}=i;t=d(t,{x:n,y:s,width:r,height:a,viewport:i,viewState:o}),l[e]||(l[e]={viewport:i,children:[]}),l[e].children.push(t)}}return Object.keys(l).map((e=>{const{viewport:t,children:s}=l[e],{x:r,y:a,width:c,height:d}=t,h={position:"absolute",left:r,top:a,width:c,height:d},u="view-"+e,p=(0,n.createElement)("div",{key:u,id:u,style:h},...s),g={deck:i,viewport:t,container:i.canvas.offsetParent,eventManager:i.eventManager,onViewStateChange:t=>{t.viewId=e,i._onViewStateChange(t)},widgets:[]},f="view-"+e+"-context";return(0,n.createElement)(o,{key:f,value:g},p)}))}({children:_.children,deck:m.deck,ContextProvider:C}),t=(0,n.createElement)("canvas",{key:"canvas",id:T||"deckgl-overlay",ref:y,style:O});m.control=(0,n.createElement)("div",{id:(T||"deckgl")+"-wrapper",ref:v,style:E},[t,e])}return w=!1,m.control}const v=n.forwardRef(m)}}]);