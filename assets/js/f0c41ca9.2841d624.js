"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[806],{29173:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/carto/overview","title":"@deck.gl/carto","description":"Deck.gl is the preferred and official solution for creating modern geospatial web applications using CARTO Location Intelligence platform.","source":"@site/../docs/api-reference/carto/overview.md","sourceDirName":"api-reference/carto","slug":"/api-reference/carto/overview","permalink":"/docs/api-reference/carto/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/carto/overview.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"loadArcGISModules","permalink":"/docs/api-reference/arcgis/load-arcgis-modules"},"next":{"title":"BASEMAP","permalink":"/docs/api-reference/carto/basemap"}}');var n=a(74848),c=a(28453);const o={},s="@deck.gl/carto",i={},l=[{value:"Install package",id:"install-package",level:2},{value:"Usage",id:"usage",level:2},{value:"Automatically create layers configured in CARTO Builder",id:"automatically-create-layers-configured-in-carto-builder",level:3},{value:"Custom layers connected to CARTO datasource",id:"custom-layers-connected-to-carto-datasource",level:3},{value:"Examples",id:"examples",level:3},{value:"CARTO Layers",id:"carto-layers",level:3},{value:"CARTO Data sources",id:"carto-data-sources",level:3},{value:"Authentication",id:"authentication",level:4},{value:"Support for other deck.gl layers",id:"support-for-other-deckgl-layers",level:3}];function d(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"deckglcarto",children:"@deck.gl/carto"})}),"\n",(0,n.jsxs)(r.p,{children:["Deck.gl is the preferred and official solution for creating modern geospatial web applications using ",(0,n.jsx)(r.a,{href:"https://carto.com/",children:"CARTO Location Intelligence platform"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["With deck.gl and the ",(0,n.jsx)(r.strong,{children:"CARTO platform"})," you can directly access spatial datasets and tilesets that are hosted in your current cloud data warehouse. CARTO provides seamless integrations with Google BigQuery, Amazon Redshift, Snowflake, Databricks and PostgreSQL-compatible databases, eliminating the need to move your data into CARTO."]}),"\n",(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/CartoDB/viz-doc/master/deck.gl/img/osm_buildings.jpg"}),"\n",(0,n.jsx)(r.p,{children:"The platform integrates with the CARTO Maps API to:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Provide a geospatial backend storage for your geospatial data."}),"\n",(0,n.jsx)(r.li,{children:"Visualize large datasets overcoming browser memory limitations."}),"\n",(0,n.jsx)(r.li,{children:"Provide an SQL spatial interface to work directly with your data."}),"\n"]}),"\n",(0,n.jsx)("img",{src:"https://raw.githubusercontent.com/CartoDB/viz-doc/master/deck.gl/img/eu_rivers.jpg"}),"\n",(0,n.jsx)(r.h2,{id:"install-package",children:"Install package"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-bash",children:"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/geo-layers @deck.gl/carto\n"})}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.h3,{id:"automatically-create-layers-configured-in-carto-builder",children:"Automatically create layers configured in CARTO Builder"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:"import {Deck} from '@deck.gl/core';\nimport {fetchMap} from '@deck.gl/carto';\n\nconst cartoMapId = 'ff6ac53f-741a-49fb-b615-d040bc5a96b8';\nfetchMap({cartoMapId}).then(map => new Deck(map));\n"})}),"\n",(0,n.jsx)(r.h3,{id:"custom-layers-connected-to-carto-datasource",children:"Custom layers connected to CARTO datasource"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",children:"import {DeckGL} from '@deck.gl/react';\nimport {VectorTileLayer} from '@deck.gl/carto';\nimport {vectorQuerySource} from '@carto/api-client';\n\nfunction App() {\n  const data = vectorQuerySource({\n    accessToken: 'XXX',\n    connectionName: 'carto_dw',\n    sqlQuery: 'SELECT * FROM cartobq.testtables.points_10k',\n  });\n\n  const layer = new VectorTileLayer({\n    data,\n    pointRadiusMinPixels: 2,\n    getLineColor: [0, 0, 0, 200],\n    getFillColor: [238, 77, 90],\n    lineWidthMinPixels: 1\n  });\n\n  return <DeckGL layers={[layer]} />;\n}\n"})}),"\n",(0,n.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsxs)(r.p,{children:["You can view a collection of working examples on the ",(0,n.jsx)(r.a,{href:"https://docs.carto.com/carto-for-developers/carto-for-deck.gl/examples",children:"CARTO documentation website"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"carto-layers",children:"CARTO Layers"}),"\n",(0,n.jsxs)(r.p,{children:["The CARTO module contains a number of custom layers which can be used to visualize the data, which work in conjunction with the ",(0,n.jsx)(r.a,{href:"#carto-data-sources",children:"data source"})," functions:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/h3-tile-layer",children:"H3TileLayer"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/heatmap-tile-layer",children:"HeatmapTileLayer"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/quadbin-tile-layer",children:"QuadbinTileLayer"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/raster-tile-layer",children:"RasterTileLayer"})}),"\n",(0,n.jsx)(r.li,{children:(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/vector-tile-layer",children:"VectorTileLayer"})}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"carto-data-sources",children:"CARTO Data sources"}),"\n",(0,n.jsxs)(r.p,{children:["There are a number of ",(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/data-sources",children:"data source functions"})," for accessing data from the CARTO platform. These provide a simple way to fetch data from the CARTO platform, which can then be used with deck.gl layers."]}),"\n",(0,n.jsx)(r.h4,{id:"authentication",children:"Authentication"}),"\n",(0,n.jsxs)(r.p,{children:["When defining a ",(0,n.jsx)(r.a,{href:"/docs/api-reference/carto/data-sources",children:"data source"})," it is necessary to provide a:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"accessToken"}),": token to ",(0,n.jsx)(r.a,{href:"https://docs.carto.com/carto-for-developers/key-concepts/authentication-methods",children:"authenticate/authorize requests"})," to the CARTO API,"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"connectionName"}),": name of ",(0,n.jsx)(r.a,{href:"https://docs.carto.com/carto-for-developers/key-concepts/connections",children:"connection"})," configured in the CARTO platform."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"support-for-other-deckgl-layers",children:"Support for other deck.gl layers"}),"\n",(0,n.jsxs)(r.p,{children:["The CARTO module includes a ",(0,n.jsx)(r.a,{href:"#carto-layers",children:"collection of layers"})," for easy visualization of data from the CARTO platfrom. For performace and scalability, this data is served as tiles."]}),"\n",(0,n.jsxs)(r.p,{children:["It is also straightforward to request data directly using the CARTO ",(0,n.jsx)(r.a,{href:"https://docs.carto.com/carto-for-developers/key-concepts/apis#sql",children:"SQL API"}),". It can then be integrated with other deck.gl layers, for example:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",children:"import {DeckGL} from '@deck.gl/react';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {query} from '@deck.gl/carto';\n\nfunction App() {\n  const data = query({\n    accessToken: 'XXX',\n    connectionName: 'carto_dw',\n    sqlQuery: 'SELECT * FROM cartobq.testtables.points_10k',\n  });\n\n  const layer = new ScatterplotLayer({\n    data,\n    dataTransform: data => data.rows,\n    getPosition: d => d.geom.coordinates,\n    getRadius: d => d.size\n  });\n\n  return <DeckGL layers={[layer]} />;\n}\n"})})]})}function h(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,r,a)=>{a.d(r,{R:()=>o,x:()=>s});var t=a(96540);const n={},c=t.createContext(n);function o(e){const r=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(c.Provider,{value:r},e.children)}}}]);